/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	__webpack_require__(1);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var _App = __webpack_require__(165);

	var _App2 = _interopRequireDefault(_App);

	_react2['default'].render(_react2['default'].createElement(_App2['default'], null), document.getElementById('content'));

/***/ },
/* 1 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 2 */,
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(10);


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var EventPluginUtils = __webpack_require__(12);
	var ReactChildren = __webpack_require__(16);
	var ReactComponent = __webpack_require__(30);
	var ReactClass = __webpack_require__(45);
	var ReactContext = __webpack_require__(20);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactElement = __webpack_require__(19);
	var ReactElementValidator = __webpack_require__(40);
	var ReactDOM = __webpack_require__(48);
	var ReactDOMTextComponent = __webpack_require__(50);
	var ReactDefaultInjection = __webpack_require__(99);
	var ReactInstanceHandles = __webpack_require__(27);
	var ReactMount = __webpack_require__(75);
	var ReactPerf = __webpack_require__(36);
	var ReactPropTypes = __webpack_require__(130);
	var ReactReconciler = __webpack_require__(37);
	var ReactServerRendering = __webpack_require__(162);

	var assign = __webpack_require__(21);
	var findDOMNode = __webpack_require__(119);
	var onlyChild = __webpack_require__(164);

	ReactDefaultInjection.inject();

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if ("production" !== process.env.NODE_ENV) {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var render = ReactPerf.measure('React', 'render', ReactMount.render);

	var React = {
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    only: onlyChild
	  },
	  Component: ReactComponent,
	  DOM: ReactDOM,
	  PropTypes: ReactPropTypes,
	  initializeTouchEvents: function(shouldUseTouch) {
	    EventPluginUtils.useTouchEvents = shouldUseTouch;
	  },
	  createClass: ReactClass.createClass,
	  createElement: createElement,
	  cloneElement: cloneElement,
	  createFactory: createFactory,
	  createMixin: function(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
	  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
	  findDOMNode: findDOMNode,
	  render: render,
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  isValidElement: ReactElement.isValidElement,
	  withContext: ReactContext.withContext,

	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}

	if ("production" !== process.env.NODE_ENV) {
	  var ExecutionEnvironment = __webpack_require__(59);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // If we're in Chrome, look for the devtools marker and provide a download
	    // link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1) {
	      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	        console.debug(
	          'Download the React DevTools for a better development experience: ' +
	          'https://fb.me/react-devtools'
	        );
	      }
	    }

	    var expectedFeatures = [
	      // shims
	      Array.isArray,
	      Array.prototype.every,
	      Array.prototype.forEach,
	      Array.prototype.indexOf,
	      Array.prototype.map,
	      Date.now,
	      Function.prototype.bind,
	      Object.keys,
	      String.prototype.split,
	      String.prototype.trim,

	      // shams
	      Object.create,
	      Object.freeze
	    ];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error(
	          'One or more ES5 shim/shams expected by React are not available: ' +
	          'https://fb.me/react-warning-polyfills'
	        );
	        break;
	      }
	    }
	  }
	}

	React.version = '0.13.3';

	module.exports = React;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 11 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            currentQueue[queueIndex].run();
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	// TODO(shtylman)
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);

	var invariant = __webpack_require__(15);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function(InjectedMount) {
	    injection.Mount = InjectedMount;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        InjectedMount && InjectedMount.getNode,
	        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
	        'is missing getNode.'
	      ) : invariant(InjectedMount && InjectedMount.getNode));
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp ||
	         topLevelType === topLevelTypes.topTouchEnd ||
	         topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove ||
	         topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown ||
	         topLevelType === topLevelTypes.topTouchStart;
	}


	var validateEventDispatches;
	if ("production" !== process.env.NODE_ENV) {
	  validateEventDispatches = function(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ?
	      dispatchListeners.length :
	      dispatchListeners ? 1 : 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      idsIsArr === listenersIsArr && IDsLen === listenersLen,
	      'EventPluginUtils: Invalid `event`.'
	    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
	  };
	}

	/**
	 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
	 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
	 * kept separate to conserve memory.
	 */
	function forEachEventDispatch(event, cb) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      cb(event, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    cb(event, dispatchListeners, dispatchIDs);
	  }
	}

	/**
	 * Default implementation of PluginModule.executeDispatch().
	 * @param {SyntheticEvent} SyntheticEvent to handle
	 * @param {function} Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, listener, domID) {
	  event.currentTarget = injection.Mount.getNode(domID);
	  var returnValue = listener(event, domID);
	  event.currentTarget = null;
	  return returnValue;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, cb) {
	  forEachEventDispatch(event, cb);
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return id of the first dispatch execution who's listener returns true, or
	 * null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(dispatchListener),
	    'executeDirectDispatch(...): Invalid `event`.'
	  ) : invariant(!Array.isArray(dispatchListener)));
	  var res = dispatchListener ?
	    dispatchListener(event, dispatchID) :
	    null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {bool} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatch: executeDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	  injection: injection,
	  useTouchEvents: false
	};

	module.exports = EventPluginUtils;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(14);

	var PropagationPhases = keyMirror({bubbled: null, captured: null});

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topBlur: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topReset: null,
	  topScroll: null,
	  topSelectionChange: null,
	  topSubmit: null,
	  topTextInput: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function(obj) {
	  var ret = {};
	  var key;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    obj instanceof Object && !Array.isArray(obj),
	    'keyMirror(...): Argument must be an object.'
	  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */

	"use strict";

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        'Invariant Violation: ' +
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);
	var ReactFragment = __webpack_require__(18);

	var traverseAllChildren = __webpack_require__(26);
	var warning = __webpack_require__(23);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var threeArgumentPooler = PooledClass.threeArgumentPooler;

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.forEachFunction = forEachFunction;
	  this.forEachContext = forEachContext;
	}
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(traverseContext, child, name, i) {
	  var forEachBookKeeping = traverseContext;
	  forEachBookKeeping.forEachFunction.call(
	    forEachBookKeeping.forEachContext, child, i);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc.
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }

	  var traverseContext =
	    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, mapFunction, mapContext) {
	  this.mapResult = mapResult;
	  this.mapFunction = mapFunction;
	  this.mapContext = mapContext;
	}
	PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

	function mapSingleChildIntoContext(traverseContext, child, name, i) {
	  var mapBookKeeping = traverseContext;
	  var mapResult = mapBookKeeping.mapResult;

	  var keyUnique = !mapResult.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'ReactChildren.map(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }

	  if (keyUnique) {
	    var mappedChild =
	      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
	    mapResult[name] = mappedChild;
	  }
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * TODO: This may likely break any calls to `ReactChildren.map` that were
	 * previously relying on the fact that we guarded against null children.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} mapFunction.
	 * @param {*} mapContext Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }

	  var mapResult = {};
	  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	  return ReactFragment.create(mapResult);
	}

	function forEachSingleChildDummy(traverseContext, child, name, i) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  count: countChildren
	};

	module.exports = ReactChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function(instance) {
	  var Klass = this;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    instance instanceof Klass,
	    'Trying to release an instance into a pool of a different type.'
	  ) : invariant(instance instanceof Klass));
	  if (instance.destructor) {
	    instance.destructor();
	  }
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule ReactFragment
	*/

	'use strict';

	var ReactElement = __webpack_require__(19);

	var warning = __webpack_require__(23);

	/**
	 * We used to allow keyed objects to serve as a collection of ReactElements,
	 * or nested sets. This allowed us a way to explicitly key a set a fragment of
	 * components. This is now being replaced with an opaque data structure.
	 * The upgrade path is to call React.addons.createFragment({ key: value }) to
	 * create a keyed fragment. The resulting data structure is opaque, for now.
	 */

	if ("production" !== process.env.NODE_ENV) {
	  var fragmentKey = '_reactFragment';
	  var didWarnKey = '_reactDidWarn';
	  var canWarnForReactFragment = false;

	  try {
	    // Feature test. Don't even try to issue this warning if we can't use
	    // enumerable: false.

	    var dummy = function() {
	      return 1;
	    };

	    Object.defineProperty(
	      {},
	      fragmentKey,
	      {enumerable: false, value: true}
	    );

	    Object.defineProperty(
	      {},
	      'key',
	      {enumerable: true, get: dummy}
	    );

	    canWarnForReactFragment = true;
	  } catch (x) { }

	  var proxyPropertyAccessWithWarning = function(obj, key) {
	    Object.defineProperty(obj, key, {
	      enumerable: true,
	      get: function() {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an opaque type. Accessing any of its ' +
	          'properties is deprecated. Pass it to one of the React.Children ' +
	          'helpers.'
	        ) : null);
	        this[didWarnKey] = true;
	        return this[fragmentKey][key];
	      },
	      set: function(value) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an immutable opaque type. Mutating its ' +
	          'properties is deprecated.'
	        ) : null);
	        this[didWarnKey] = true;
	        this[fragmentKey][key] = value;
	      }
	    });
	  };

	  var issuedWarnings = {};

	  var didWarnForFragment = function(fragment) {
	    // We use the keys and the type of the value as a heuristic to dedupe the
	    // warning to avoid spamming too much.
	    var fragmentCacheKey = '';
	    for (var key in fragment) {
	      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';
	    }
	    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];
	    issuedWarnings[fragmentCacheKey] = true;
	    return alreadyWarnedOnce;
	  };
	}

	var ReactFragment = {
	  // Wrap a keyed object in an opaque proxy that warns you if you access any
	  // of its properties.
	  create: function(object) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (typeof object !== 'object' || !object || Array.isArray(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment only accepts a single object.',
	          object
	        ) : null);
	        return object;
	      }
	      if (ReactElement.isValidElement(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment does not accept a ReactElement ' +
	          'without a wrapper object.'
	        ) : null);
	        return object;
	      }
	      if (canWarnForReactFragment) {
	        var proxy = {};
	        Object.defineProperty(proxy, fragmentKey, {
	          enumerable: false,
	          value: object
	        });
	        Object.defineProperty(proxy, didWarnKey, {
	          writable: true,
	          enumerable: false,
	          value: false
	        });
	        for (var key in object) {
	          proxyPropertyAccessWithWarning(proxy, key);
	        }
	        Object.preventExtensions(proxy);
	        return proxy;
	      }
	    }
	    return object;
	  },
	  // Extract the original keyed object from the fragment opaque type. Warn if
	  // a plain object is passed here.
	  extract: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        if (!fragment[fragmentKey]) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnForFragment(fragment),
	            'Any use of a keyed object should be wrapped in ' +
	            'React.addons.createFragment(object) before being passed as a ' +
	            'child.'
	          ) : null);
	          return fragment;
	        }
	        return fragment[fragmentKey];
	      }
	    }
	    return fragment;
	  },
	  // Check if this is a fragment and if so, extract the keyed object. If it
	  // is a fragment-like object, warn that it should be wrapped. Ignore if we
	  // can't determine what kind of object this is.
	  extractIfFragment: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        // If it is the opaque type, return the keyed object.
	        if (fragment[fragmentKey]) {
	          return fragment[fragmentKey];
	        }
	        // Otherwise, check each property if it has an element, if it does
	        // it is probably meant as a fragment, so we can warn early. Defer,
	        // the warning to extract.
	        for (var key in fragment) {
	          if (fragment.hasOwnProperty(key) &&
	              ReactElement.isValidElement(fragment[key])) {
	            // This looks like a fragment object, we should provide an
	            // early warning.
	            return ReactFragment.extract(fragment);
	          }
	        }
	      }
	    }
	    return fragment;
	  }
	};

	module.exports = ReactFragment;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var ReactContext = __webpack_require__(20);
	var ReactCurrentOwner = __webpack_require__(25);

	var assign = __webpack_require__(21);
	var warning = __webpack_require__(23);

	var RESERVED_PROPS = {
	  key: true,
	  ref: true
	};

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} object
	 * @param {string} key
	 */
	function defineWarningProperty(object, key) {
	  Object.defineProperty(object, key, {

	    configurable: false,
	    enumerable: true,

	    get: function() {
	      if (!this._store) {
	        return null;
	      }
	      return this._store[key];
	    },

	    set: function(value) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        false,
	        'Don\'t set the %s property of the React element. Instead, ' +
	        'specify the correct value when initially creating the element.',
	        key
	      ) : null);
	      this._store[key] = value;
	    }

	  });
	}

	/**
	 * This is updated to true if the membrane is successfully created.
	 */
	var useMutationMembrane = false;

	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} element
	 */
	function defineMutationMembrane(prototype) {
	  try {
	    var pseudoFrozenProperties = {
	      props: true
	    };
	    for (var key in pseudoFrozenProperties) {
	      defineWarningProperty(prototype, key);
	    }
	    useMutationMembrane = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {string|object} ref
	 * @param {*} key
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function(type, key, ref, owner, context, props) {
	  // Built-in properties that belong on the element
	  this.type = type;
	  this.key = key;
	  this.ref = ref;

	  // Record the component responsible for creating this element.
	  this._owner = owner;

	  // TODO: Deprecate withContext, and then the context becomes accessible
	  // through the owner.
	  this._context = context;

	  if ("production" !== process.env.NODE_ENV) {
	    // The validation flag and props are currently mutative. We put them on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    this._store = {props: props, originalProps: assign({}, props)};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    try {
	      Object.defineProperty(this._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true
	      });
	    } catch (x) {
	    }
	    this._store.validated = false;

	    // We're not allowed to set props directly on the object so we early
	    // return and rely on the prototype membrane to forward to the backing
	    // store.
	    if (useMutationMembrane) {
	      Object.freeze(this);
	      return;
	    }
	  }

	  this.props = props;
	};

	// We intentionally don't expose the function on the constructor property.
	// ReactElement should be indistinguishable from a plain object.
	ReactElement.prototype = {
	  _isReactElement: true
	};

	if ("production" !== process.env.NODE_ENV) {
	  defineMutationMembrane(ReactElement.prototype);
	}

	ReactElement.createElement = function(type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;

	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }

	  return new ReactElement(
	    type,
	    key,
	    ref,
	    ReactCurrentOwner.current,
	    ReactContext.current,
	    props
	  );
	};

	ReactElement.createFactory = function(type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
	  var newElement = new ReactElement(
	    oldElement.type,
	    oldElement.key,
	    oldElement.ref,
	    oldElement._owner,
	    oldElement._context,
	    newProps
	  );

	  if ("production" !== process.env.NODE_ENV) {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	  return newElement;
	};

	ReactElement.cloneElement = function(element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return new ReactElement(
	    element.type,
	    key,
	    ref,
	    owner,
	    element._context,
	    props
	  );
	};

	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function(object) {
	  // ReactTestUtils is often used outside of beforeEach where as React is
	  // within it. This leads to two different instances of React on the same
	  // page. To identify a element from a different React instance we use
	  // a flag instead of an instanceof check.
	  var isElement = !!(object && object._isReactElement);
	  // if (isElement && !(object instanceof ReactElement)) {
	  // This is an indicator that you're using multiple versions of React at the
	  // same time. This will screw with ownership and stuff. Fix it, please.
	  // TODO: We could possibly warn here.
	  // }
	  return isElement;
	};

	module.exports = ReactElement;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactContext
	 */

	'use strict';

	var assign = __webpack_require__(21);
	var emptyObject = __webpack_require__(22);
	var warning = __webpack_require__(23);

	var didWarn = false;

	/**
	 * Keeps track of the current context.
	 *
	 * The context is automatically passed down the component ownership hierarchy
	 * and is accessible via `this.context` on ReactCompositeComponents.
	 */
	var ReactContext = {

	  /**
	   * @internal
	   * @type {object}
	   */
	  current: emptyObject,

	  /**
	   * Temporarily extends the current context while executing scopedCallback.
	   *
	   * A typical use case might look like
	   *
	   *  render: function() {
	   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
	   *
	   *    ));
	   *    return <div>{children}</div>;
	   *  }
	   *
	   * @param {object} newContext New context to merge into the existing context
	   * @param {function} scopedCallback Callback to run with the new context
	   * @return {ReactComponent|array<ReactComponent>}
	   */
	  withContext: function(newContext, scopedCallback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        didWarn,
	        'withContext is deprecated and will be removed in a future version. ' +
	        'Use a wrapper component with getChildContext instead.'
	      ) : null);

	      didWarn = true;
	    }

	    var result;
	    var previousContext = ReactContext.current;
	    ReactContext.current = assign({}, previousContext, newContext);
	    try {
	      result = scopedCallback();
	    } finally {
	      ReactContext.current = previousContext;
	    }
	    return result;
	  }

	};

	module.exports = ReactContext;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */

	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

	'use strict';

	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }

	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;

	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }

	    var from = Object(nextSource);

	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.

	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }

	  return to;
	}

	module.exports = assign;


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */

	"use strict";

	var emptyObject = {};

	if ("production" !== process.env.NODE_ENV) {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */

	"use strict";

	var emptyFunction = __webpack_require__(24);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if ("production" !== process.env.NODE_ENV) {
	  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || /^[s\W]*$/.test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});
	      console.warn(message);
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 24 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */

	function makeEmptyFunction(arg) {
	  return function() {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function() { return this; };
	emptyFunction.thatReturnsArgument = function(arg) { return arg; };

	module.exports = emptyFunction;


/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 *
	 * The depth indicate how many composite components are above this render level.
	 */
	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactFragment = __webpack_require__(18);
	var ReactInstanceHandles = __webpack_require__(27);

	var getIteratorFn = __webpack_require__(29);
	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};

	var userProvidedKeyEscapeRegex = /[=.:]/g;

	var didWarnAboutMaps = false;

	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} key Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(
	    userProvidedKeyEscapeRegex,
	    userProvidedKeyEscaper
	  );
	}

	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!number} indexSoFar Number of children encountered until this point.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(
	  children,
	  nameSoFar,
	  indexSoFar,
	  callback,
	  traverseContext
	) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null ||
	      type === 'string' ||
	      type === 'number' ||
	      ReactElement.isValidElement(children)) {
	    callback(
	      traverseContext,
	      children,
	      // If it's the only child, treat the name as if it was wrapped in an array
	      // so that it's consistent if the number of children grows.
	      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
	      indexSoFar
	    );
	    return 1;
	  }

	  var child, nextName, nextIndex;
	  var subtreeCount = 0; // Count of children found in the current subtree.

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = (
	        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	        getComponentKey(child, i)
	      );
	      nextIndex = indexSoFar + subtreeCount;
	      subtreeCount += traverseAllChildrenImpl(
	        child,
	        nextName,
	        nextIndex,
	        callback,
	        traverseContext
	      );
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            getComponentKey(child, ii++)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      } else {
	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnAboutMaps,
	            'Using Maps as children is not yet fully supported. It is an ' +
	            'experimental feature that might be removed. Convert it to a ' +
	            'sequence / iterable of keyed ReactElements instead.'
	          ) : null);
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = (
	              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +
	              getComponentKey(child, 0)
	            );
	            nextIndex = indexSoFar + subtreeCount;
	            subtreeCount += traverseAllChildrenImpl(
	              child,
	              nextName,
	              nextIndex,
	              callback,
	              traverseContext
	            );
	          }
	        }
	      }
	    } else if (type === 'object') {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        children.nodeType !== 1,
	        'traverseAllChildren(...): Encountered an invalid child; DOM ' +
	        'elements are not valid children of React components.'
	      ) : invariant(children.nodeType !== 1));
	      var fragment = ReactFragment.extract(children);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          child = fragment[key];
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            wrapUserProvidedKey(key) + SUBSEPARATOR +
	            getComponentKey(child, 0)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      }
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
	}

	module.exports = traverseAllChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */

	'use strict';

	var ReactRootIndex = __webpack_require__(28);

	var invariant = __webpack_require__(15);

	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;

	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 100;

	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}

	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}

	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || (
	    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
	  );
	}

	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return (
	    descendantID.indexOf(ancestorID) === 0 &&
	    isBoundary(descendantID, ancestorID.length)
	  );
	}

	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}

	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(ancestorID) && isValidID(destinationID),
	    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
	    ancestorID,
	    destinationID
	  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isAncestorIDOf(ancestorID, destinationID),
	    'getNextDescendantID(...): React has made an invalid assumption about ' +
	    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
	    ancestorID,
	    destinationID
	  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}

	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(longestCommonID),
	    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
	    oneID,
	    twoID,
	    longestCommonID
	  ) : invariant(isValidID(longestCommonID)));
	  return longestCommonID;
	}

	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  ("production" !== process.env.NODE_ENV ? invariant(
	    start !== stop,
	    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
	    start
	  ) : invariant(start !== stop));
	  var traverseUp = isAncestorIDOf(stop, start);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    traverseUp || isAncestorIDOf(start, stop),
	    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
	    'not have a parent path.',
	    start,
	    stop
	  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start; /* until break */; id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      depth++ < MAX_TREE_DEPTH,
	      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
	      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
	      start, stop
	    ) : invariant(depth++ < MAX_TREE_DEPTH));
	  }
	}

	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {

	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function() {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },

	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function(rootID, name) {
	    return rootID + name;
	  },

	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function(id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },

	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },

	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },

	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function(targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getFirstCommonAncestorID: getFirstCommonAncestorID,

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,

	  isAncestorIDOf: isAncestorIDOf,

	  SEPARATOR: SEPARATOR

	};

	module.exports = ReactInstanceHandles;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 28 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function(_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};

	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};

	module.exports = ReactRootIndex;


/***/ },
/* 29 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */

	'use strict';

	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (
	    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])
	  );
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var ReactUpdateQueue = __webpack_require__(31);

	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context) {
	  this.props = props;
	  this.context = context;
	}

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function(partialState, callback) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof partialState === 'object' ||
	    typeof partialState === 'function' ||
	    partialState == null,
	    'setState(...): takes an object of state variables to update or a ' +
	    'function which returns an object of state variables.'
	  ) : invariant(typeof partialState === 'object' ||
	  typeof partialState === 'function' ||
	  partialState == null));
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      partialState != null,
	      'setState(...): You passed an undefined or null state object; ' +
	      'instead, use forceUpdate().'
	    ) : null);
	  }
	  ReactUpdateQueue.enqueueSetState(this, partialState);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function(callback) {
	  ReactUpdateQueue.enqueueForceUpdate(this);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if ("production" !== process.env.NODE_ENV) {
	  var deprecatedAPIs = {
	    getDOMNode: [
	      'getDOMNode',
	      'Use React.findDOMNode(component) instead.'
	    ],
	    isMounted: [
	      'isMounted',
	      'Instead, make sure to clean up subscriptions and pending requests in ' +
	      'componentWillUnmount to prevent memory leaks.'
	    ],
	    replaceProps: [
	      'replaceProps',
	      'Instead, call React.render again at the top level.'
	    ],
	    replaceState: [
	      'replaceState',
	      'Refactor your code to use setState instead (see ' +
	      'https://github.com/facebook/react/issues/3236).'
	    ],
	    setProps: [
	      'setProps',
	      'Instead, call React.render again at the top level.'
	    ]
	  };
	  var defineDeprecationWarning = function(methodName, info) {
	    try {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function() {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            '%s(...) is deprecated in plain JavaScript React classes. %s',
	            info[0],
	            info[1]
	          ) : null);
	          return undefined;
	        }
	      });
	    } catch (x) {
	      // IE will fail on defineProperty (es5-shim/sham too)
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var ReactLifeCycle = __webpack_require__(32);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactElement = __webpack_require__(19);
	var ReactInstanceMap = __webpack_require__(33);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	function enqueueUpdate(internalInstance) {
	  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {
	    // If we're in a componentWillMount handler, don't enqueue a rerender
	    // because ReactUpdates assumes we're in a browser context (which is
	    // wrong for server rendering) and we're about to do a render anyway.
	    // See bug in #1740.
	    ReactUpdates.enqueueUpdate(internalInstance);
	  }
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactCurrentOwner.current == null,
	    '%s(...): Cannot update during an existing state transition ' +
	    '(such as within `render`). Render methods should be a pure function ' +
	    'of props and state.',
	    callerName
	  ) : invariant(ReactCurrentOwner.current == null));

	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if ("production" !== process.env.NODE_ENV) {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !callerName,
	        '%s(...): Can only update a mounted or mounting component. ' +
	        'This usually means you called %s() on an unmounted ' +
	        'component. This is a no-op.',
	        callerName,
	        callerName
	      ) : null);
	    }
	    return null;
	  }

	  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {
	    return null;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function(publicInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance ||
	        internalInstance === ReactLifeCycle.currentlyMountingInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function(internalInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldUpdateComponent`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'forceUpdate'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceState'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function(publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setState'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    var queue =
	      internalInstance._pendingStateQueue ||
	      (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function(publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setProps'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'setProps(...): You called `setProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    var props = assign({}, element.props, partialProps);
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function(publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceProps'
	    );

	    if (!internalInstance) {
	      return;
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'replaceProps(...): You called `replaceProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));

	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function(internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }

	};

	module.exports = ReactUpdateQueue;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 32 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactLifeCycle
	 */

	'use strict';

	/**
	 * This module manages the bookkeeping when a component is in the process
	 * of being mounted or being unmounted. This is used as a way to enforce
	 * invariants (or warnings) when it is not recommended to call
	 * setState/forceUpdate.
	 *
	 * currentlyMountingInstance: During the construction phase, it is not possible
	 * to trigger an update since the instance is not fully mounted yet. However, we
	 * currently allow this as a convenience for mutating the initial state.
	 *
	 * currentlyUnmountingInstance: During the unmounting phase, the instance is
	 * still mounted and can therefore schedule an update. However, this is not
	 * recommended and probably an error since it's about to be unmounted.
	 * Therefore we still want to trigger in an error for that case.
	 */

	var ReactLifeCycle = {
	  currentlyMountingInstance: null,
	  currentlyUnmountingInstance: null
	};

	module.exports = ReactLifeCycle;


/***/ },
/* 33 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function(key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function(key) {
	    return key._reactInternalInstance;
	  },

	  has: function(key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function(key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(35);
	var PooledClass = __webpack_require__(17);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactPerf = __webpack_require__(36);
	var ReactReconciler = __webpack_require__(37);
	var Transaction = __webpack_require__(44);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
	    'ReactUpdates: must inject a reconcile transaction class and batching ' +
	    'strategy'
	  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
	}

	var NESTED_UPDATES = {
	  initialize: function() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function() {
	    this.callbackQueue.reset();
	  },
	  close: function() {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction =
	    ReactUpdates.ReactReconcileTransaction.getPooled();
	}

	assign(
	  ReactUpdatesFlushTransaction.prototype,
	  Transaction.Mixin, {
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(
	      this,
	      this.reconcileTransaction.perform,
	      this.reconcileTransaction,
	      method,
	      scope,
	      a
	    );
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    len === dirtyComponents.length,
	    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
	    'match dirty-components array length (%s).',
	    len,
	    dirtyComponents.length
	  ) : invariant(len === dirtyComponents.length));

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    ReactReconciler.performUpdateIfNecessary(
	      component,
	      transaction.reconcileTransaction
	    );

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(
	          callbacks[j],
	          component.getPublicInstance()
	        );
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure(
	  'ReactUpdates',
	  'flushBatchedUpdates',
	  flushBatchedUpdates
	);

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	  ("production" !== process.env.NODE_ENV ? warning(
	    ReactCurrentOwner.current == null,
	    'enqueueUpdate(): Render methods should be a pure function of props ' +
	    'and state; triggering nested component updates from render is not ' +
	    'allowed. If necessary, trigger nested updates in ' +
	    'componentDidUpdate.'
	  ) : null);

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    batchingStrategy.isBatchingUpdates,
	    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
	    'updates are not being batched.'
	  ) : invariant(batchingStrategy.isBatchingUpdates));
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function(ReconcileTransaction) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReconcileTransaction,
	      'ReactUpdates: must provide a reconcile transaction class'
	    ) : invariant(ReconcileTransaction));
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function(_batchingStrategy) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      _batchingStrategy,
	      'ReactUpdates: must provide a batching strategy'
	    ) : invariant(_batchingStrategy));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.batchedUpdates === 'function',
	      'ReactUpdates: must provide a batchedUpdates() function'
	    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
	      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
	    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        callbacks.length === contexts.length,
	        'Mismatched list of contexts in callback queue'
	      ) : invariant(callbacks.length === contexts.length));
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0, l = callbacks.length; i < l; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function() {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function() {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,

	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,

	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function(object, objectName, methodNames) {
	    if ("production" !== process.env.NODE_ENV) {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(
	          objectName,
	          methodNames[key],
	          object[key]
	        );
	      }
	    }
	  },

	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function(objName, fnName, func) {
	    if ("production" !== process.env.NODE_ENV) {
	      var measuredFunc = null;
	      var wrapper = function() {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },

	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function(measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};

	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}

	module.exports = ReactPerf;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var ReactRef = __webpack_require__(38);
	var ReactElementValidator = __webpack_require__(40);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(
	        internalInstance._currentElement
	      );
	    }
	    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function(internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function(
	    internalInstance, nextElement, transaction, context
	  ) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && nextElement._owner != null) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	      return;
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(
	      prevElement,
	      nextElement
	    );

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(
	    internalInstance,
	    transaction
	  ) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }

	};

	module.exports = ReactReconciler;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(39);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  return (
	    nextElement._owner !== prevElement._owner ||
	    nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function(object) {
	    return !!(
	      (object &&
	      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')
	    );
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to add a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to remove a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactFragment = __webpack_require__(18);
	var ReactPropTypeLocations = __webpack_require__(41);
	var ReactPropTypeLocationNames = __webpack_require__(42);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactNativeComponent = __webpack_require__(43);

	var getIteratorFn = __webpack_require__(29);
	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	var loggedTypeFailures = {};

	var NUMERIC_PROPERTY_REGEX = /^\d+$/;

	/**
	 * Gets the instance's name for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getName(instance) {
	  var publicInstance = instance && instance.getPublicInstance();
	  if (!publicInstance) {
	    return undefined;
	  }
	  var constructor = publicInstance.constructor;
	  if (!constructor) {
	    return undefined;
	  }
	  return constructor.displayName || constructor.name || undefined;
	}

	/**
	 * Gets the current owner's displayName for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getCurrentOwnerDisplayName() {
	  var current = ReactCurrentOwner.current;
	  return (
	    current && getName(current) || undefined
	  );
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  warnAndMonitorForKeyUse(
	    'Each child in an array or iterator should have a unique "key" prop.',
	    element,
	    parentType
	  );
	}

	/**
	 * Warn if the key is being defined as an object property but has an incorrect
	 * value.
	 *
	 * @internal
	 * @param {string} name Property name of the key.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validatePropertyKey(name, element, parentType) {
	  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
	    return;
	  }
	  warnAndMonitorForKeyUse(
	    'Child objects should have non-numeric keys so ordering is preserved.',
	    element,
	    parentType
	  );
	}

	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} message The base warning that gets output.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function warnAndMonitorForKeyUse(message, element, parentType) {
	  var ownerName = getCurrentOwnerDisplayName();
	  var parentName = typeof parentType === 'string' ?
	    parentType : parentType.displayName || parentType.name;

	  var useName = ownerName || parentName;
	  var memoizer = ownerHasKeyUseWarning[message] || (
	    (ownerHasKeyUseWarning[message] = {})
	  );
	  if (memoizer.hasOwnProperty(useName)) {
	    return;
	  }
	  memoizer[useName] = true;

	  var parentOrOwnerAddendum =
	    ownerName ? (" Check the render method of " + ownerName + ".") :
	    parentName ? (" Check the React.render call using <" + parentName + ">.") :
	    '';

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwnerAddendum = '';
	  if (element &&
	      element._owner &&
	      element._owner !== ReactCurrentOwner.current) {
	    // Name of the component that originally created this child.
	    var childOwnerName = getName(element._owner);

	    childOwnerAddendum = (" It was passed a child from " + childOwnerName + ".");
	  }

	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    message + '%s%s See https://fb.me/react-warning-keys for more information.',
	    parentOrOwnerAddendum,
	    childOwnerAddendum
	  ) : null);
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    node._store.validated = true;
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    } else if (typeof node === 'object') {
	      var fragment = ReactFragment.extractIfFragment(node);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          validatePropertyKey(key, fragment[key], parentType);
	        }
	      }
	    }
	  }
	}

	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        ("production" !== process.env.NODE_ENV ? invariant(
	          typeof propTypes[propName] === 'function',
	          '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	          'React.PropTypes.',
	          componentName || 'React class',
	          ReactPropTypeLocationNames[location],
	          propName
	        ) : invariant(typeof propTypes[propName] === 'function'));
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(this);
	        ("production" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);
	      }
	    }
	  }
	}

	var warnedPropsMutations = {};

	/**
	 * Warn about mutating props when setting `propName` on `element`.
	 *
	 * @param {string} propName The string key within props that was set
	 * @param {ReactElement} element
	 */
	function warnForPropsMutation(propName, element) {
	  var type = element.type;
	  var elementName = typeof type === 'string' ? type : type.displayName;
	  var ownerName = element._owner ?
	    element._owner.getPublicInstance().constructor.displayName : null;

	  var warningKey = propName + '|' + elementName + '|' + ownerName;
	  if (warnedPropsMutations.hasOwnProperty(warningKey)) {
	    return;
	  }
	  warnedPropsMutations[warningKey] = true;

	  var elementInfo = '';
	  if (elementName) {
	    elementInfo = ' <' + elementName + ' />';
	  }
	  var ownerInfo = '';
	  if (ownerName) {
	    ownerInfo = ' The element was created by ' + ownerName + '.';
	  }

	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    'Don\'t set .props.%s of the React component%s. Instead, specify the ' +
	    'correct value when initially creating the element or use ' +
	    'React.cloneElement to make a new element with updated props.%s',
	    propName,
	    elementInfo,
	    ownerInfo
	  ) : null);
	}

	// Inline Object.is polyfill
	function is(a, b) {
	  if (a !== a) {
	    // NaN
	    return b !== b;
	  }
	  if (a === 0 && b === 0) {
	    // +-0
	    return 1 / a === 1 / b;
	  }
	  return a === b;
	}

	/**
	 * Given an element, check if its props have been mutated since element
	 * creation (or the last call to this function). In particular, check if any
	 * new props have been added, which we can't directly catch by defining warning
	 * properties on the props object.
	 *
	 * @param {ReactElement} element
	 */
	function checkAndWarnForMutatedProps(element) {
	  if (!element._store) {
	    // Element was created using `new ReactElement` directly or with
	    // `ReactElement.createElement`; skip mutation checking
	    return;
	  }

	  var originalProps = element._store.originalProps;
	  var props = element.props;

	  for (var propName in props) {
	    if (props.hasOwnProperty(propName)) {
	      if (!originalProps.hasOwnProperty(propName) ||
	          !is(originalProps[propName], props[propName])) {
	        warnForPropsMutation(propName, element);

	        // Copy over the new value so that the two props objects match again
	        originalProps[propName] = props[propName];
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  if (element.type == null) {
	    // This has already warned. Don't throw.
	    return;
	  }
	  // Extract the component class from the element. Converts string types
	  // to a composite class which may have propTypes.
	  // TODO: Validating a string's propTypes is not decoupled from the
	  // rendering target which is problematic.
	  var componentClass = ReactNativeComponent.getComponentClassForElement(
	    element
	  );
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(
	      name,
	      componentClass.propTypes,
	      element.props,
	      ReactPropTypeLocations.prop
	    );
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    ("production" !== process.env.NODE_ENV ? warning(
	      componentClass.getDefaultProps.isReactClassApproved,
	      'getDefaultProps is only used on classic React.createClass ' +
	      'definitions. Use a static property named `defaultProps` instead.'
	    ) : null);
	  }
	}

	var ReactElementValidator = {

	  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,

	  createElement: function(type, props, children) {
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    ("production" !== process.env.NODE_ENV ? warning(
	      type != null,
	      'React.createElement: type should not be null or undefined. It should ' +
	        'be a string (for DOM elements) or a ReactClass (for composite ' +
	        'components).'
	    ) : null);

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(
	      null,
	      type
	    );
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(
	          validatedFactory,
	          'type',
	          {
	            enumerable: false,
	            get: function() {
	              ("production" !== process.env.NODE_ENV ? warning(
	                false,
	                'Factory.type is deprecated. Access the class directly ' +
	                'before passing it to createFactory.'
	              ) : null);
	              Object.defineProperty(this, 'type', {
	                value: type
	              });
	              return type;
	            }
	          }
	        );
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }


	    return validatedFactory;
	  },

	  cloneElement: function(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(14);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if ("production" !== process.env.NODE_ENV) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */

	'use strict';

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);

	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function(componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  },
	  // Temporary hack since we expect DOM refs to behave like composites,
	  // for this release.
	  injectAutoWrapper: function(wrapperFactory) {
	    autoGenerateWrapperClass = wrapperFactory;
	  }
	};

	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}

	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    genericComponentClass,
	    'There is no registered component for the tag %s',
	    element.type
	  ) : invariant(genericComponentClass));
	  return new genericComponentClass(element.type, element.props);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};

	module.exports = ReactNativeComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (!this.wrapperInitData) {
	      this.wrapperInitData = [];
	    } else {
	      this.wrapperInitData.length = 0;
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function() {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} args... Arguments to pass to the method (optional).
	   *                           Helps prevent need to bind in many cases.
	   * @return Return value from `method`.
	   */
	  perform: function(method, scope, a, b, c, d, e, f) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !this.isInTransaction(),
	      'Transaction.perform(...): Cannot initialize a transaction when there ' +
	      'is already an outstanding transaction.'
	    ) : invariant(!this.isInTransaction()));
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {
	          }
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ?
	          wrapper.initialize.call(this) :
	          null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {
	          }
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function(startIndex) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isInTransaction(),
	      'Transaction.closeAll(): Cannot close transaction when none are open.'
	    ) : invariant(this.isInTransaction()));
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {
	          }
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occured.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var ReactComponent = __webpack_require__(30);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactElement = __webpack_require__(19);
	var ReactErrorUtils = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(33);
	var ReactLifeCycle = __webpack_require__(32);
	var ReactPropTypeLocations = __webpack_require__(41);
	var ReactPropTypeLocationNames = __webpack_require__(42);
	var ReactUpdateQueue = __webpack_require__(31);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);
	var keyMirror = __webpack_require__(14);
	var keyOf = __webpack_require__(47);
	var warning = __webpack_require__(23);

	var MIXINS_KEY = keyOf({mixins: null});

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});


	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,



	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,



	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function(Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function(Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function(Constructor, childContextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        childContextTypes,
	        ReactPropTypeLocations.childContext
	      );
	    }
	    Constructor.childContextTypes = assign(
	      {},
	      Constructor.childContextTypes,
	      childContextTypes
	    );
	  },
	  contextTypes: function(Constructor, contextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        contextTypes,
	        ReactPropTypeLocations.context
	      );
	    }
	    Constructor.contextTypes = assign(
	      {},
	      Constructor.contextTypes,
	      contextTypes
	    );
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function(Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(
	        Constructor.getDefaultProps,
	        getDefaultProps
	      );
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function(Constructor, propTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        propTypes,
	        ReactPropTypeLocations.prop
	      );
	    }
	    Constructor.propTypes = assign(
	      {},
	      Constructor.propTypes,
	      propTypes
	    );
	  },
	  statics: function(Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  }
	};

	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof typeDef[propName] === 'function',
	        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	        'React.PropTypes.',
	        Constructor.displayName || 'ReactClass',
	        ReactPropTypeLocationNames[location],
	        propName
	      ) : null);
	    }
	  }
	}

	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
	    ReactClassInterface[name] :
	    null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.OVERRIDE_BASE,
	      'ReactClassInterface: You are attempting to override ' +
	      '`%s` from your class specification. Ensure that your method names ' +
	      'do not overlap with React methods.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.DEFINE_MANY ||
	      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
	      'ReactClassInterface: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be due ' +
	      'to a mixin.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
	    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof spec !== 'function',
	    'ReactClass: You\'re attempting to ' +
	    'use a component class as a mixin. Instead, just use a regular object.'
	  ) : invariant(typeof spec !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !ReactElement.isValidElement(spec),
	    'ReactClass: You\'re attempting to ' +
	    'use a component as a mixin. Instead, just use a regular object.'
	  ) : invariant(!ReactElement.isValidElement(spec)));

	  var proto = Constructor.prototype;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above
	      continue;
	    }

	    var property = spec[name];
	    validateMethodOverride(proto, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod =
	        ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var markedDontBind = property && property.__reactDontBind;
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind =
	        isFunction &&
	        !isReactClassMethod &&
	        !isAlreadyDefined &&
	        !markedDontBind;

	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride
	          ("production" !== process.env.NODE_ENV ? invariant(
	            isReactClassMethod && (
	              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	            ),
	            'ReactClass: Unexpected spec policy %s for key %s ' +
	            'when mixing in component specs.',
	            specPolicy,
	            name
	          ) : invariant(isReactClassMethod && (
	            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	          )));

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if ("production" !== process.env.NODE_ENV) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isReserved,
	      'ReactClass: You are attempting to define a reserved ' +
	      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	      'as an instance property instead; it will still be accessible on the ' +
	      'constructor.',
	      name
	    ) : invariant(!isReserved));

	    var isInherited = name in Constructor;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isInherited,
	      'ReactClass: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be ' +
	      'due to a mixin.',
	      name
	    ) : invariant(!isInherited));
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    one && two && typeof one === 'object' && typeof two === 'object',
	    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        one[key] === undefined,
	        'mergeIntoWithNoDuplicateKeys(): ' +
	        'Tried to merge two objects with the same key: `%s`. This conflict ' +
	        'may be due to a mixin; in particular, this may be caused by two ' +
	        'getInitialState() or getDefaultProps() methods returning objects ' +
	        'with clashing keys.',
	        key
	      ) : invariant(one[key] === undefined));
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if ("production" !== process.env.NODE_ENV) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): React component methods may only be bound to the ' +
	          'component instance. See %s',
	          componentName
	        ) : null);
	      } else if (!args.length) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): You are binding a component method to the component. ' +
	          'React does this for you automatically in a high-performance ' +
	          'way, so you can safely remove this call. See %s',
	          componentName
	        ) : null);
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(
	        component,
	        ReactErrorUtils.guard(
	          method,
	          component.constructor.displayName + '.' + autoBindKey
	        )
	      );
	    }
	  }
	}

	var typeDeprecationDescriptor = {
	  enumerable: false,
	  get: function() {
	    var displayName = this.displayName || this.name || 'Component';
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      '%s.type is deprecated. Use %s directly to access the class.',
	      displayName,
	      displayName
	    ) : null);
	    Object.defineProperty(this, 'type', {
	      value: this
	    });
	    return this;
	  }
	};

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function(newState, callback) {
	    ReactUpdateQueue.enqueueReplaceState(this, newState);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function() {
	    if ("production" !== process.env.NODE_ENV) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          owner._warnedAboutRefsInRender,
	          '%s is accessing isMounted inside its render() function. ' +
	          'render() should be a pure function of props and state. It should ' +
	          'never access something that requires stale data from the previous ' +
	          'render, such as refs. Move this logic to componentDidMount and ' +
	          'componentDidUpdate instead.',
	          owner.getName() || 'A component'
	        ) : null);
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(this);
	    return (
	      internalInstance &&
	      internalInstance !== ReactLifeCycle.currentlyMountingInstance
	    );
	  },

	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function(partialProps, callback) {
	    ReactUpdateQueue.enqueueSetProps(this, partialProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },

	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function(newProps, callback) {
	    ReactUpdateQueue.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  }
	};

	var ReactClassComponent = function() {};
	assign(
	  ReactClassComponent.prototype,
	  ReactComponent.prototype,
	  ReactClassMixin
	);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function(spec) {
	    var Constructor = function(props, context) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	          'JSX instead. See: https://fb.me/react-legacyfactory'
	        ) : null);
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if ("production" !== process.env.NODE_ENV) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' &&
	            this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;

	    injectedMixins.forEach(
	      mixSpecIntoComponent.bind(null, Constructor)
	    );

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    ) : invariant(Constructor.prototype.render));

	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        spec.displayName || 'A component'
	      ) : null);
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    // Legacy hook
	    Constructor.type = Constructor;
	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */

	"use strict";

	var ReactErrorUtils = {
	  /**
	   * Creates a guarded version of a function. This is supposed to make debugging
	   * of event handlers easier. To aid debugging with the browser's debugger,
	   * this currently simply returns the original function.
	   *
	   * @param {function} func Function to be executed
	   * @param {string} name The name of the guard
	   * @return {function}
	   */
	  guard: function(func, name) {
	    return func;
	  }
	};

	module.exports = ReactErrorUtils;


/***/ },
/* 47 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without loosing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};


	module.exports = keyOf;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 * @typechecks static-only
	 */

	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactElementValidator = __webpack_require__(40);

	var mapObject = __webpack_require__(49);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if ("production" !== process.env.NODE_ENV) {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOM = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOM;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */

	'use strict';

	var DOMPropertyOperations = __webpack_require__(51);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(55);
	var ReactDOMComponent = __webpack_require__(95);

	var assign = __webpack_require__(21);
	var escapeTextContentForBrowser = __webpack_require__(54);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function(props) {
	  // This constructor and its argument is currently used by mocks.
	};

	assign(ReactDOMTextComponent.prototype, {

	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function(text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;

	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    var escapedText = escapeTextContentForBrowser(this._stringText);

	    if (transaction.renderToStaticMarkup) {
	      // Normally we'd wrap this in a `span` for the reasons stated above, but
	      // since this is a situation where React won't take over (static pages),
	      // we can simply return the text as it is.
	      return escapedText;
	    }

	    return (
	      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
	        escapedText +
	      '</span>'
	    );
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        ReactDOMComponent.BackendIDOperations.updateTextContentByID(
	          this._rootNodeID,
	          nextStringText
	        );
	      }
	    }
	  },

	  unmountComponent: function() {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }

	});

	module.exports = ReactDOMTextComponent;


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(52);

	var quoteAttributeValueForBrowser = __webpack_require__(53);
	var warning = __webpack_require__(23);

	function shouldIgnoreValue(name, value) {
	  return value == null ||
	    (DOMProperty.hasBooleanValue[name] && !value) ||
	    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
	    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
	    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
	}

	if ("production" !== process.env.NODE_ENV) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};

	  var warnUnknownProperty = function(name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
	        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }

	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = (
	      DOMProperty.isCustomAttribute(lowerCasedName) ?
	        lowerCasedName :
	      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
	        DOMProperty.getPossibleStandardName[lowerCasedName] :
	        null
	    );

	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    ("production" !== process.env.NODE_ENV ? warning(
	      standardName == null,
	      'Unknown DOM property %s. Did you mean %s?',
	      name,
	      standardName
	    ) : null);

	  };
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
	      quoteAttributeValueForBrowser(id);
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function(name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      if (shouldIgnoreValue(name, value)) {
	        return '';
	      }
	      var attributeName = DOMProperty.getAttributeName[name];
	      if (DOMProperty.hasBooleanValue[name] ||
	          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
	        return attributeName;
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function(node, name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(name, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== ('' + value)) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        node.removeAttribute(name);
	      } else {
	        node.setAttribute(name, '' + value);
	      }
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function(node, name) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        node.removeAttribute(DOMProperty.getAttributeName[name]);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        var defaultValue = DOMProperty.getDefaultValueForProperty(
	          node.nodeName,
	          propName
	        );
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */

	/*jslint bitwise: true */

	'use strict';

	var invariant = __webpack_require__(15);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function(domPropertyConfig) {
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(
	        domPropertyConfig.isCustomAttribute
	      );
	    }

	    for (var propName in Properties) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.isStandardName.hasOwnProperty(propName),
	        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
	        '\'%s\' which has already been injected. You may be accidentally ' +
	        'injecting the same DOM property config twice, or you may be ' +
	        'injecting two configs that have conflicting property names.',
	        propName
	      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

	      DOMProperty.isStandardName[propName] = true;

	      var lowerCased = propName.toLowerCase();
	      DOMProperty.getPossibleStandardName[lowerCased] = propName;

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        DOMProperty.getPossibleStandardName[attributeName] = propName;
	        DOMProperty.getAttributeName[propName] = attributeName;
	      } else {
	        DOMProperty.getAttributeName[propName] = lowerCased;
	      }

	      DOMProperty.getPropertyName[propName] =
	        DOMPropertyNames.hasOwnProperty(propName) ?
	          DOMPropertyNames[propName] :
	          propName;

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
	      } else {
	        DOMProperty.getMutationMethod[propName] = null;
	      }

	      var propConfig = Properties[propName];
	      DOMProperty.mustUseAttribute[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
	      DOMProperty.mustUseProperty[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
	      DOMProperty.hasSideEffects[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
	      DOMProperty.hasBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
	      DOMProperty.hasNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
	      DOMProperty.hasPositiveNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
	      DOMProperty.hasOverloadedBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.mustUseAttribute[propName] ||
	          !DOMProperty.mustUseProperty[propName],
	        'DOMProperty: Cannot require using both attribute and property: %s',
	        propName
	      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
	        !DOMProperty.mustUseProperty[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        DOMProperty.mustUseProperty[propName] ||
	          !DOMProperty.hasSideEffects[propName],
	        'DOMProperty: Properties that have side effects must use property: %s',
	        propName
	      ) : invariant(DOMProperty.mustUseProperty[propName] ||
	        !DOMProperty.hasSideEffects[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !!DOMProperty.hasBooleanValue[propName] +
	          !!DOMProperty.hasNumericValue[propName] +
	          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
	        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
	        'numeric value, but not a combination: %s',
	        propName
	      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
	        !!DOMProperty.hasNumericValue[propName] +
	        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
	    }
	  }
	};
	var defaultValueCache = {};

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',

	  /**
	   * Checks whether a property name is a standard property.
	   * @type {Object}
	   */
	  isStandardName: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties.
	   * @type {Object}
	   */
	  getPossibleStandardName: {},

	  /**
	   * Mapping from normalized names to attribute names that differ. Attribute
	   * names are used when rendering markup or with `*Attribute()`.
	   * @type {Object}
	   */
	  getAttributeName: {},

	  /**
	   * Mapping from normalized names to properties on DOM node instances.
	   * (This includes properties that mutate due to external factors.)
	   * @type {Object}
	   */
	  getPropertyName: {},

	  /**
	   * Mapping from normalized names to mutation methods. This will only exist if
	   * mutation cannot be set simply by the property or `setAttribute()`.
	   * @type {Object}
	   */
	  getMutationMethod: {},

	  /**
	   * Whether the property must be accessed and mutated as an object property.
	   * @type {Object}
	   */
	  mustUseAttribute: {},

	  /**
	   * Whether the property must be accessed and mutated using `*Attribute()`.
	   * (This includes anything that fails `<propName> in <element>`.)
	   * @type {Object}
	   */
	  mustUseProperty: {},

	  /**
	   * Whether or not setting a value causes side effects such as triggering
	   * resources to be loaded or text selection changes. We must ensure that
	   * the value is only set if it has changed.
	   * @type {Object}
	   */
	  hasSideEffects: {},

	  /**
	   * Whether the property should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasBooleanValue: {},

	  /**
	   * Whether the property must be numeric or parse as a
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasNumericValue: {},

	  /**
	   * Whether the property must be positive numeric or parse as a positive
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasPositiveNumericValue: {},

	  /**
	   * Whether the property can be used as a flag as well as with a value. Removed
	   * when strictly equal to false; present without a value when strictly equal
	   * to true; present with a value otherwise.
	   * @type {Object}
	   */
	  hasOverloadedBooleanValue: {},

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function(nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(54);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;


/***/ },
/* 54 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};

	var ESCAPE_REGEX = /[&><"']/g;

	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}

	module.exports = escapeTextContentForBrowser;


/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	/*jslint evil: true */

	'use strict';

	var ReactDOMIDOperations = __webpack_require__(56);
	var ReactMount = __webpack_require__(75);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates:
	    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkupByID:
	    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function(rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }

	};

	module.exports = ReactComponentBrowserEnvironment;


/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */

	/*jslint evil: true */

	'use strict';

	var CSSPropertyOperations = __webpack_require__(57);
	var DOMChildrenOperations = __webpack_require__(66);
	var DOMPropertyOperations = __webpack_require__(51);
	var ReactMount = __webpack_require__(75);
	var ReactPerf = __webpack_require__(36);

	var invariant = __webpack_require__(15);
	var setInnerHTML = __webpack_require__(74);

	/**
	 * Errors for properties that should not be updated with `updatePropertyById()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML:
	    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};

	/**
	 * Operations used to process updates to DOM nodes. This is made injectable via
	 * `ReactDOMComponent.BackendIDOperations`.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },

	  /**
	   * Updates a DOM node to remove a property. This should only be used to remove
	   * DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A property name to remove, see `DOMProperty`.
	   * @internal
	   */
	  deletePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
	    DOMPropertyOperations.deleteValueForProperty(node, name, value);
	  },

	  /**
	   * Updates a DOM node with new style values. If a value is specified as '',
	   * the corresponding style property will be unset.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {object} styles Mapping from styles to values.
	   * @internal
	   */
	  updateStylesByID: function(id, styles) {
	    var node = ReactMount.getNode(id);
	    CSSPropertyOperations.setValueForStyles(node, styles);
	  },

	  /**
	   * Updates a DOM node's innerHTML.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} html An HTML string.
	   * @internal
	   */
	  updateInnerHTMLByID: function(id, html) {
	    var node = ReactMount.getNode(id);
	    setInnerHTML(node, html);
	  },

	  /**
	   * Updates a DOM node's text content set by `props.content`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} content Text content.
	   * @internal
	   */
	  updateTextContentByID: function(id, content) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.updateTextContent(node, content);
	  },

	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function(updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};

	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  updatePropertyByID: 'updatePropertyByID',
	  deletePropertyByID: 'deletePropertyByID',
	  updateStylesByID: 'updateStylesByID',
	  updateInnerHTMLByID: 'updateInnerHTMLByID',
	  updateTextContentByID: 'updateTextContentByID',
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});

	module.exports = ReactDOMIDOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(58);
	var ExecutionEnvironment = __webpack_require__(59);

	var camelizeStyleName = __webpack_require__(60);
	var dangerousStyleValue = __webpack_require__(62);
	var hyphenateStyleName = __webpack_require__(63);
	var memoizeStringOnly = __webpack_require__(65);
	var warning = __webpack_require__(23);

	var processStyleName = memoizeStringOnly(function(styleName) {
	  return hyphenateStyleName(styleName);
	});

	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if ("production" !== process.env.NODE_ENV) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};

	  var warnHyphenatedStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported style property %s. Did you mean %s?',
	      name,
	      camelizeStyleName(name)
	    ) : null);
	  };

	  var warnBadVendoredStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported vendor-prefixed style property %s. Did you mean %s?',
	      name,
	      name.charAt(0).toUpperCase() + name.slice(1)
	    ) : null);
	  };

	  var warnStyleValueWithSemicolon = function(name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Style property values shouldn\'t contain a semicolon. ' +
	      'Try "%s: %s" instead.',
	      name,
	      value.replace(badStyleValueWithSemicolonPattern, '')
	    ) : null);
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function(name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function(styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function(node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  boxFlex: true,
	  boxFlexGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function(prop) {
	  prefixes.forEach(function(prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundImage: true,
	    backgroundPosition: true,
	    backgroundRepeat: true,
	    backgroundColor: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;


/***/ },
/* 59 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */

	/*jslint evil: true */

	"use strict";

	var canUseDOM = !!(
	  (typeof window !== 'undefined' &&
	  window.document && window.document.createElement)
	);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners:
	    canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */

	"use strict";

	var camelize = __webpack_require__(61);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;


/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function(_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */

	'use strict';

	var CSSProperty = __webpack_require__(58);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 ||
	      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */

	"use strict";

	var hyphenate = __webpack_require__(64);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;


/***/ },
/* 64 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;


/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function(string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */

	'use strict';

	var Danger = __webpack_require__(67);
	var ReactMultiChildUpdateTypes = __webpack_require__(72);

	var setTextContent = __webpack_require__(73);
	var invariant = __webpack_require__(15);

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	  parentNode.insertBefore(
	    childNode,
	    parentNode.childNodes[index] || null
	  );
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

	  updateTextContent: setTextContent,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function(updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;

	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
	          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;

	        ("production" !== process.env.NODE_ENV ? invariant(
	          updatedChild,
	          'processUpdates(): Unable to find child %s of element. This ' +
	          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
	          'browser), usually due to forgetting a <tbody> when using tables, ' +
	          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +
	          'in an <svg> parent. Try inspecting the child nodes of the element ' +
	          'with React ID `%s`.',
	          updatedIndex,
	          parentID
	        ) : invariant(updatedChild));

	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;

	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }

	    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }

	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(
	            update.parentNode,
	            renderedMarkup[update.markupIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(
	            update.parentNode,
	            initialChildren[update.parentID][update.fromIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(
	            update.parentNode,
	            update.textContent
	          );
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */

	/*jslint evil: true, sub: true */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);

	var createNodesFromMarkup = __webpack_require__(68);
	var emptyFunction = __webpack_require__(24);
	var getMarkupWrap = __webpack_require__(71);
	var invariant = __webpack_require__(15);

	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';

	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}

	var Danger = {

	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function(markupList) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
	      'thread. Make sure `window` and `document` are available globally ' +
	      'before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        markupList[i],
	        'dangerouslyRenderMarkup(...): Missing markup.'
	      ) : invariant(markupList[i]));
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];

	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];

	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(
	            OPEN_TAG_NAME_EXP,
	            // This index will be parsed back out below.
	            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
	          );
	        }
	      }

	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(
	        markupListByNodeName.join(''),
	        emptyFunction // Do nothing special with <script> tags.
	      );

	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute &&
	            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);

	          ("production" !== process.env.NODE_ENV ? invariant(
	            !resultList.hasOwnProperty(resultIndex),
	            'Danger: Assigning to an already-occupied result index.'
	          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

	          resultList[resultIndex] = renderNode;

	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;

	        } else if ("production" !== process.env.NODE_ENV) {
	          console.error(
	            'Danger: Discarding unexpected node:',
	            renderNode
	          );
	        }
	      }
	    }

	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultListAssignmentCount === resultList.length,
	      'Danger: Did not assign to every index of resultList.'
	    ) : invariant(resultListAssignmentCount === resultList.length));

	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultList.length === markupList.length,
	      'Danger: Expected markup to render %s nodes, but rendered %s.',
	      markupList.length,
	      resultList.length
	    ) : invariant(resultList.length === markupList.length));

	    return resultList;
	  },

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
	      'worker thread. Make sure `window` and `document` are available ' +
	      'globally before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      oldChild.tagName.toLowerCase() !== 'html',
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
	      '<html> node. This is because browser quirks make this unreliable ' +
	      'and/or slow. If you want to render to the root you must use ' +
	      'server rendering. See React.renderToString().'
	    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

	    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }

	};

	module.exports = Danger;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */

	/*jslint evil: true, sub: true */

	var ExecutionEnvironment = __webpack_require__(59);

	var createArrayFromMixed = __webpack_require__(69);
	var getMarkupWrap = __webpack_require__(71);
	var invariant = __webpack_require__(15);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      handleScript,
	      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
	    ) : invariant(handleScript));
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */

	var toArray = __webpack_require__(70);

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj &&
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    ('length' in obj) &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    (typeof obj.nodeType != 'number') &&
	    (
	      // a real array
	      (// HTMLCollection/NodeList
	      (Array.isArray(obj) ||
	      // arguments
	      ('callee' in obj) || 'item' in obj))
	    )
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */

	var invariant = __webpack_require__(15);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(obj) &&
	    (typeof obj === 'object' || typeof obj === 'function'),
	    'toArray: Array-like object expected'
	  ) : invariant(!Array.isArray(obj) &&
	  (typeof obj === 'object' || typeof obj === 'function')));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof length === 'number',
	    'toArray: Object needs a length property'
	  ) : invariant(typeof length === 'number'));

	  ("production" !== process.env.NODE_ENV ? invariant(
	    length === 0 ||
	    (length - 1) in obj,
	    'toArray: Object should have keys for indices'
	  ) : invariant(length === 0 ||
	  (length - 1) in obj));

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	module.exports = toArray;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */

	var ExecutionEnvironment = __webpack_require__(59);

	var invariant = __webpack_require__(15);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	var shouldWrap = {
	  // Force wrapping for SVG elements because if they get created inside a <div>,
	  // they will be initialized in the wrong namespace (and will not display).
	  'circle': true,
	  'clipPath': true,
	  'defs': true,
	  'ellipse': true,
	  'g': true,
	  'line': true,
	  'linearGradient': true,
	  'path': true,
	  'polygon': true,
	  'polyline': true,
	  'radialGradient': true,
	  'rect': true,
	  'stop': true,
	  'text': true
	};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg>', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap,

	  'circle': svgWrap,
	  'clipPath': svgWrap,
	  'defs': svgWrap,
	  'ellipse': svgWrap,
	  'g': svgWrap,
	  'line': svgWrap,
	  'linearGradient': svgWrap,
	  'path': svgWrap,
	  'polygon': svgWrap,
	  'polyline': svgWrap,
	  'radialGradient': svgWrap,
	  'rect': svgWrap,
	  'stop': svgWrap,
	  'text': svgWrap
	};

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}


	module.exports = getMarkupWrap;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(14);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;


/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);
	var escapeTextContentForBrowser = __webpack_require__(54);
	var setInnerHTML = __webpack_require__(74);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function(node, text) {
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	/* globals MSApp */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function(node, html) {
	  node.innerHTML = html;
	};

	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function(node, html) {
	    MSApp.execUnsafeLocalFunction(function() {
	      node.innerHTML = html;
	    });
	  };
	}

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) ||
	          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        node.innerHTML = '\uFEFF' + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}

	module.exports = setInnerHTML;


/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var DOMProperty = __webpack_require__(52);
	var ReactBrowserEventEmitter = __webpack_require__(76);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactElement = __webpack_require__(19);
	var ReactElementValidator = __webpack_require__(40);
	var ReactEmptyComponent = __webpack_require__(84);
	var ReactInstanceHandles = __webpack_require__(27);
	var ReactInstanceMap = __webpack_require__(33);
	var ReactMarkupChecksum = __webpack_require__(85);
	var ReactPerf = __webpack_require__(36);
	var ReactReconciler = __webpack_require__(37);
	var ReactUpdateQueue = __webpack_require__(31);
	var ReactUpdates = __webpack_require__(34);

	var emptyObject = __webpack_require__(22);
	var containsNode = __webpack_require__(87);
	var getReactRootElementInContainer = __webpack_require__(90);
	var instantiateReactComponent = __webpack_require__(91);
	var invariant = __webpack_require__(15);
	var setInnerHTML = __webpack_require__(74);
	var shouldUpdateReactComponent = __webpack_require__(94);
	var warning = __webpack_require__(23);

	var SEPARATOR = ReactInstanceHandles.SEPARATOR;

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;

	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};

	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};

	if ("production" !== process.env.NODE_ENV) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}

	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}

	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !isValid(cached, id),
	          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
	          ATTR_NAME, id
	        ) : invariant(!isValid(cached, id)));

	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }

	  return id;
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}

	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponent.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}

	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalGetID(node) === id,
	      'ReactMount: Unexpected modification of `%s`',
	      ATTR_NAME
	    ) : invariant(internalGetID(node) === id));

	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }

	  return false;
	}

	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}

	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}

	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(
	    targetID,
	    findDeepestCachedAncestorImpl
	  );

	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup) {
	  var markup = ReactReconciler.mountComponent(
	    componentInstance, rootID, transaction, emptyObject
	  );
	  componentInstance._isTopLevel = true;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    shouldReuseMarkup) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	  transaction.perform(
	    mountComponentIntoNode,
	    null,
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup
	  );
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function(container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function(
	      prevComponent,
	      nextElement,
	      container,
	      callback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }

	    ReactMount.scrollMonitor(container, function() {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] =
	        getReactRootElementInContainer(container);
	    }

	    return prevComponent;
	  },

	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function(nextComponent, container) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      '_registerComponent(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },

	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function(
	    nextElement,
	    container,
	    shouldReuseMarkup
	  ) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      '_renderNewRootComponent(): Render methods should be a pure function ' +
	      'of props and state; triggering nested component updates from ' +
	      'render is not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);

	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(
	      componentInstance,
	      container
	    );

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(
	      batchedMountComponentIntoNode,
	      componentInstance,
	      reactRootID,
	      container,
	      shouldReuseMarkup
	    );

	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] =
	        getReactRootElementInContainer(container);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function(nextElement, container, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactElement.isValidElement(nextElement),
	      'React.render(): Invalid component element.%s',
	      (
	        typeof nextElement === 'string' ?
	          ' Instead of passing an element string, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        typeof nextElement === 'function' ?
	          ' Instead of passing a component class, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        // Check if it quacks like an element
	        nextElement != null && nextElement.props !== undefined ?
	          ' This may be caused by unintentionally loading two independent ' +
	          'copies of React.' :
	          ''
	      )
	    ) : invariant(ReactElement.isValidElement(nextElement)));

	    var prevComponent = instancesByReactRootID[getReactRootID(container)];

	    if (prevComponent) {
	      var prevElement = prevComponent._currentElement;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        return ReactMount._updateRootComponent(
	          prevComponent,
	          nextElement,
	          container,
	          callback
	        ).getPublicInstance();
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup =
	      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

	    if ("production" !== process.env.NODE_ENV) {
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (ReactMount.isRenderedByReact(rootElementSibling)) {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'render(): Target node has markup rendered by React, but there ' +
	              'are unrelated nodes as well. This is most commonly caused by ' +
	              'white-space inserted around server-rendered markup.'
	            ) : null);
	            break;
	          }

	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

	    var component = ReactMount._renderNewRootComponent(
	      nextElement,
	      container,
	      shouldReuseMarkup
	    ).getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into the supplied `container`.
	   *
	   * @param {function} constructor React component constructor.
	   * @param {?object} props Initial props of the component instance.
	   * @param {DOMElement} container DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  constructAndRenderComponent: function(constructor, props, container) {
	    var element = ReactElement.createElement(constructor, props);
	    return ReactMount.render(element, container);
	  },

	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into a container node identified by supplied `id`.
	   *
	   * @param {function} componentConstructor React component constructor
	   * @param {?object} props Initial props of the component instance.
	   * @param {string} id ID of the DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in the container node.
	   */
	  constructAndRenderComponentByID: function(constructor, props, id) {
	    var domNode = document.getElementById(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      domNode,
	      'Tried to get element with id of "%s" but it is not present on the page.',
	      id
	    ) : invariant(domNode));
	    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
	  },

	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function(container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      'unmountComponentAtNode(): Render methods should be a pure function of ' +
	      'props and state; triggering nested component updates from render is ' +
	      'not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);

	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'unmountComponentAtNode(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      return false;
	    }
	    ReactMount.unmountComponentFromNode(component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if ("production" !== process.env.NODE_ENV) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },

	  /**
	   * Unmounts a component and removes it from the DOM.
	   *
	   * @param {ReactComponent} instance React component instance.
	   * @param {DOMElement} container DOM element to unmount from.
	   * @final
	   * @internal
	   * @see {ReactMount.unmountComponentAtNode}
	   */
	  unmountComponentFromNode: function(instance, container) {
	    ReactReconciler.unmountComponent(instance);

	    if (container.nodeType === DOC_NODE_TYPE) {
	      container = container.documentElement;
	    }

	    // http://jsperf.com/emptying-a-node
	    while (container.lastChild) {
	      container.removeChild(container.lastChild);
	    }
	  },

	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function(id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];

	    if ("production" !== process.env.NODE_ENV) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          // Call internalGetID here because getID calls isValid which calls
	          // findReactContainerForID (this function).
	          internalGetID(rootElement) === reactRootID,
	          'ReactMount: Root element ID differed from reactRootID.'
	        ) : invariant(// Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID));

	        var containerChild = container.firstChild;
	        if (containerChild &&
	            reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'ReactMount: Root element has been removed from its original ' +
	            'container. New container:', rootElement.parentNode
	          ) : null);
	        }
	      }
	    }

	    return container;
	  },

	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function(id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },

	  /**
	   * True if the supplied `node` is rendered by React.
	   *
	   * @param {*} node DOM Element to check.
	   * @return {boolean} True if the DOM Element appears to be rendered by React.
	   * @internal
	   */
	  isRenderedByReact: function(node) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      return false;
	    }
	    var id = ReactMount.getID(node);
	    return id ? id.charAt(0) === SEPARATOR : false;
	  },

	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function(node) {
	    var current = node;
	    while (current && current.parentNode !== current) {
	      if (ReactMount.isRenderedByReact(current)) {
	        return current;
	      }
	      current = current.parentNode;
	    }
	    return null;
	  },

	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function(ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;

	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;

	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;

	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.

	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }

	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }

	        child = child.nextSibling;
	      }

	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;

	        return targetChild;
	      }
	    }

	    firstChildren.length = 0;

	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'findComponentRoot(..., %s): Unable to find element. This probably ' +
	      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
	      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
	      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
	      'parent. ' +
	      'Try inspecting the child nodes of the element with React ID `%s`.',
	      targetID,
	      ReactMount.getID(ancestorNode)
	    ) : invariant(false));
	  },

	  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'mountComponentIntoNode(...): Target container is not valid.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	        );
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
	          checksum
	        );

	        var diffIndex = firstDifferenceIndex(markup, rootMarkup);
	        var difference = ' (client) ' +
	          markup.substring(diffIndex - 20, diffIndex + 20) +
	          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        ("production" !== process.env.NODE_ENV ? invariant(
	          container.nodeType !== DOC_NODE_TYPE,
	          'You\'re trying to render a component to the document using ' +
	          'server rendering but the checksum was invalid. This usually ' +
	          'means you rendered a different component type or props on ' +
	          'the client from the one on the server, or your render() ' +
	          'methods are impure. React cannot handle this case due to ' +
	          'cross-browser quirks by rendering at the document root. You ' +
	          'should look for environment dependent code in your components ' +
	          'and ensure the props are the same client and server side:\n%s',
	          difference
	        ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'React attempted to reuse markup in a container but the ' +
	            'checksum was invalid. This generally means that you are ' +
	            'using server rendering and the markup generated on the ' +
	            'server was not what the client was expecting. React injected ' +
	            'new markup to compensate which works but you have lost many ' +
	            'of the benefits of server rendering. Instead, figure out ' +
	            'why the markup being generated is different on the client ' +
	            'or server:\n%s',
	            difference
	          ) : null);
	        }
	      }
	    }

	    ("production" !== process.env.NODE_ENV ? invariant(
	      container.nodeType !== DOC_NODE_TYPE,
	      'You\'re trying to render a component to the document but ' +
	        'you didn\'t use server rendering. We can\'t do this ' +
	        'without using server rendering due to cross-browser quirks. ' +
	        'See React.renderToString() for server rendering.'
	    ) : invariant(container.nodeType !== DOC_NODE_TYPE));

	    setInnerHTML(container, markup);
	  },

	  /**
	   * React ID utilities.
	   */

	  getReactRootID: getReactRootID,

	  getID: getID,

	  setID: setID,

	  getNode: getNode,

	  getNodeFromInstance: getNodeFromInstance,

	  purgeID: purgeID
	};

	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});

	module.exports = ReactMount;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPluginHub = __webpack_require__(77);
	var EventPluginRegistry = __webpack_require__(78);
	var ReactEventEmitterMixin = __webpack_require__(81);
	var ViewportMetrics = __webpack_require__(82);

	var assign = __webpack_require__(21);
	var isEventSupported = __webpack_require__(83);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topBlur: 'blur',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topScroll: 'scroll',
	  topSelectionChange: 'selectionchange',
	  topTextInput: 'textInput',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(
	        ReactBrowserEventEmitter.handleTopLevel
	      );
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function() {
	    return !!(
	      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())
	    );
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.
	      registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0, l = dependencies.length; i < l; i++) {
	      var dependency = dependencies[i];
	      if (!(
	            (isListening.hasOwnProperty(dependency) && isListening[dependency])
	          )) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'wheel',
	              mountAt
	            );
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'mousewheel',
	              mountAt
	            );
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'DOMMouseScroll',
	              mountAt
	            );
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              mountAt
	            );
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
	            );
	          }
	        } else if (dependency === topLevelTypes.topFocus ||
	            dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topFocus,
	              'focus',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topBlur,
	              'blur',
	              mountAt
	            );
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topFocus,
	              'focusin',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topBlur,
	              'focusout',
	              mountAt
	            );
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	            dependency,
	            topEventMapping[dependency],
	            mountAt
	          );
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function() {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },

	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginHub.registrationNameModules,

	  putListener: EventPluginHub.putListener,

	  getListener: EventPluginHub.getListener,

	  deleteListener: EventPluginHub.deleteListener,

	  deleteAllListeners: EventPluginHub.deleteAllListeners

	});

	module.exports = ReactBrowserEventEmitter;


/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var EventPluginRegistry = __webpack_require__(78);
	var EventPluginUtils = __webpack_require__(12);

	var accumulateInto = __webpack_require__(79);
	var forEachAccumulated = __webpack_require__(80);
	var invariant = __webpack_require__(15);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @private
	 */
	var executeDispatchesAndRelease = function(event) {
	  if (event) {
	    var executeDispatch = EventPluginUtils.executeDispatch;
	    // Plugins can provide custom behavior when dispatching events.
	    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
	    if (PluginModule && PluginModule.executeDispatch) {
	      executeDispatch = PluginModule.executeDispatch;
	    }
	    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};

	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;

	function validateInstanceHandle() {
	  var valid =
	    InstanceHandle &&
	    InstanceHandle.traverseTwoPhase &&
	    InstanceHandle.traverseEnterLeave;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    valid,
	    'InstanceHandle not injected before use!'
	  ) : invariant(valid));
	}

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,

	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function(InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	    },

	    getInstanceHandle: function() {
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

	  registrationNameModules: EventPluginRegistry.registrationNameModules,

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function(id, registrationName, listener) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !listener || typeof listener === 'function',
	      'Expected %s listener to be a function, instead got type %s',
	      registrationName, typeof listener
	    ) : invariant(!listener || typeof listener === 'function'));

	    var bankForRegistrationName =
	      listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	  },

	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function(id) {
	    for (var registrationName in listenerBank) {
	      delete listenerBank[registrationName][id];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0, l = plugins.length; i < l; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(
	          topLevelType,
	          topLevelTarget,
	          topLevelTargetID,
	          nativeEvent
	        );
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function() {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !eventQueue,
	      'processEventQueue(): Additional events were enqueued while processing ' +
	      'an event queue. Support for this has not yet been implemented.'
	    ) : invariant(!eventQueue));
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function() {
	    listenerBank = {};
	  },

	  __getListenerBank: function() {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      pluginIndex > -1,
	      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
	      'the plugin ordering, `%s`.',
	      pluginName
	    ) : invariant(pluginIndex > -1));
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      PluginModule.extractEvents,
	      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
	      'method, but `%s` does not.',
	      pluginName
	    ) : invariant(PluginModule.extractEvents));
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        publishEventForPlugin(
	          publishedEvents[eventName],
	          PluginModule,
	          eventName
	        ),
	        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
	        eventName,
	        pluginName
	      ) : invariant(publishEventForPlugin(
	        publishedEvents[eventName],
	        PluginModule,
	        eventName
	      )));
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'event name, `%s`.',
	    eventName
	  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(
	          phasedRegistrationName,
	          PluginModule,
	          eventName
	        );
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(
	      dispatchConfig.registrationName,
	      PluginModule,
	      eventName
	    );
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.registrationNameModules[registrationName],
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'registration name, `%s`.',
	    registrationName
	  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] =
	    PluginModule.eventTypes[eventName].dependencies;
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function(InjectedEventPluginOrder) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !EventPluginOrder,
	      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
	      'once. You are likely trying to load more than one copy of React.'
	    ) : invariant(!EventPluginOrder));
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) ||
	          namesToPlugins[pluginName] !== PluginModule) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !namesToPlugins[pluginName],
	          'EventPluginRegistry: Cannot inject two different event plugins ' +
	          'using the same name, `%s`.',
	          pluginName
	        ) : invariant(!namesToPlugins[pluginName]));
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[
	        dispatchConfig.registrationName
	      ] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[
	        dispatchConfig.phasedRegistrationNames[phase]
	      ];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    next != null,
	    'accumulateInto(...): Accumulated items must not be null or undefined.'
	  ) : invariant(next != null));
	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);

	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }

	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }

	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 80 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */

	'use strict';

	/**
	 * @param {array} an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};

	module.exports = forEachAccumulated;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(77);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue();
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events = EventPluginHub.extractEvents(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent
	    );

	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;


/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature =
	    document.implementation &&
	    document.implementation.hasFeature &&
	    // always returns true in newer browsers as per the standard.
	    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	    document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM ||
	      capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactInstanceMap = __webpack_require__(33);

	var invariant = __webpack_require__(15);

	var component;
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};

	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function(emptyComponent) {
	    component = ReactElement.createFactory(emptyComponent);
	  }
	};

	var ReactEmptyComponentType = function() {};
	ReactEmptyComponentType.prototype.componentDidMount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Make sure we run these methods in the correct order, we shouldn't
	  // need this check. We're going to assume if we're here it means we ran
	  // componentWillUnmount already so there is no internal instance (it gets
	  // removed as part of the unmounting process).
	  if (!internalInstance) {
	    return;
	  }
	  registerNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.componentWillUnmount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Get rid of this check. See TODO in componentDidMount.
	  if (!internalInstance) {
	    return;
	  }
	  deregisterNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.render = function() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    component,
	    'Trying to return null from a render, but no null placeholder component ' +
	    'was injected.'
	  ) : invariant(component));
	  return component();
	};

	var emptyElement = ReactElement.createElement(ReactEmptyComponentType);

	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}

	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}

	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}

	var ReactEmptyComponent = {
	  emptyElement: emptyElement,
	  injection: ReactEmptyComponentInjection,
	  isNullComponentID: isNullComponentID
	};

	module.exports = ReactEmptyComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(86);

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function(markup) {
	    var checksum = adler32(markup);
	    return markup.replace(
	      '>',
	      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
	    );
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function(markup, element) {
	    var existingChecksum = element.getAttribute(
	      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	    );
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;


/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */

	/* jslint bitwise:true */

	'use strict';

	var MOD = 65521;

	// This is a clean-room implementation of adler32 designed for detecting
	// if markup is not what we expect it to be. It does not need to be
	// cryptographically strong, only reasonably good at detecting if markup
	// generated on the server is different than that on the client.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  for (var i = 0; i < data.length; i++) {
	    a = (a + data.charCodeAt(i)) % MOD;
	    b = (b + a) % MOD;
	  }
	  return a | (b << 16);
	}

	module.exports = adler32;


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */

	var isTextNode = __webpack_require__(88);

	/*jslint bitwise:true */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if (outerNode.contains) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */

	var isNode = __webpack_require__(89);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;


/***/ },
/* 89 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (
	    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&
	    typeof object.nodeType === 'number' &&
	    typeof object.nodeName === 'string'))
	  ));
	}

	module.exports = isNode;


/***/ },
/* 90 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getReactRootElementInContainer
	 */

	'use strict';

	var DOC_NODE_TYPE = 9;

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 *                                           a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	module.exports = getReactRootElementInContainer;


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCompositeComponent = __webpack_require__(92);
	var ReactEmptyComponent = __webpack_require__(84);
	var ReactNativeComponent = __webpack_require__(43);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);
	var warning = __webpack_require__(23);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function() { };
	assign(
	  ReactCompositeComponentWrapper.prototype,
	  ReactCompositeComponent.Mixin,
	  {
	    _instantiateReactComponent: instantiateReactComponent
	  }
	);

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return (
	    typeof type === 'function' &&
	    typeof type.prototype !== 'undefined' &&
	    typeof type.prototype.mountComponent === 'function' &&
	    typeof type.prototype.receiveComponent === 'function'
	  );
	}

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {*} parentCompositeType The composite type that resolved this.
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, parentCompositeType) {
	  var instance;

	  if (node === null || node === false) {
	    node = ReactEmptyComponent.emptyElement;
	  }

	  if (typeof node === 'object') {
	    var element = node;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        element && (typeof element.type === 'function' ||
	                    typeof element.type === 'string'),
	        'Only functions or strings can be mounted as React components.'
	      ) : null);
	    }

	    // Special case string values
	    if (parentCompositeType === element.type &&
	        typeof element.type === 'string') {
	      // Avoid recursion if the wrapper renders itself.
	      instance = ReactNativeComponent.createInternalComponent(element);
	      // All native components are currently wrapped in a composite so we're
	      // safe to assume that this is what we should instantiate.
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // represenations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'Encountered invalid React node of type %s',
	      typeof node
	    ) : invariant(false));
	  }

	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof instance.construct === 'function' &&
	      typeof instance.mountComponent === 'function' &&
	      typeof instance.receiveComponent === 'function' &&
	      typeof instance.unmountComponent === 'function',
	      'Only React Components can be mounted.'
	    ) : null);
	  }

	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if ("production" !== process.env.NODE_ENV) {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if ("production" !== process.env.NODE_ENV) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(93);
	var ReactContext = __webpack_require__(20);
	var ReactCurrentOwner = __webpack_require__(25);
	var ReactElement = __webpack_require__(19);
	var ReactElementValidator = __webpack_require__(40);
	var ReactInstanceMap = __webpack_require__(33);
	var ReactLifeCycle = __webpack_require__(32);
	var ReactNativeComponent = __webpack_require__(43);
	var ReactPerf = __webpack_require__(36);
	var ReactPropTypeLocations = __webpack_require__(41);
	var ReactPropTypeLocationNames = __webpack_require__(42);
	var ReactReconciler = __webpack_require__(37);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);
	var emptyObject = __webpack_require__(22);
	var invariant = __webpack_require__(15);
	var shouldUpdateReactComponent = __webpack_require__(94);
	var warning = __webpack_require__(23);

	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;

	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedComponent = null;

	    this._context = null;
	    this._mountOrder = 0;
	    this._isTopLevel = false;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;

	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(this._currentElement._context);

	    var Component = ReactNativeComponent.getComponentClassForElement(
	      this._currentElement
	    );

	    // Initialize the public class
	    var inst = new Component(publicProps, publicContext);

	    if ("production" !== process.env.NODE_ENV) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      ("production" !== process.env.NODE_ENV ? warning(
	        inst.render != null,
	        '%s(...): No `render` method found on the returned component ' +
	        'instance: you may have forgotten to define `render` in your ' +
	        'component or you may have accidentally tried to render an element ' +
	        'whose type is a function that isn\'t a React component.',
	        Component.displayName || Component.name || 'Component'
	      ) : null);
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if ("production" !== process.env.NODE_ENV) {
	      this._warnIfContextsDiffer(this._currentElement._context, context);
	    }

	    if ("production" !== process.env.NODE_ENV) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getInitialState ||
	        inst.getInitialState.isReactClassApproved,
	        'getInitialState was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Did you mean to define a state property instead?',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getDefaultProps ||
	        inst.getDefaultProps.isReactClassApproved,
	        'getDefaultProps was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Use a static property to define defaultProps instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.propTypes,
	        'propTypes was defined as an instance property on %s. Use a static ' +
	        'property to define propTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.contextTypes,
	        'contextTypes was defined as an instance property on %s. Use a ' +
	        'static property to define contextTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof inst.componentShouldUpdate !== 'function',
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        (this.getName() || 'A component')
	      ) : null);
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof initialState === 'object' && !Array.isArray(initialState),
	      '%s.state: must be set to an object or null',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var childContext;
	    var renderedElement;

	    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;
	    ReactLifeCycle.currentlyMountingInstance = this;
	    try {
	      if (inst.componentWillMount) {
	        inst.componentWillMount();
	        // When mounting, calls to `setState` by `componentWillMount` will set
	        // `this._pendingStateQueue` without triggering a re-render.
	        if (this._pendingStateQueue) {
	          inst.state = this._processPendingState(inst.props, inst.context);
	        }
	      }

	      childContext = this._getValidatedChildContext(context);
	      renderedElement = this._renderValidatedComponent(childContext);
	    } finally {
	      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;
	    }

	    this._renderedComponent = this._instantiateReactComponent(
	      renderedElement,
	      this._currentElement.type // The wrapping type
	    );

	    var markup = ReactReconciler.mountComponent(
	      this._renderedComponent,
	      rootID,
	      transaction,
	      this._mergeChildContext(context, childContext)
	    );
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }

	    return markup;
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function() {
	    var inst = this._instance;

	    if (inst.componentWillUnmount) {
	      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;
	      ReactLifeCycle.currentlyUnmountingInstance = this;
	      try {
	        inst.componentWillUnmount();
	      } finally {
	        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;
	      }
	    }

	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;

	    // Reset pending fields
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Schedule a partial update to the props. Only used for internal testing.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @internal
	   */
	  _setPropsInternal: function(partialProps, callback) {
	    // This is a deoptimized path. We optimize for always having an element.
	    // This creates an extra internal element.
	    var element = this._pendingElement || this._currentElement;
	    this._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      assign({}, element.props, partialProps)
	    );
	    ReactUpdates.enqueueUpdate(this, callback);
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function(context) {
	    var maskedContext = null;
	    // This really should be getting the component class for the element,
	    // but we know that we're not going to need it for built-ins.
	    if (typeof this._currentElement.type === 'string') {
	      return emptyObject;
	    }
	    var contextTypes = this._currentElement.type.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function(context) {
	    var maskedContext = this._maskContext(context);
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.contextTypes) {
	        this._checkPropTypes(
	          Component.contextTypes,
	          maskedContext,
	          ReactPropTypeLocations.context
	        );
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _getValidatedChildContext: function(currentContext) {
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof inst.constructor.childContextTypes === 'object',
	        '%s.getChildContext(): childContextTypes must be defined in order to ' +
	        'use getChildContext().',
	        this.getName() || 'ReactCompositeComponent'
	      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));
	      if ("production" !== process.env.NODE_ENV) {
	        this._checkPropTypes(
	          inst.constructor.childContextTypes,
	          childContext,
	          ReactPropTypeLocations.childContext
	        );
	      }
	      for (var name in childContext) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          name in inst.constructor.childContextTypes,
	          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
	          this.getName() || 'ReactCompositeComponent',
	          name
	        ) : invariant(name in inst.constructor.childContextTypes));
	      }
	      return childContext;
	    }
	    return null;
	  },

	  _mergeChildContext: function(currentContext, childContext) {
	    if (childContext) {
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function(newProps) {
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.propTypes) {
	        this._checkPropTypes(
	          Component.propTypes,
	          newProps,
	          ReactPropTypeLocations.prop
	        );
	      }
	    }
	    return newProps;
	  },

	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          ("production" !== process.env.NODE_ENV ? invariant(
	            typeof propTypes[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually ' +
	            'from React.PropTypes.',
	            componentName || 'React class',
	            ReactPropTypeLocationNames[location],
	            propName
	          ) : invariant(typeof propTypes[propName] === 'function'));
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // React.render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);

	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Composite propType: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          } else {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Context Types: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          }
	        }
	      }
	    }
	  },

	  receiveComponent: function(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(
	      transaction,
	      prevElement,
	      nextElement,
	      prevContext,
	      nextContext
	    );
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(
	        this,
	        this._pendingElement || this._currentElement,
	        transaction,
	        this._context
	      );
	    }

	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      if ("production" !== process.env.NODE_ENV) {
	        ReactElementValidator.checkAndWarnForMutatedProps(
	          this._currentElement
	        );
	      }

	      this.updateComponent(
	        transaction,
	        this._currentElement,
	        this._currentElement,
	        this._context,
	        this._context
	      );
	    }
	  },

	  /**
	   * Compare two contexts, warning if they are different
	   * TODO: Remove this check when owner-context is removed
	   */
	   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {
	    ownerBasedContext = this._maskContext(ownerBasedContext);
	    parentBasedContext = this._maskContext(parentBasedContext);
	    var parentKeys = Object.keys(parentBasedContext).sort();
	    var displayName = this.getName() || 'ReactCompositeComponent';
	    for (var i = 0; i < parentKeys.length; i++) {
	      var key = parentKeys[i];
	      ("production" !== process.env.NODE_ENV ? warning(
	        ownerBasedContext[key] === parentBasedContext[key],
	        'owner-based and parent-based contexts differ '  +
	        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +
	        '(see: http://fb.me/react-context-by-parent)',
	        ownerBasedContext[key],
	        parentBasedContext[key],
	        key,
	        displayName
	      ) : null);
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(
	    transaction,
	    prevParentElement,
	    nextParentElement,
	    prevUnmaskedContext,
	    nextUnmaskedContext
	  ) {
	    var inst = this._instance;

	    var nextContext = inst.context;
	    var nextProps = inst.props;

	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement !== nextParentElement) {
	      nextContext = this._processContext(nextParentElement._context);
	      nextProps = this._processProps(nextParentElement.props);

	      if ("production" !== process.env.NODE_ENV) {
	        if (nextUnmaskedContext != null) {
	          this._warnIfContextsDiffer(
	            nextParentElement._context,
	            nextUnmaskedContext
	          );
	        }
	      }

	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.

	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);

	    var shouldUpdate =
	      this._pendingForceUpdate ||
	      !inst.shouldComponentUpdate ||
	      inst.shouldComponentUpdate(nextProps, nextState, nextContext);

	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof shouldUpdate !== 'undefined',
	        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
	        'boolean value. Make sure to return true or false.',
	        this.getName() || 'ReactCompositeComponent'
	      ) : null);
	    }

	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(
	        nextParentElement,
	        nextProps,
	        nextState,
	        nextContext,
	        transaction,
	        nextUnmaskedContext
	      );
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(
	        nextState,
	        typeof partial === 'function' ?
	          partial.call(inst, nextState, props, context) :
	          partial
	      );
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function(
	    nextElement,
	    nextProps,
	    nextState,
	    nextContext,
	    transaction,
	    unmaskedContext
	  ) {
	    var inst = this._instance;

	    var prevProps = inst.props;
	    var prevState = inst.state;
	    var prevContext = inst.context;

	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (inst.componentDidUpdate) {
	      transaction.getReactMountReady().enqueue(
	        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
	        inst
	      );
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var childContext = this._getValidatedChildContext();
	    var nextRenderedElement = this._renderValidatedComponent(childContext);
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(
	        prevComponentInstance,
	        nextRenderedElement,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);

	      this._renderedComponent = this._instantiateReactComponent(
	        nextRenderedElement,
	        this._currentElement.type
	      );
	      var nextMarkup = ReactReconciler.mountComponent(
	        this._renderedComponent,
	        thisID,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },

	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(
	      prevComponentID,
	      nextMarkup
	    );
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function() {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if ("production" !== process.env.NODE_ENV) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' &&
	          inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function(childContext) {
	    var renderedComponent;
	    var previousContext = ReactContext.current;
	    ReactContext.current = this._mergeChildContext(
	      this._currentElement._context,
	      childContext
	    );
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent =
	        this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactContext.current = previousContext;
	      ReactCurrentOwner.current = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      // TODO: An `isValidNode` function would probably be more appropriate
	      renderedComponent === null || renderedComponent === false ||
	      ReactElement.isValidElement(renderedComponent),
	      '%s.render(): A valid ReactComponent must be returned. You may have ' +
	        'returned undefined, an array or some other invalid object.',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false ||
	    ReactElement.isValidElement(renderedComponent)));
	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function(ref, component) {
	    var inst = this.getPublicInstance();
	    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
	    refs[ref] = component.getPublicInstance();
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return (
	      type.displayName || (constructor && constructor.displayName) ||
	      type.name || (constructor && constructor.name) ||
	      null
	    );
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by React.render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function() {
	    return this._instance;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	ReactPerf.measureMethods(
	  ReactCompositeComponentMixin,
	  'ReactCompositeComponent',
	  {
	    mountComponent: 'mountComponent',
	    updateComponent: 'updateComponent',
	    _renderValidatedComponent: '_renderValidatedComponent'
	  }
	);

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var invariant = __webpack_require__(15);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function(environment) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !injected,
	        'ReactCompositeComponent: injectEnvironment() can only be called once.'
	      ) : invariant(!injected));
	      ReactComponentEnvironment.unmountIDFromEnvironment =
	        environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID =
	        environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates =
	        environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */

	'use strict';

	var warning = __webpack_require__(23);

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  if (prevElement != null && nextElement != null) {
	    var prevType = typeof prevElement;
	    var nextType = typeof nextElement;
	    if (prevType === 'string' || prevType === 'number') {
	      return (nextType === 'string' || nextType === 'number');
	    } else {
	      if (nextType === 'object' &&
	          prevElement.type === nextElement.type &&
	          prevElement.key === nextElement.key) {
	        var ownersMatch = prevElement._owner === nextElement._owner;
	        var prevName = null;
	        var nextName = null;
	        var nextDisplayName = null;
	        if ("production" !== process.env.NODE_ENV) {
	          if (!ownersMatch) {
	            if (prevElement._owner != null &&
	                prevElement._owner.getPublicInstance() != null &&
	                prevElement._owner.getPublicInstance().constructor != null) {
	              prevName =
	                prevElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement._owner != null &&
	                nextElement._owner.getPublicInstance() != null &&
	                nextElement._owner.getPublicInstance().constructor != null) {
	              nextName =
	                nextElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement.type != null &&
	                nextElement.type.displayName != null) {
	              nextDisplayName = nextElement.type.displayName;
	            }
	            if (nextElement.type != null && typeof nextElement.type === 'string') {
	              nextDisplayName = nextElement.type;
	            }
	            if (typeof nextElement.type !== 'string' ||
	                nextElement.type === 'input' ||
	                nextElement.type === 'textarea') {
	              if ((prevElement._owner != null &&
	                  prevElement._owner._isOwnerNecessary === false) ||
	                  (nextElement._owner != null &&
	                  nextElement._owner._isOwnerNecessary === false)) {
	                if (prevElement._owner != null) {
	                  prevElement._owner._isOwnerNecessary = true;
	                }
	                if (nextElement._owner != null) {
	                  nextElement._owner._isOwnerNecessary = true;
	                }
	                ("production" !== process.env.NODE_ENV ? warning(
	                  false,
	                  '<%s /> is being rendered by both %s and %s using the same ' +
	                  'key (%s) in the same place. Currently, this means that ' +
	                  'they don\'t preserve state. This behavior should be very ' +
	                  'rare so we\'re considering deprecating it. Please contact ' +
	                  'the React team and explain your use case so that we can ' +
	                  'take that into consideration.',
	                  nextDisplayName || 'Unknown Component',
	                  prevName || '[Unknown]',
	                  nextName || '[Unknown]',
	                  prevElement.key
	                ) : null);
	              }
	            }
	          }
	        }
	        return ownersMatch;
	      }
	    }
	  }
	  return false;
	}

	module.exports = shouldUpdateReactComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var CSSPropertyOperations = __webpack_require__(57);
	var DOMProperty = __webpack_require__(52);
	var DOMPropertyOperations = __webpack_require__(51);
	var ReactBrowserEventEmitter = __webpack_require__(76);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(55);
	var ReactMount = __webpack_require__(75);
	var ReactMultiChild = __webpack_require__(96);
	var ReactPerf = __webpack_require__(36);

	var assign = __webpack_require__(21);
	var escapeTextContentForBrowser = __webpack_require__(54);
	var invariant = __webpack_require__(15);
	var isEventSupported = __webpack_require__(83);
	var keyOf = __webpack_require__(47);
	var warning = __webpack_require__(23);

	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = {'string': true, 'number': true};

	var STYLE = keyOf({style: null});

	var ELEMENT_NODE_TYPE = 1;

	/**
	 * Optionally injectable operations for mutating the DOM
	 */
	var BackendIDOperations = null;

	/**
	 * @param {?object} props
	 */
	function assertValidProps(props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (props.dangerouslySetInnerHTML != null) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.children == null,
	      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
	    ) : invariant(props.children == null));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof props.dangerouslySetInnerHTML === 'object' &&
	      '__html' in props.dangerouslySetInnerHTML,
	      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
	      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
	      'for more information.'
	    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&
	    '__html' in props.dangerouslySetInnerHTML));
	  }
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      props.innerHTML == null,
	      'Directly setting property `innerHTML` is not permitted. ' +
	      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
	    ) : null);
	    ("production" !== process.env.NODE_ENV ? warning(
	      !props.contentEditable || props.children == null,
	      'A component is `contentEditable` and contains `children` managed by ' +
	      'React. It is now your responsibility to guarantee that none of ' +
	      'those nodes are unexpectedly modified or duplicated. This is ' +
	      'probably not intentional.'
	    ) : null);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    props.style == null || typeof props.style === 'object',
	    'The `style` prop expects a mapping from style properties to values, ' +
	    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
	    'using JSX.'
	  ) : invariant(props.style == null || typeof props.style === 'object'));
	}

	function putListener(id, registrationName, listener, transaction) {
	  if ("production" !== process.env.NODE_ENV) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    ("production" !== process.env.NODE_ENV ? warning(
	      registrationName !== 'onScroll' || isEventSupported('scroll', true),
	      'This browser doesn\'t support the `onScroll` event'
	    ) : null);
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
	      container.ownerDocument :
	      container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getPutListenerQueue().enqueuePutListener(
	    id,
	    registrationName,
	    listener
	  );
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};

	// We accept any tag to be rendered but since this gets injected into abitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    ("production" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
	    validatedTagCache[tag] = true;
	  }
	}

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag;
	  this._renderedChildren = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  construct: function(element) {
	    this._currentElement = element;
	  },

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} The computed markup.
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    assertValidProps(this._currentElement.props);
	    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
	    return (
	      this._createOpenTagMarkupAndPutListeners(transaction) +
	      this._createContentMarkup(transaction, context) +
	      closeTag
	    );
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function(transaction) {
	    var props = this._currentElement.props;
	    var ret = '<' + this._tag;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, propValue, transaction);
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup =
	          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret + '>';
	    }

	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID + '>';
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function(transaction, context) {
	    var prefix = '';
	    if (this._tag === 'listing' ||
	        this._tag === 'pre' ||
	        this._tag === 'textarea') {
	      // Add an initial newline because browsers ignore the first newline in
	      // a <listing>, <pre>, or <textarea> as an "authoring convenience" -- see
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.
	      prefix = '\n';
	    }

	    var props = this._currentElement.props;

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        return prefix + innerHTML.__html;
	      }
	    } else {
	      var contentToUse =
	        CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        return prefix + escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(
	          childrenToUse,
	          transaction,
	          context
	        );
	        return prefix + mountImages.join('');
	      }
	    }
	    return prefix;
	  },

	  receiveComponent: function(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(transaction, prevElement, nextElement, context) {
	    assertValidProps(this._currentElement.props);
	    this._updateDOMProperties(prevElement.props, transaction);
	    this._updateDOMChildren(prevElement.props, transaction, context);
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMProperties: function(lastProps, transaction) {
	    var nextProps = this._currentElement.props;
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) ||
	         !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        deleteListener(this._rootNodeID, propKey);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.deletePropertyByID(
	          this._rootNodeID,
	          propKey
	        );
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ?
	        this._previousStyleCopy :
	        lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) &&
	                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) &&
	                lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, nextProp, transaction);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.updatePropertyByID(
	          this._rootNodeID,
	          propKey,
	          nextProp
	        );
	      }
	    }
	    if (styleUpdates) {
	      BackendIDOperations.updateStylesByID(
	        this._rootNodeID,
	        styleUpdates
	      );
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMChildren: function(lastProps, transaction, context) {
	    var nextProps = this._currentElement.props;

	    var lastContent =
	      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent =
	      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml =
	      lastProps.dangerouslySetInnerHTML &&
	      lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml =
	      nextProps.dangerouslySetInnerHTML &&
	      nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        BackendIDOperations.updateInnerHTMLByID(
	          this._rootNodeID,
	          nextHtml
	        );
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function() {
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	  }

	};

	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});

	assign(
	  ReactDOMComponent.prototype,
	  ReactDOMComponent.Mixin,
	  ReactMultiChild.Mixin
	);

	ReactDOMComponent.injection = {
	  injectIDOperations: function(IDOperations) {
	    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;
	  }
	};

	module.exports = ReactDOMComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */

	'use strict';

	var ReactComponentEnvironment = __webpack_require__(93);
	var ReactMultiChildUpdateTypes = __webpack_require__(72);

	var ReactReconciler = __webpack_require__(37);
	var ReactChildReconciler = __webpack_require__(97);

	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;

	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];

	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];

	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    textContent: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}

	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}

	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    textContent: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(
	      updateQueue,
	      markupQueue
	    );
	    clearQueue();
	  }
	}

	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function(nestedChildren, transaction, context) {
	      var children = ReactChildReconciler.instantiateChildren(
	        nestedChildren, transaction, context
	      );
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(
	            child,
	            rootID,
	            transaction,
	            context
	          );
	          child._mountIndex = index;
	          mountImages.push(mountImage);
	          index++;
	        }
	      }
	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function(nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function(nextNestedChildren, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildren, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }

	      }
	    },

	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function(nextNestedChildren, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = ReactChildReconciler.updateChildren(
	        prevChildren, nextNestedChildren, transaction, context
	      );
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChildByName(prevChild, name);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(
	            nextChild, name, nextIndex, transaction, context
	          );
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) &&
	            !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChildByName(prevChildren[name], name);
	        }
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function() {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function(child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function(child, mountImage) {
	      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function(child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },

	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function(textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function(
	      child,
	      name,
	      index,
	      transaction,
	      context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(
	        child,
	        rootID,
	        transaction,
	        context
	      );
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },

	    /**
	     * Unmounts a rendered child by name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @param {string} name Name of the child in `this._renderedChildren`.
	     * @private
	     */
	    _unmountChildByName: function(child, name) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }

	  }

	};

	module.exports = ReactMultiChild;


/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(37);

	var flattenChildren = __webpack_require__(98);
	var instantiateReactComponent = __webpack_require__(91);
	var shouldUpdateReactComponent = __webpack_require__(94);

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {

	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function(nestedChildNodes, transaction, context) {
	    var children = flattenChildren(nestedChildNodes);
	    for (var name in children) {
	      if (children.hasOwnProperty(name)) {
	        var child = children[name];
	        // The rendered children must be turned into instances as they're
	        // mounted.
	        var childInstance = instantiateReactComponent(child, null);
	        children[name] = childInstance;
	      }
	    }
	    return children;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextNestedChildNodes Nested child maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function(
	    prevChildren,
	    nextNestedChildNodes,
	    transaction,
	    context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    var nextChildren = flattenChildren(nextNestedChildNodes);
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(
	          prevChild, nextElement, transaction, context
	        );
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(
	          nextElement,
	          null
	        );
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) &&
	          !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function(renderedChildren) {
	    for (var name in renderedChildren) {
	      var renderedChild = renderedChildren[name];
	      ReactReconciler.unmountComponent(renderedChild);
	    }
	  }

	};

	module.exports = ReactChildReconciler;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */

	'use strict';

	var traverseAllChildren = __webpack_require__(26);
	var warning = __webpack_require__(23);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = !result.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'flattenChildren(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}

	module.exports = flattenChildren;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(100);
	var ChangeEventPlugin = __webpack_require__(108);
	var ClientReactRootIndex = __webpack_require__(110);
	var DefaultEventPluginOrder = __webpack_require__(111);
	var EnterLeaveEventPlugin = __webpack_require__(112);
	var ExecutionEnvironment = __webpack_require__(59);
	var HTMLDOMPropertyConfig = __webpack_require__(116);
	var MobileSafariClickEventPlugin = __webpack_require__(117);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(55);
	var ReactDefaultBatchingStrategy = __webpack_require__(120);
	var ReactDOMComponent = __webpack_require__(95);
	var ReactDOMButton = __webpack_require__(121);
	var ReactDOMForm = __webpack_require__(124);
	var ReactDOMImg = __webpack_require__(126);
	var ReactDOMIDOperations = __webpack_require__(56);
	var ReactDOMIframe = __webpack_require__(127);
	var ReactDOMInput = __webpack_require__(128);
	var ReactDOMOption = __webpack_require__(131);
	var ReactDOMSelect = __webpack_require__(132);
	var ReactDOMTextarea = __webpack_require__(133);
	var ReactDOMTextComponent = __webpack_require__(50);
	var ReactElement = __webpack_require__(19);
	var ReactEventListener = __webpack_require__(134);
	var ReactInjection = __webpack_require__(137);
	var ReactInstanceHandles = __webpack_require__(27);
	var ReactMount = __webpack_require__(75);
	var ReactReconcileTransaction = __webpack_require__(138);
	var SelectEventPlugin = __webpack_require__(144);
	var ServerReactRootIndex = __webpack_require__(146);
	var SimpleEventPlugin = __webpack_require__(147);
	var SVGDOMPropertyConfig = __webpack_require__(156);

	var createFullPageComponent = __webpack_require__(157);

	function autoGenerateWrapperClass(type) {
	  return ReactClass.createClass({
	    tagName: type.toUpperCase(),
	    render: function() {
	      return new ReactElement(
	        type,
	        null,
	        null,
	        null,
	        null,
	        this.props
	      );
	    }
	  });
	}

	function inject() {
	  ReactInjection.EventEmitter.injectReactEventListener(
	    ReactEventListener
	  );

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.NativeComponent.injectGenericComponentClass(
	    ReactDOMComponent
	  );

	  ReactInjection.NativeComponent.injectTextComponentClass(
	    ReactDOMTextComponent
	  );

	  ReactInjection.NativeComponent.injectAutoWrapper(
	    autoGenerateWrapperClass
	  );

	  // This needs to happen before createFullPageComponent() otherwise the mixin
	  // won't be included.
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);

	  ReactInjection.NativeComponent.injectComponentClasses({
	    'button': ReactDOMButton,
	    'form': ReactDOMForm,
	    'iframe': ReactDOMIframe,
	    'img': ReactDOMImg,
	    'input': ReactDOMInput,
	    'option': ReactDOMOption,
	    'select': ReactDOMSelect,
	    'textarea': ReactDOMTextarea,

	    'html': createFullPageComponent('html'),
	    'head': createFullPageComponent('head'),
	    'body': createFullPageComponent('body')
	  });

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

	  ReactInjection.Updates.injectReconcileTransaction(
	    ReactReconcileTransaction
	  );
	  ReactInjection.Updates.injectBatchingStrategy(
	    ReactDefaultBatchingStrategy
	  );

	  ReactInjection.RootIndex.injectCreateReactRootIndex(
	    ExecutionEnvironment.canUseDOM ?
	      ClientReactRootIndex.createReactRootIndex :
	      ServerReactRootIndex.createReactRootIndex
	  );

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);

	  if ("production" !== process.env.NODE_ENV) {
	    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
	    if ((/[?&]react_perf\b/).test(url)) {
	      var ReactDefaultPerf = __webpack_require__(158);
	      ReactDefaultPerf.start();
	    }
	  }
	}

	module.exports = {
	  inject: inject
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPropagators = __webpack_require__(101);
	var ExecutionEnvironment = __webpack_require__(59);
	var FallbackCompositionState = __webpack_require__(102);
	var SyntheticCompositionEvent = __webpack_require__(104);
	var SyntheticInputEvent = __webpack_require__(107);

	var keyOf = __webpack_require__(47);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'CompositionEvent' in window
	);

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'TextEvent' in window &&
	  !documentMode &&
	  !isPresto()
	);

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = (
	  ExecutionEnvironment.canUseDOM &&
	  (
	    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)
	  )
	);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (
	    typeof opera === 'object' &&
	    typeof opera.version === 'function' &&
	    parseInt(opera.version(), 10) <= 12
	  );
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBeforeInput: null}),
	      captured: keyOf({onBeforeInputCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topTextInput,
	      topLevelTypes.topPaste
	    ]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionEnd: null}),
	      captured: keyOf({onCompositionEndCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionStart: null}),
	      captured: keyOf({onCompositionStartCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionStart,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionUpdate: null}),
	      captured: keyOf({onCompositionUpdateCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionUpdate,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (
	    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	    !(nativeEvent.ctrlKey && nativeEvent.altKey)
	  );
	}


	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return (
	    topLevelType === topLevelTypes.topKeyDown &&
	    nativeEvent.keyCode === START_KEYCODE
	  );
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return (nativeEvent.keyCode !== START_KEYCODE);
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(
	    eventType,
	    topLevelTargetID,
	    nativeEvent
	  );

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (
	      topLevelType === topLevelTypes.topCompositionEnd ||
	      isFallbackCompositionEnd(topLevelType, nativeEvent)
	    ) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(
	    eventTypes.beforeInput,
	    topLevelTargetID,
	    nativeEvent
	  );

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID,
	    nativeEvent
	  ) {
	    return [
	      extractCompositionEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      ),
	      extractBeforeInputEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      )
	    ];
	  }
	};

	module.exports = BeforeInputEventPlugin;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPluginHub = __webpack_require__(77);

	var accumulateInto = __webpack_require__(79);
	var forEachAccumulated = __webpack_require__(80);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName =
	    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (!domID) {
	      throw new Error('Dispatching id must not be null');
	    }
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners =
	      accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We can not perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
	      event.dispatchMarker,
	      accumulateDirectionalDispatches,
	      event
	    );
	  }
	}


	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners =
	        accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
	    fromID,
	    toID,
	    accumulateDispatches,
	    leave,
	    enter
	  );
	}


	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}



	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);

	var assign = __webpack_require__(21);
	var getTextContentAccessor = __webpack_require__(103);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	assign(FallbackCompositionState.prototype, {
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;


/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ?
	      'textContent' :
	      'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(105);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticCompositionEvent,
	  CompositionEventInterface
	);

	module.exports = SyntheticCompositionEvent;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);

	var assign = __webpack_require__(21);
	var emptyFunction = __webpack_require__(24);
	var getEventTarget = __webpack_require__(106);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: getEventTarget,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ?
	    nativeEvent.defaultPrevented :
	    nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}

	assign(SyntheticEvent.prototype, {

	  preventDefault: function() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function() {
	    var event = this.nativeEvent;
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function(Class, Interface) {
	  var Super = this;

	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

	module.exports = SyntheticEvent;


/***/ },
/* 106 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;


/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(105);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(
	  SyntheticInputEvent,
	  InputEventInterface
	);

	module.exports = SyntheticInputEvent;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPluginHub = __webpack_require__(77);
	var EventPropagators = __webpack_require__(101);
	var ExecutionEnvironment = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(34);
	var SyntheticEvent = __webpack_require__(105);

	var isEventSupported = __webpack_require__(83);
	var isTextInputElement = __webpack_require__(109);
	var keyOf = __webpack_require__(47);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onChange: null}),
	      captured: keyOf({onChangeCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topChange,
	      topLevelTypes.topClick,
	      topLevelTypes.topFocus,
	      topLevelTypes.topInput,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  return (
	    elem.nodeName === 'SELECT' ||
	    (elem.nodeName === 'INPUT' && elem.type === 'file')
	  );
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (
	    (!('documentMode' in document) || document.documentMode > 8)
	  );
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(
	    eventTypes.change,
	    activeElementID,
	    nativeEvent
	  );
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue();
	}

	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}

	function getTargetIDForChangeEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}


	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (
	    (!('documentMode' in document) || document.documentMode > 9)
	  );
	}

	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp =  {
	  get: function() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(
	    target.constructor.prototype,
	    'value'
	  );

	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}

	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);

	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}

	// For IE8 and IE9.
	function handleEventsForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetIDForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange ||
	      topLevelType === topLevelTypes.topKeyUp ||
	      topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}


	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return (
	    elem.nodeName === 'INPUT' &&
	    (elem.type === 'checkbox' || elem.type === 'radio')
	  );
	}

	function getTargetIDForClickEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }

	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(
	          eventTypes.change,
	          targetID,
	          nativeEvent
	        );
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	    }
	  }

	};

	module.exports = ChangeEventPlugin;


/***/ },
/* 109 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  return elem && (
	    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')
	  );
	}

	module.exports = isTextInputElement;


/***/ },
/* 110 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */

	'use strict';

	var nextReactRootIndex = 0;

	var ClientReactRootIndex = {
	  createReactRootIndex: function() {
	    return nextReactRootIndex++;
	  }
	};

	module.exports = ClientReactRootIndex;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(47);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [
	  keyOf({ResponderEventPlugin: null}),
	  keyOf({SimpleEventPlugin: null}),
	  keyOf({TapEventPlugin: null}),
	  keyOf({EnterLeaveEventPlugin: null}),
	  keyOf({ChangeEventPlugin: null}),
	  keyOf({SelectEventPlugin: null}),
	  keyOf({BeforeInputEventPlugin: null}),
	  keyOf({AnalyticsEventPlugin: null}),
	  keyOf({MobileSafariClickEventPlugin: null})
	];

	module.exports = DefaultEventPluginOrder;


/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPropagators = __webpack_require__(101);
	var SyntheticMouseEvent = __webpack_require__(113);

	var ReactMount = __webpack_require__(75);
	var keyOf = __webpack_require__(47);

	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({onMouseEnter: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  },
	  mouseLeave: {
	    registrationName: keyOf({onMouseLeave: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  }
	};

	var extractedEvents = [null, null];

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topMouseOver &&
	        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut &&
	        topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from, to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      to =
	        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
	        win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromID = from ? ReactMount.getID(from) : '';
	    var toID = to ? ReactMount.getID(to) : '';

	    var leave = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseLeave,
	      fromID,
	      nativeEvent
	    );
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;

	    var enter = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseEnter,
	      toID,
	      nativeEvent
	    );
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;

	    return extractedEvents;
	  }

	};

	module.exports = EnterLeaveEventPlugin;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(114);
	var ViewportMetrics = __webpack_require__(82);

	var getEventModifierState = __webpack_require__(115);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function(event) {
	    return event.relatedTarget || (
	      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))
	    );
	  },
	  // "Proprietary" Interface.
	  pageX: function(event) {
	    return 'pageX' in event ?
	      event.pageX :
	      event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function(event) {
	    return 'pageY' in event ?
	      event.pageY :
	      event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(105);

	var getEventTarget = __webpack_require__(106);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function(event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function(event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;


/***/ },
/* 115 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  /*jshint validthis:true */
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	'use strict';

	var DOMProperty = __webpack_require__(52);
	var ExecutionEnvironment = __webpack_require__(59);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE =
	  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE =
	  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = (
	    implementation &&
	    implementation.hasFeature &&
	    implementation.hasFeature(
	      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
	      '1.1'
	    )
	  );
	}


	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(
	    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
	  ),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusMixin
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: null,
	    autoCorrect: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // property is supported for OpenGraph in meta tags.
	    property: null,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};

	module.exports = HTMLDOMPropertyConfig;


/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule MobileSafariClickEventPlugin
	 * @typechecks static-only
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);

	var emptyFunction = __webpack_require__(24);

	var topLevelTypes = EventConstants.topLevelTypes;

	/**
	 * Mobile Safari does not fire properly bubble click events on non-interactive
	 * elements, which means delegated click listeners do not fire. The workaround
	 * for this bug involves attaching an empty click listener on the target node.
	 *
	 * This particular plugin works around the bug by attaching an empty click
	 * listener on `touchstart` (which does fire on every element).
	 */
	var MobileSafariClickEventPlugin = {

	  eventTypes: null,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topTouchStart) {
	      var target = nativeEvent.target;
	      if (target && !target.onclick) {
	        target.onclick = emptyFunction;
	      }
	    }
	  }

	};

	module.exports = MobileSafariClickEventPlugin;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */

	'use strict';

	var findDOMNode = __webpack_require__(119);

	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function() {
	    return findDOMNode(this);
	  }
	};

	module.exports = ReactBrowserComponentMixin;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(25);
	var ReactInstanceMap = __webpack_require__(33);
	var ReactMount = __webpack_require__(75);

	var invariant = __webpack_require__(15);
	var isNode = __webpack_require__(89);
	var warning = __webpack_require__(23);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if ("production" !== process.env.NODE_ENV) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        owner._warnedAboutRefsInRender,
	        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +
	        'render() should be a pure function of props and state. It should ' +
	        'never access something that requires stale data from the previous ' +
	        'render, such as refs. Move this logic to componentDidMount and ' +
	        'componentDidUpdate instead.',
	        owner.getName() || 'A component'
	      ) : null);
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (isNode(componentOrElement)) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    componentOrElement.render == null ||
	    typeof componentOrElement.render !== 'function',
	    'Component (with keys: %s) contains `render` method ' +
	    'but is not mounted in the DOM',
	    Object.keys(componentOrElement)
	  ) : invariant(componentOrElement.render == null ||
	  typeof componentOrElement.render !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    false,
	    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
	    Object.keys(componentOrElement)
	  ) : invariant(false));
	}

	module.exports = findDOMNode;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var ReactUpdates = __webpack_require__(34);
	var Transaction = __webpack_require__(44);

	var assign = __webpack_require__(21);
	var emptyFunction = __webpack_require__(24);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	assign(
	  ReactDefaultBatchingStrategyTransaction.prototype,
	  Transaction.Mixin,
	  {
	    getTransactionWrappers: function() {
	      return TRANSACTION_WRAPPERS;
	    }
	  }
	);

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function(callback, a, b, c, d) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d);
	    } else {
	      transaction.perform(callback, null, a, b, c, d);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(122);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var keyMirror = __webpack_require__(14);

	var button = ReactElement.createFactory('button');

	var mouseListenerNames = keyMirror({
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	});

	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = ReactClass.createClass({
	  displayName: 'ReactDOMButton',
	  tagName: 'BUTTON',

	  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

	  render: function() {
	    var props = {};

	    // Copy the props; except the mouse listeners if we're disabled
	    for (var key in this.props) {
	      if (this.props.hasOwnProperty(key) &&
	          (!this.props.disabled || !mouseListenerNames[key])) {
	        props[key] = this.props[key];
	      }
	    }

	    return button(props, this.props.children);
	  }

	});

	module.exports = ReactDOMButton;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusMixin
	 * @typechecks static-only
	 */

	'use strict';

	var focusNode = __webpack_require__(123);

	var AutoFocusMixin = {
	  componentDidMount: function() {
	    if (this.props.autoFocus) {
	      focusNode(this.getDOMNode());
	    }
	  }
	};

	module.exports = AutoFocusMixin;


/***/ },
/* 123 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */

	"use strict";

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch(e) {
	  }
	}

	module.exports = focusNode;


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMForm
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var LocalEventTrapMixin = __webpack_require__(125);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var form = ReactElement.createFactory('form');

	/**
	 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
	 * to capture it on the <form> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <form> a
	 * composite component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMForm = ReactClass.createClass({
	  displayName: 'ReactDOMForm',
	  tagName: 'FORM',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
	    // `jshint` fails to parse JSX so in order for linting to work in the open
	    // source repo, we need to just use `ReactDOM.form`.
	    return form(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
	  }
	});

	module.exports = ReactDOMForm;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LocalEventTrapMixin
	 */

	'use strict';

	var ReactBrowserEventEmitter = __webpack_require__(76);

	var accumulateInto = __webpack_require__(79);
	var forEachAccumulated = __webpack_require__(80);
	var invariant = __webpack_require__(15);

	function remove(event) {
	  event.remove();
	}

	var LocalEventTrapMixin = {
	  trapBubbledEvent:function(topLevelType, handlerBaseName) {
	    ("production" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
	    // If a component renders to null or if another component fatals and causes
	    // the state of the tree to be corrupted, `node` here can be null.
	    var node = this.getDOMNode();
	    ("production" !== process.env.NODE_ENV ? invariant(
	      node,
	      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'
	    ) : invariant(node));
	    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      node
	    );
	    this._localEventListeners =
	      accumulateInto(this._localEventListeners, listener);
	  },

	  // trapCapturedEvent would look nearly identical. We don't implement that
	  // method because it isn't currently needed.

	  componentWillUnmount:function() {
	    if (this._localEventListeners) {
	      forEachAccumulated(this._localEventListeners, remove);
	    }
	  }
	};

	module.exports = LocalEventTrapMixin;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMImg
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var LocalEventTrapMixin = __webpack_require__(125);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var img = ReactElement.createFactory('img');

	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <img> element itself. There are lots of hacks we could do
	 * to accomplish this, but the most reliable is to make <img> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMImg = ReactClass.createClass({
	  displayName: 'ReactDOMImg',
	  tagName: 'IMG',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    return img(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
	  }
	});

	module.exports = ReactDOMImg;


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIframe
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var LocalEventTrapMixin = __webpack_require__(125);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var iframe = ReactElement.createFactory('iframe');

	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <iframe> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <iframe> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMIframe = ReactClass.createClass({
	  displayName: 'ReactDOMIframe',
	  tagName: 'IFRAME',

	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

	  render: function() {
	    return iframe(this.props);
	  },

	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	  }
	});

	module.exports = ReactDOMIframe;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(122);
	var DOMPropertyOperations = __webpack_require__(51);
	var LinkedValueUtils = __webpack_require__(129);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);
	var ReactMount = __webpack_require__(75);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);

	var input = ReactElement.createFactory('input');

	var instancesByReactID = {};

	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}

	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = ReactClass.createClass({
	  displayName: 'ReactDOMInput',
	  tagName: 'INPUT',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    return {
	      initialChecked: this.props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null
	    };
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    props.defaultChecked = null;
	    props.defaultValue = null;

	    var value = LinkedValueUtils.getValue(this);
	    props.value = value != null ? value : this.state.initialValue;

	    var checked = LinkedValueUtils.getChecked(this);
	    props.checked = checked != null ? checked : this.state.initialChecked;

	    props.onChange = this._handleChange;

	    return input(props, this.props.children);
	  },

	  componentDidMount: function() {
	    var id = ReactMount.getID(this.getDOMNode());
	    instancesByReactID[id] = this;
	  },

	  componentWillUnmount: function() {
	    var rootNode = this.getDOMNode();
	    var id = ReactMount.getID(rootNode);
	    delete instancesByReactID[id];
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var rootNode = this.getDOMNode();
	    if (this.props.checked != null) {
	      DOMPropertyOperations.setValueForProperty(
	        rootNode,
	        'checked',
	        this.props.checked || false
	      );
	    }

	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    // Here we use asap to wait until all updates have propagated, which
	    // is important when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    ReactUpdates.asap(forceUpdateIfMounted, this);

	    var name = this.props.name;
	    if (this.props.type === 'radio' && name != null) {
	      var rootNode = this.getDOMNode();
	      var queryRoot = rootNode;

	      while (queryRoot.parentNode) {
	        queryRoot = queryRoot.parentNode;
	      }

	      // If `rootNode.form` was non-null, then we could try `form.elements`,
	      // but that sometimes behaves strangely in IE8. We could also try using
	      // `form.getElementsByName`, but that will only return direct children
	      // and won't include inputs that use the HTML5 `form=` attribute. Since
	      // the input might not even be in a form, let's just use the global
	      // `querySelectorAll` to ensure we don't miss anything.
	      var group = queryRoot.querySelectorAll(
	        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
	        var otherNode = group[i];
	        if (otherNode === rootNode ||
	            otherNode.form !== rootNode.form) {
	          continue;
	        }
	        var otherID = ReactMount.getID(otherNode);
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherID,
	          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
	          'same `name` is not supported.'
	        ) : invariant(otherID));
	        var otherInstance = instancesByReactID[otherID];
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherInstance,
	          'ReactDOMInput: Unknown radio button ID %s.',
	          otherID
	        ) : invariant(otherInstance));
	        // If this is a controlled radio button group, forcing the input that
	        // was previously checked to update will cause it to be come re-checked
	        // as appropriate.
	        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	      }
	    }

	    return returnValue;
	  }

	});

	module.exports = ReactDOMInput;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */

	'use strict';

	var ReactPropTypes = __webpack_require__(130);

	var invariant = __webpack_require__(15);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(input) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checkedLink == null || input.props.valueLink == null,
	    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
	    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
	  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
	}
	function _assertValueLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.value == null && input.props.onChange == null,
	    'Cannot provide a valueLink and a value or onChange event. If you want ' +
	    'to use value or onChange, you probably don\'t want to use valueLink.'
	  ) : invariant(input.props.value == null && input.props.onChange == null));
	}

	function _assertCheckedLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checked == null && input.props.onChange == null,
	    'Cannot provide a checkedLink and a checked property or onChange event. ' +
	    'If you want to use checked or onChange, you probably don\'t want to ' +
	    'use checkedLink'
	  ) : invariant(input.props.checked == null && input.props.onChange == null));
	}

	/**
	 * @param {SyntheticEvent} e change event to handle
	 */
	function _handleLinkedValueChange(e) {
	  /*jshint validthis:true */
	  this.props.valueLink.requestChange(e.target.value);
	}

	/**
	  * @param {SyntheticEvent} e change event to handle
	  */
	function _handleLinkedCheckChange(e) {
	  /*jshint validthis:true */
	  this.props.checkedLink.requestChange(e.target.checked);
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  Mixin: {
	    propTypes: {
	      value: function(props, propName, componentName) {
	        if (!props[propName] ||
	            hasReadOnlyValue[props.type] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `value` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultValue`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      checked: function(props, propName, componentName) {
	        if (!props[propName] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `checked` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultChecked`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      onChange: ReactPropTypes.func
	    }
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return input.props.valueLink.value;
	    }
	    return input.props.value;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function(input) {
	    if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return input.props.checkedLink.value;
	    }
	    return input.props.checked;
	  },

	  /**
	   * @param {ReactComponent} input Form component
	   * @return {function} change callback either from onChange prop or link.
	   */
	  getOnChange: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return _handleLinkedValueChange;
	    } else if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return _handleLinkedCheckChange;
	    }
	    return input.props.onChange;
	  }
	};

	module.exports = LinkedValueUtils;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactFragment = __webpack_require__(18);
	var ReactPropTypeLocationNames = __webpack_require__(42);

	var emptyFunction = __webpack_require__(24);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var elementTypeChecker = createElementTypeChecker();
	var nodeTypeChecker = createNodeChecker();

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: elementTypeChecker,
	  instanceOf: createInstanceTypeChecker,
	  node: nodeTypeChecker,
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location) {
	    componentName = componentName || ANONYMOUS;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error(
	          ("Required " + locationName + " `" + propName + "` was not specified in ") +
	          ("`" + componentName + "`.")
	        );
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
	        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
	      );
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactElement.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
	      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
	      );
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  function validate(props, propName, componentName, location) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	      ("`" + componentName + "`.")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactNode.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
	        ("supplied to `" + componentName + "`, expected `object`.")
	      );
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	      propValue = ReactFragment.extractIfFragment(propValue);
	      for (var k in propValue) {
	        if (!isNode(propValue[k])) {
	          return false;
	        }
	      }
	      return true;
	    default:
	      return false;
	  }
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	module.exports = ReactPropTypes;


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var warning = __webpack_require__(23);

	var option = ReactElement.createFactory('option');

	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = ReactClass.createClass({
	  displayName: 'ReactDOMOption',
	  tagName: 'OPTION',

	  mixins: [ReactBrowserComponentMixin],

	  componentWillMount: function() {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        this.props.selected == null,
	        'Use the `defaultValue` or `value` props on <select> instead of ' +
	        'setting `selected` on <option>.'
	      ) : null);
	    }
	  },

	  render: function() {
	    return option(this.props, this.props.children);
	  }

	});

	module.exports = ReactDOMOption;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(122);
	var LinkedValueUtils = __webpack_require__(129);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);

	var select = ReactElement.createFactory('select');

	function updateOptionsIfPendingUpdateAndMounted() {
	  /*jshint validthis:true */
	  if (this._pendingUpdate) {
	    this._pendingUpdate = false;
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null && this.isMounted()) {
	      updateOptions(this, value);
	    }
	  }
	}

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function selectValueType(props, propName, componentName) {
	  if (props[propName] == null) {
	    return null;
	  }
	  if (props.multiple) {
	    if (!Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
	        ("`multiple` is true.")
	      );
	    }
	  } else {
	    if (Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
	        ("value if `multiple` is false.")
	      );
	    }
	  }
	}

	/**
	 * @param {ReactComponent} component Instance of ReactDOMSelect
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(component, propValue) {
	  var selectedValue, i, l;
	  var options = component.getDOMNode().options;

	  if (component.props.multiple) {
	    selectedValue = {};
	    for (i = 0, l = propValue.length; i < l; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0, l = options.length; i < l; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0, l = options.length; i < l; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = ReactClass.createClass({
	  displayName: 'ReactDOMSelect',
	  tagName: 'SELECT',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  propTypes: {
	    defaultValue: selectValueType,
	    value: selectValueType
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    props.onChange = this._handleChange;
	    props.value = null;

	    return select(props, this.props.children);
	  },

	  componentWillMount: function() {
	    this._pendingUpdate = false;
	  },

	  componentDidMount: function() {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      updateOptions(this, value);
	    } else if (this.props.defaultValue != null) {
	      updateOptions(this, this.props.defaultValue);
	    }
	  },

	  componentDidUpdate: function(prevProps) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      this._pendingUpdate = false;
	      updateOptions(this, value);
	    } else if (!prevProps.multiple !== !this.props.multiple) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (this.props.defaultValue != null) {
	        updateOptions(this, this.props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(this, this.props.multiple ? [] : '');
	      }
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }

	    this._pendingUpdate = true;
	    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	    return returnValue;
	  }

	});

	module.exports = ReactDOMSelect;


/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var AutoFocusMixin = __webpack_require__(122);
	var DOMPropertyOperations = __webpack_require__(51);
	var LinkedValueUtils = __webpack_require__(129);
	var ReactBrowserComponentMixin = __webpack_require__(118);
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);
	var invariant = __webpack_require__(15);

	var warning = __webpack_require__(23);

	var textarea = ReactElement.createFactory('textarea');

	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}

	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = ReactClass.createClass({
	  displayName: 'ReactDOMTextarea',
	  tagName: 'TEXTAREA',

	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = this.props.children;
	    if (children != null) {
	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'Use the `defaultValue` or `value` props instead of setting ' +
	          'children on <textarea>.'
	        ) : null);
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        defaultValue == null,
	        'If you supply `defaultValue` on a <textarea>, do not pass children.'
	      ) : invariant(defaultValue == null));
	      if (Array.isArray(children)) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          children.length <= 1,
	          '<textarea> can only have at most one child.'
	        ) : invariant(children.length <= 1));
	        children = children[0];
	      }

	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(this);
	    return {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue)
	    };
	  },

	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);

	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.dangerouslySetInnerHTML == null,
	      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
	    ) : invariant(props.dangerouslySetInnerHTML == null));

	    props.defaultValue = null;
	    props.value = null;
	    props.onChange = this._handleChange;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    return textarea(props, this.state.initialValue);
	  },

	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      var rootNode = this.getDOMNode();
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },

	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    ReactUpdates.asap(forceUpdateIfMounted, this);
	    return returnValue;
	  }

	});

	module.exports = ReactDOMTextarea;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */

	'use strict';

	var EventListener = __webpack_require__(135);
	var ExecutionEnvironment = __webpack_require__(59);
	var PooledClass = __webpack_require__(17);
	var ReactInstanceHandles = __webpack_require__(27);
	var ReactMount = __webpack_require__(75);
	var ReactUpdates = __webpack_require__(34);

	var assign = __webpack_require__(21);
	var getEventTarget = __webpack_require__(106);
	var getUnboundedScrollPosition = __webpack_require__(136);

	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(
	  TopLevelCallbackBookKeeping,
	  PooledClass.twoArgumentPooler
	);

	function handleTopLevelImpl(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(
	    getEventTarget(bookKeeping.nativeEvent)
	  ) || window;

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }

	  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(
	      bookKeeping.topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      bookKeeping.nativeEvent
	    );
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function() {
	    return ReactEventListener._enabled;
	  },


	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },

	  monitorScrollValue: function(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
	      topLevelType,
	      nativeEvent
	    );
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(24);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function(target, eventType, callback) {
	    if (!target.addEventListener) {
	      if ("production" !== process.env.NODE_ENV) {
	        console.error(
	          'Attempted to listen to events during the capture phase on a ' +
	          'browser that does not support the capture phase. Your application ' +
	          'will not receive some events.'
	        );
	      }
	      return {
	        remove: emptyFunction
	      };
	    } else {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    }
	  },

	  registerDefault: function() {}
	};

	module.exports = EventListener;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 136 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */

	"use strict";

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(52);
	var EventPluginHub = __webpack_require__(77);
	var ReactComponentEnvironment = __webpack_require__(93);
	var ReactClass = __webpack_require__(45);
	var ReactEmptyComponent = __webpack_require__(84);
	var ReactBrowserEventEmitter = __webpack_require__(76);
	var ReactNativeComponent = __webpack_require__(43);
	var ReactDOMComponent = __webpack_require__(95);
	var ReactPerf = __webpack_require__(36);
	var ReactRootIndex = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(34);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMComponent: ReactDOMComponent.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;


/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */

	'use strict';

	var CallbackQueue = __webpack_require__(35);
	var PooledClass = __webpack_require__(17);
	var ReactBrowserEventEmitter = __webpack_require__(76);
	var ReactInputSelection = __webpack_require__(139);
	var ReactPutListenerQueue = __webpack_require__(143);
	var Transaction = __webpack_require__(44);

	var assign = __webpack_require__(21);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
	   *   restores the previous value.
	   */
	  close: function(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function() {
	    this.reactMountReady.notifyAll();
	  }
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: function() {
	    this.putListenerQueue.putListeners();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  SELECTION_RESTORATION,
	  EVENT_SUPPRESSION,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction() {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap proceedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(140);

	var containsNode = __webpack_require__(87);
	var focusNode = __webpack_require__(123);
	var getActiveElement = __webpack_require__(142);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function(elem) {
	    return elem && (
	      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||
	      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')
	    );
	  },

	  getSelectionInformation: function() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange:
	          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
	          ReactInputSelection.getSelection(focusedElem) :
	          null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem &&
	        isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(
	          priorFocusedElem,
	          priorSelectionRange
	        );
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function(input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || {start: 0, end: 0};
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(59);

	var getNodeForCharacterOffset = __webpack_require__(141);
	var getTextContentAccessor = __webpack_require__(103);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(
	    selection.anchorNode,
	    selection.anchorOffset,
	    selection.focusNode,
	    selection.focusOffset
	  );

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(
	    tempRange.startContainer,
	    tempRange.startOffset,
	    tempRange.endContainer,
	    tempRange.endOffset
	  );

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ?
	            start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = (
	  ExecutionEnvironment.canUseDOM &&
	  'selection' in document &&
	  !('getSelection' in window)
	);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;


/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;


/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document body is not yet defined.
	 */
	function getActiveElement() /*?DOMElement*/ {
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;


/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPutListenerQueue
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);
	var ReactBrowserEventEmitter = __webpack_require__(76);

	var assign = __webpack_require__(21);

	function ReactPutListenerQueue() {
	  this.listenersToPut = [];
	}

	assign(ReactPutListenerQueue.prototype, {
	  enqueuePutListener: function(rootNodeID, propKey, propValue) {
	    this.listenersToPut.push({
	      rootNodeID: rootNodeID,
	      propKey: propKey,
	      propValue: propValue
	    });
	  },

	  putListeners: function() {
	    for (var i = 0; i < this.listenersToPut.length; i++) {
	      var listenerToPut = this.listenersToPut[i];
	      ReactBrowserEventEmitter.putListener(
	        listenerToPut.rootNodeID,
	        listenerToPut.propKey,
	        listenerToPut.propValue
	      );
	    }
	  },

	  reset: function() {
	    this.listenersToPut.length = 0;
	  },

	  destructor: function() {
	    this.reset();
	  }
	});

	PooledClass.addPoolingTo(ReactPutListenerQueue);

	module.exports = ReactPutListenerQueue;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPropagators = __webpack_require__(101);
	var ReactInputSelection = __webpack_require__(139);
	var SyntheticEvent = __webpack_require__(105);

	var getActiveElement = __webpack_require__(142);
	var isTextInputElement = __webpack_require__(109);
	var keyOf = __webpack_require__(47);
	var shallowEqual = __webpack_require__(145);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSelect: null}),
	      captured: keyOf({onSelectCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topContextMenu,
	      topLevelTypes.topFocus,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topMouseDown,
	      topLevelTypes.topMouseUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};

	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @param {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node &&
	      ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown ||
	      activeElement == null ||
	      activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(
	      eventTypes.select,
	      activeElementID,
	      nativeEvent
	    );

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) ||
	            topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't).
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      case topLevelTypes.topSelectionChange:
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent);
	    }
	  }
	};

	module.exports = SelectEventPlugin;


/***/ },
/* 145 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 */

	'use strict';

	/**
	 * Performs equality by iterating through keys on an object and returning
	 * false when any key has values which are not strictly equal between
	 * objA and objB. Returns true when the values of all keys are strictly equal.
	 *
	 * @return {boolean}
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	  var key;
	  // Test for A's keys different from B.
	  for (key in objA) {
	    if (objA.hasOwnProperty(key) &&
	        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
	      return false;
	    }
	  }
	  // Test for B's keys missing from A.
	  for (key in objB) {
	    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
	      return false;
	    }
	  }
	  return true;
	}

	module.exports = shallowEqual;


/***/ },
/* 146 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */

	'use strict';

	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

	var ServerReactRootIndex = {
	  createReactRootIndex: function() {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};

	module.exports = ServerReactRootIndex;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(13);
	var EventPluginUtils = __webpack_require__(12);
	var EventPropagators = __webpack_require__(101);
	var SyntheticClipboardEvent = __webpack_require__(148);
	var SyntheticEvent = __webpack_require__(105);
	var SyntheticFocusEvent = __webpack_require__(149);
	var SyntheticKeyboardEvent = __webpack_require__(150);
	var SyntheticMouseEvent = __webpack_require__(113);
	var SyntheticDragEvent = __webpack_require__(153);
	var SyntheticTouchEvent = __webpack_require__(154);
	var SyntheticUIEvent = __webpack_require__(114);
	var SyntheticWheelEvent = __webpack_require__(155);

	var getEventCharCode = __webpack_require__(151);

	var invariant = __webpack_require__(15);
	var keyOf = __webpack_require__(47);
	var warning = __webpack_require__(23);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBlur: true}),
	      captured: keyOf({onBlurCapture: true})
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onClick: true}),
	      captured: keyOf({onClickCapture: true})
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onContextMenu: true}),
	      captured: keyOf({onContextMenuCapture: true})
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCopy: true}),
	      captured: keyOf({onCopyCapture: true})
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCut: true}),
	      captured: keyOf({onCutCapture: true})
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDoubleClick: true}),
	      captured: keyOf({onDoubleClickCapture: true})
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrag: true}),
	      captured: keyOf({onDragCapture: true})
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnd: true}),
	      captured: keyOf({onDragEndCapture: true})
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnter: true}),
	      captured: keyOf({onDragEnterCapture: true})
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragExit: true}),
	      captured: keyOf({onDragExitCapture: true})
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragLeave: true}),
	      captured: keyOf({onDragLeaveCapture: true})
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragOver: true}),
	      captured: keyOf({onDragOverCapture: true})
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragStart: true}),
	      captured: keyOf({onDragStartCapture: true})
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrop: true}),
	      captured: keyOf({onDropCapture: true})
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onFocus: true}),
	      captured: keyOf({onFocusCapture: true})
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onInput: true}),
	      captured: keyOf({onInputCapture: true})
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyDown: true}),
	      captured: keyOf({onKeyDownCapture: true})
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyPress: true}),
	      captured: keyOf({onKeyPressCapture: true})
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyUp: true}),
	      captured: keyOf({onKeyUpCapture: true})
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onLoad: true}),
	      captured: keyOf({onLoadCapture: true})
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onError: true}),
	      captured: keyOf({onErrorCapture: true})
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseDown: true}),
	      captured: keyOf({onMouseDownCapture: true})
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseMove: true}),
	      captured: keyOf({onMouseMoveCapture: true})
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOut: true}),
	      captured: keyOf({onMouseOutCapture: true})
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOver: true}),
	      captured: keyOf({onMouseOverCapture: true})
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseUp: true}),
	      captured: keyOf({onMouseUpCapture: true})
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onPaste: true}),
	      captured: keyOf({onPasteCapture: true})
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onReset: true}),
	      captured: keyOf({onResetCapture: true})
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onScroll: true}),
	      captured: keyOf({onScrollCapture: true})
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSubmit: true}),
	      captured: keyOf({onSubmitCapture: true})
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchCancel: true}),
	      captured: keyOf({onTouchCancelCapture: true})
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchEnd: true}),
	      captured: keyOf({onTouchEndCapture: true})
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchMove: true}),
	      captured: keyOf({onTouchMoveCapture: true})
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchStart: true}),
	      captured: keyOf({onTouchStartCapture: true})
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onWheel: true}),
	      captured: keyOf({onWheelCapture: true})
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topBlur:        eventTypes.blur,
	  topClick:       eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy:        eventTypes.copy,
	  topCut:         eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag:        eventTypes.drag,
	  topDragEnd:     eventTypes.dragEnd,
	  topDragEnter:   eventTypes.dragEnter,
	  topDragExit:    eventTypes.dragExit,
	  topDragLeave:   eventTypes.dragLeave,
	  topDragOver:    eventTypes.dragOver,
	  topDragStart:   eventTypes.dragStart,
	  topDrop:        eventTypes.drop,
	  topError:       eventTypes.error,
	  topFocus:       eventTypes.focus,
	  topInput:       eventTypes.input,
	  topKeyDown:     eventTypes.keyDown,
	  topKeyPress:    eventTypes.keyPress,
	  topKeyUp:       eventTypes.keyUp,
	  topLoad:        eventTypes.load,
	  topMouseDown:   eventTypes.mouseDown,
	  topMouseMove:   eventTypes.mouseMove,
	  topMouseOut:    eventTypes.mouseOut,
	  topMouseOver:   eventTypes.mouseOver,
	  topMouseUp:     eventTypes.mouseUp,
	  topPaste:       eventTypes.paste,
	  topReset:       eventTypes.reset,
	  topScroll:      eventTypes.scroll,
	  topSubmit:      eventTypes.submit,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd:    eventTypes.touchEnd,
	  topTouchMove:   eventTypes.touchMove,
	  topTouchStart:  eventTypes.touchStart,
	  topWheel:       eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * Same as the default implementation, except cancels the event when return
	   * value is false. This behavior will be disabled in a future release.
	   *
	   * @param {object} Event to be dispatched.
	   * @param {function} Application-level callback.
	   * @param {string} domID DOM ID to pass to the callback.
	   */
	  executeDispatch: function(event, listener, domID) {
	    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof returnValue !== 'boolean',
	      'Returning `false` from an event handler is deprecated and will be ' +
	      'ignored in a future release. Instead, manually call ' +
	      'e.stopPropagation() or e.preventDefault(), as appropriate.'
	    ) : null);

	    if (returnValue === false) {
	      event.stopPropagation();
	      event.preventDefault();
	    }
	  },

	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topError:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSubmit:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      EventConstructor,
	      'SimpleEventPlugin: Unhandled event type, `%s`.',
	      topLevelType
	    ) : invariant(EventConstructor));
	    var event = EventConstructor.getPooled(
	      dispatchConfig,
	      topLevelTargetID,
	      nativeEvent
	    );
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  }

	};

	module.exports = SimpleEventPlugin;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(105);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function(event) {
	    return (
	      'clipboardData' in event ?
	        event.clipboardData :
	        window.clipboardData
	    );
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(114);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(114);

	var getEventCharCode = __webpack_require__(151);
	var getEventKey = __webpack_require__(152);
	var getEventModifierState = __webpack_require__(115);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;


/***/ },
/* 151 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(151);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(113);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(114);

	var getEventModifierState = __webpack_require__(115);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;


/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(113);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function(event) {
	    return (
	      'deltaX' in event ? event.deltaX :
	      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
	    );
	  },
	  deltaY: function(event) {
	    return (
	      'deltaY' in event ? event.deltaY :
	      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	      'wheelDeltaY' in event ? -event.wheelDeltaY :
	      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	      'wheelDelta' in event ? -event.wheelDelta : 0
	    );
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	/*jslint bitwise: true*/

	'use strict';

	var DOMProperty = __webpack_require__(52);

	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox'
	  }
	};

	module.exports = SVGDOMPropertyConfig;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createFullPageComponent
	 * @typechecks
	 */

	'use strict';

	// Defeat circular references by requiring this directly.
	var ReactClass = __webpack_require__(45);
	var ReactElement = __webpack_require__(19);

	var invariant = __webpack_require__(15);

	/**
	 * Create a component that will throw an exception when unmounted.
	 *
	 * Components like <html> <head> and <body> can't be removed or added
	 * easily in a cross-browser way, however it's valuable to be able to
	 * take advantage of React's reconciliation for styling and <title>
	 * management. So we just document it and throw in dangerous cases.
	 *
	 * @param {string} tag The tag to wrap
	 * @return {function} convenience constructor of new component
	 */
	function createFullPageComponent(tag) {
	  var elementFactory = ReactElement.createFactory(tag);

	  var FullPageComponent = ReactClass.createClass({
	    tagName: tag.toUpperCase(),
	    displayName: 'ReactFullPageComponent' + tag,

	    componentWillUnmount: function() {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        false,
	        '%s tried to unmount. Because of cross-browser quirks it is ' +
	        'impossible to unmount some top-level components (eg <html>, <head>, ' +
	        'and <body>) reliably and efficiently. To fix this, have a single ' +
	        'top-level component that never unmounts render these elements.',
	        this.constructor.displayName
	      ) : invariant(false));
	    },

	    render: function() {
	      return elementFactory(this.props);
	    }
	  });

	  return FullPageComponent;
	}

	module.exports = createFullPageComponent;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */

	'use strict';

	var DOMProperty = __webpack_require__(52);
	var ReactDefaultPerfAnalysis = __webpack_require__(159);
	var ReactMount = __webpack_require__(75);
	var ReactPerf = __webpack_require__(36);

	var performanceNow = __webpack_require__(160);

	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}

	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}

	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,

	  start: function() {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }

	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },

	  stop: function() {
	    ReactPerf.enableMeasure = false;
	  },

	  getLastMeasurements: function() {
	    return ReactDefaultPerf._allMeasurements;
	  },

	  printExclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },

	  printInclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  getMeasurementsSummaryMap: function(measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
	      measurements,
	      true
	    );
	    return summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },

	  printWasted: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  printDOM: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function(item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result['type'] = item.type;
	      result['args'] = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },

	  _recordWrite: function(id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes =
	      ReactDefaultPerf
	        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
	        .writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },

	  measure: function(moduleName, fnName, func) {
	    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      var totalTime;
	      var rv;
	      var start;

	      if (fnName === '_renderNewRootComponent' ||
	          fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' ||
	          moduleName === 'ReactDOMIDOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function(update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(
	              update.parentID,
	              update.type,
	              totalTime,
	              writeArgs
	            );
	          });
	        } else {
	          // basic format
	          ReactDefaultPerf._recordWrite(
	            args[0],
	            fnName,
	            totalTime,
	            Array.prototype.slice.call(args, 1)
	          );
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (
	        (// TODO: receiveComponent()?
	        (fnName === 'mountComponent' ||
	        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {

	        if (typeof this._currentElement.type === 'string') {
	          return func.apply(this, args);
	        }

	        var rootNodeID = fnName === 'mountComponent' ?
	          args[0] :
	          this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';

	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ];

	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          mountStack.push(0);
	        }

	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;

	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }

	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ?
	            this._currentElement._owner.getName() :
	            '<root>'
	        };

	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};

	module.exports = ReactDefaultPerf;


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */

	var assign = __webpack_require__(21);

	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  TEXT_CONTENT: 'set textContent',
	  'updatePropertyByID': 'update attribute',
	  'deletePropertyByID': 'delete attribute',
	  'updateStylesByID': 'update styles',
	  'updateInnerHTMLByID': 'set innerHTML',
	  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
	};

	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}

	function getDOMSummary(measurements) {
	  var items = [];
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var id;

	    for (id in measurement.writes) {
	      measurement.writes[id].forEach(function(write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    }
	  }
	  return items;
	}

	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );

	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;

	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.exclusive - a.exclusive;
	  });

	  return arr;
	}

	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;

	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );
	    var cleanComponents;

	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }

	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }

	      var displayName = measurement.displayNames[id];

	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;

	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };

	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }

	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }

	  arr.sort(function(a, b) {
	    return b.time - a.time;
	  });

	  return arr;
	}

	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}

	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};

	module.exports = ReactDefaultPerfAnalysis;


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */

	var performance = __webpack_require__(161);

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (!performance || !performance.now) {
	  performance = Date;
	}

	var performanceNow = performance.now.bind(performance);

	module.exports = performanceNow;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */

	"use strict";

	var ExecutionEnvironment = __webpack_require__(59);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance =
	    window.performance ||
	    window.msPerformance ||
	    window.webkitPerformance;
	}

	module.exports = performance || {};


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';

	var ReactElement = __webpack_require__(19);
	var ReactInstanceHandles = __webpack_require__(27);
	var ReactMarkupChecksum = __webpack_require__(85);
	var ReactServerRenderingTransaction =
	  __webpack_require__(163);

	var emptyObject = __webpack_require__(22);
	var instantiateReactComponent = __webpack_require__(91);
	var invariant = __webpack_require__(15);

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToString(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup =
	        componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToStaticMarkup(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));

	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);

	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}

	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */

	'use strict';

	var PooledClass = __webpack_require__(17);
	var CallbackQueue = __webpack_require__(35);
	var ReactPutListenerQueue = __webpack_require__(143);
	var Transaction = __webpack_require__(44);

	var assign = __webpack_require__(21);
	var emptyFunction = __webpack_require__(24);

	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },

	  close: emptyFunction
	};

	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },

	  close: emptyFunction
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  ON_DOM_READY_QUEUEING
	];

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap proceedures.
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },

	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;

	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};


	assign(
	  ReactServerRenderingTransaction.prototype,
	  Transaction.Mixin,
	  Mixin
	);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;


/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var ReactElement = __webpack_require__(19);

	var invariant = __webpack_require__(15);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(children),
	    'onlyChild must be passed a children with exactly one child.'
	  ) : invariant(ReactElement.isValidElement(children)));
	  return children;
	}

	module.exports = onlyChild;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)))

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(166);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var _Header = __webpack_require__(168);

	var _Header2 = _interopRequireDefault(_Header);

	var _Projects = __webpack_require__(171);

	var _Projects2 = _interopRequireDefault(_Projects);

	var _profileJson = __webpack_require__(267);

	var _profileJson2 = _interopRequireDefault(_profileJson);

	var _reposJson = __webpack_require__(268);

	var _reposJson2 = _interopRequireDefault(_reposJson);

	var App = (function (_React$Component) {
	  _inherits(App, _React$Component);

	  function App(props) {
	    _classCallCheck(this, App);

	    _get(Object.getPrototypeOf(App.prototype), 'constructor', this).call(this, props);
	  }

	  _createClass(App, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        null,
	        _react2['default'].createElement('div', { className: 'header-wrapper' }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'clearfix' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'col-6 mx-auto main-content' },
	            _react2['default'].createElement(_Header2['default'], { profile: _profileJson2['default'] }),
	            _react2['default'].createElement(_Projects2['default'], { repos: _reposJson2['default'] })
	          )
	        )
	      );
	    }
	  }]);

	  return App;
	})(_react2['default'].Component);

	exports['default'] = App;
	module.exports = exports['default'];

/***/ },
/* 166 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 167 */,
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(169);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var Header = (function (_React$Component) {
	  _inherits(Header, _React$Component);

	  function Header(props) {
	    _classCallCheck(this, Header);

	    _get(Object.getPrototypeOf(Header.prototype), 'constructor', this).call(this, props);
	  }

	  _createClass(Header, [{
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'px2 mx-auto header' },
	        _react2['default'].createElement(
	          'h4',
	          { className: 'header-title left' },
	          _react2['default'].createElement('span', { className: 'octicon octicon-octoface' }),
	          ' Popular Repositories'
	        ),
	        _react2['default'].createElement(
	          'p',
	          { className: 'header-title right h5' },
	          _react2['default'].createElement('img', { className: 'rounded', src: this.props.profile.avatar_url }),
	          ' ',
	          this.props.profile.name
	        )
	      );
	    }
	  }]);

	  return Header;
	})(_react2['default'].Component);

	exports['default'] = Header;
	module.exports = exports['default'];

/***/ },
/* 169 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 170 */,
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(172);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var _Repository = __webpack_require__(174);

	var _Repository2 = _interopRequireDefault(_Repository);

	var Projects = (function (_React$Component) {
	  _inherits(Projects, _React$Component);

	  function Projects(props) {
	    _classCallCheck(this, Projects);

	    _get(Object.getPrototypeOf(Projects.prototype), 'constructor', this).call(this, props);
	    this.onSelect = this.onSelect.bind(this);
	    this.state = {
	      selectedRepository: null,
	      repos: this.generateRepositoriesList(props.repos)
	    };
	  }

	  _createClass(Projects, [{
	    key: 'generateRepositoriesList',
	    value: function generateRepositoriesList(repos) {
	      var sortedRepos = repos.concat([]);

	      sortedRepos.sort(function (repoA, repoB) {
	        return repoB.stargazers_count + repoB.watchers_count - (repoA.stargazers_count + repoA.watchers_count);
	      });

	      return sortedRepos.slice(0, 20);
	    }
	  }, {
	    key: 'onSelect',
	    value: function onSelect(repo) {
	      this.setState({
	        selectedRepository: repo
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _this = this;

	      return _react2['default'].createElement(
	        'div',
	        { className: 'm3 projects' },
	        this.state.repos.map(function (repo, key) {
	          var active = repo === _this.state.selectedRepository;

	          return _react2['default'].createElement(_Repository2['default'], {
	            key: key,
	            repo: repo,
	            onSelect: _this.onSelect,
	            active: active
	          });
	        })
	      );
	    }
	  }]);

	  return Projects;
	})(_react2['default'].Component);

	exports['default'] = Projects;
	module.exports = exports['default'];

/***/ },
/* 172 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 173 */,
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(175);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(177);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _RepositoryHeader = __webpack_require__(178);

	var _RepositoryHeader2 = _interopRequireDefault(_RepositoryHeader);

	var RepositoryDetails = (function (_React$Component) {
	  _inherits(RepositoryDetails, _React$Component);

	  function RepositoryDetails(props) {
	    _classCallCheck(this, RepositoryDetails);

	    _get(Object.getPrototypeOf(RepositoryDetails.prototype), 'constructor', this).call(this, props);
	  }

	  _createClass(RepositoryDetails, [{
	    key: 'render',
	    value: function render() {
	      var classes = (0, _classnames2['default'])('repository', {
	        active: this.props.active
	      });

	      return _react2['default'].createElement(
	        'div',
	        { className: classes },
	        _react2['default'].createElement(_RepositoryHeader2['default'], {
	          repo: this.props.repo,
	          active: this.props.active,
	          onSelect: this.props.onSelect
	        }),
	        _react2['default'].createElement(
	          'div',
	          { className: 'repository-details' },
	          _react2['default'].createElement(
	            'p',
	            { className: 'repository-description h5' },
	            this.props.repo.description
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'repository-language py2 mb1' },
	            _react2['default'].createElement(
	              'p',
	              { className: 'name h5' },
	              this.props.repo.language || 'No language found'
	            ),
	            _react2['default'].createElement(
	              'p',
	              { className: 'percentage h3' },
	              '100%'
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return RepositoryDetails;
	})(_react2['default'].Component);

	exports['default'] = RepositoryDetails;
	module.exports = exports['default'];

/***/ },
/* 175 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 176 */,
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2015 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/

	(function () {
		'use strict';

		function classNames () {

			var classes = '';

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if ('string' === argType || 'number' === argType) {
					classes += ' ' + arg;

				} else if (Array.isArray(arg)) {
					classes += ' ' + classNames.apply(null, arg);

				} else if ('object' === argType) {
					for (var key in arg) {
						if (arg.hasOwnProperty(key) && arg[key]) {
							classes += ' ' + key;
						}
					}
				}
			}

			return classes.substr(1);
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true){
			// AMD. Register as an anonymous module.
			!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}

	}());


/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	__webpack_require__(175);

	var _react = __webpack_require__(9);

	var _react2 = _interopRequireDefault(_react);

	var _moment = __webpack_require__(179);

	var _moment2 = _interopRequireDefault(_moment);

	var RepositoryHeader = (function (_React$Component) {
	  _inherits(RepositoryHeader, _React$Component);

	  function RepositoryHeader(props) {
	    _classCallCheck(this, RepositoryHeader);

	    _get(Object.getPrototypeOf(RepositoryHeader.prototype), 'constructor', this).call(this, props);
	    this.onSelect = this.onSelect.bind(this);
	  }

	  _createClass(RepositoryHeader, [{
	    key: 'onSelect',
	    value: function onSelect(event) {
	      event.preventDefault();
	      if (!this.props.active) {
	        this.props.onSelect(this.props.repo);
	      } else {
	        this.props.onSelect(null);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2['default'].createElement(
	        'div',
	        { className: 'repository-header' },
	        _react2['default'].createElement(
	          'a',
	          { className: 'left name h5', href: '#', onClick: this.onSelect },
	          this.props.repo.name
	        ),
	        _react2['default'].createElement(
	          'span',
	          { className: 'left last-modification h6' },
	          _react2['default'].createElement(
	            'b',
	            null,
	            ' ·'
	          ),
	          ' Last updated ',
	          (0, _moment2['default'])(this.props.repo.updated_at).fromNow()
	        ),
	        _react2['default'].createElement(
	          'span',
	          { className: 'right' },
	          _react2['default'].createElement(
	            'div',
	            { className: 'stats h6' },
	            _react2['default'].createElement('span', { className: 'octicon octicon-star' }),
	            ' ',
	            this.props.repo.stargazers_count
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'stats h6' },
	            _react2['default'].createElement('span', { className: 'octicon octicon-eye' }),
	            ' ',
	            this.props.repo.watchers_count
	          ),
	          _react2['default'].createElement(
	            'div',
	            { className: 'stats h6' },
	            _react2['default'].createElement('span', { className: 'octicon octicon-git-branch' }),
	            ' ',
	            this.props.repo.forks_count
	          )
	        )
	      );
	    }
	  }]);

	  return RepositoryHeader;
	})(_react2['default'].Component);

	exports['default'] = RepositoryHeader;
	module.exports = exports['default'];

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.10.6
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, function () { 'use strict';

	    var hookCallback;

	    function utils_hooks__hooks () {
	        return hookCallback.apply(null, arguments);
	    }

	    // This is done to register the method called with moment()
	    // without creating circular dependencies.
	    function setHookCallback (callback) {
	        hookCallback = callback;
	    }

	    function isArray(input) {
	        return Object.prototype.toString.call(input) === '[object Array]';
	    }

	    function isDate(input) {
	        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	    }

	    function map(arr, fn) {
	        var res = [], i;
	        for (i = 0; i < arr.length; ++i) {
	            res.push(fn(arr[i], i));
	        }
	        return res;
	    }

	    function hasOwnProp(a, b) {
	        return Object.prototype.hasOwnProperty.call(a, b);
	    }

	    function extend(a, b) {
	        for (var i in b) {
	            if (hasOwnProp(b, i)) {
	                a[i] = b[i];
	            }
	        }

	        if (hasOwnProp(b, 'toString')) {
	            a.toString = b.toString;
	        }

	        if (hasOwnProp(b, 'valueOf')) {
	            a.valueOf = b.valueOf;
	        }

	        return a;
	    }

	    function create_utc__createUTC (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, true).utc();
	    }

	    function defaultParsingFlags() {
	        // We need to deep clone this object.
	        return {
	            empty           : false,
	            unusedTokens    : [],
	            unusedInput     : [],
	            overflow        : -2,
	            charsLeftOver   : 0,
	            nullInput       : false,
	            invalidMonth    : null,
	            invalidFormat   : false,
	            userInvalidated : false,
	            iso             : false
	        };
	    }

	    function getParsingFlags(m) {
	        if (m._pf == null) {
	            m._pf = defaultParsingFlags();
	        }
	        return m._pf;
	    }

	    function valid__isValid(m) {
	        if (m._isValid == null) {
	            var flags = getParsingFlags(m);
	            m._isValid = !isNaN(m._d.getTime()) &&
	                flags.overflow < 0 &&
	                !flags.empty &&
	                !flags.invalidMonth &&
	                !flags.invalidWeekday &&
	                !flags.nullInput &&
	                !flags.invalidFormat &&
	                !flags.userInvalidated;

	            if (m._strict) {
	                m._isValid = m._isValid &&
	                    flags.charsLeftOver === 0 &&
	                    flags.unusedTokens.length === 0 &&
	                    flags.bigHour === undefined;
	            }
	        }
	        return m._isValid;
	    }

	    function valid__createInvalid (flags) {
	        var m = create_utc__createUTC(NaN);
	        if (flags != null) {
	            extend(getParsingFlags(m), flags);
	        }
	        else {
	            getParsingFlags(m).userInvalidated = true;
	        }

	        return m;
	    }

	    var momentProperties = utils_hooks__hooks.momentProperties = [];

	    function copyConfig(to, from) {
	        var i, prop, val;

	        if (typeof from._isAMomentObject !== 'undefined') {
	            to._isAMomentObject = from._isAMomentObject;
	        }
	        if (typeof from._i !== 'undefined') {
	            to._i = from._i;
	        }
	        if (typeof from._f !== 'undefined') {
	            to._f = from._f;
	        }
	        if (typeof from._l !== 'undefined') {
	            to._l = from._l;
	        }
	        if (typeof from._strict !== 'undefined') {
	            to._strict = from._strict;
	        }
	        if (typeof from._tzm !== 'undefined') {
	            to._tzm = from._tzm;
	        }
	        if (typeof from._isUTC !== 'undefined') {
	            to._isUTC = from._isUTC;
	        }
	        if (typeof from._offset !== 'undefined') {
	            to._offset = from._offset;
	        }
	        if (typeof from._pf !== 'undefined') {
	            to._pf = getParsingFlags(from);
	        }
	        if (typeof from._locale !== 'undefined') {
	            to._locale = from._locale;
	        }

	        if (momentProperties.length > 0) {
	            for (i in momentProperties) {
	                prop = momentProperties[i];
	                val = from[prop];
	                if (typeof val !== 'undefined') {
	                    to[prop] = val;
	                }
	            }
	        }

	        return to;
	    }

	    var updateInProgress = false;

	    // Moment prototype object
	    function Moment(config) {
	        copyConfig(this, config);
	        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	        // Prevent infinite loop in case updateOffset creates new moment
	        // objects.
	        if (updateInProgress === false) {
	            updateInProgress = true;
	            utils_hooks__hooks.updateOffset(this);
	            updateInProgress = false;
	        }
	    }

	    function isMoment (obj) {
	        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	    }

	    function absFloor (number) {
	        if (number < 0) {
	            return Math.ceil(number);
	        } else {
	            return Math.floor(number);
	        }
	    }

	    function toInt(argumentForCoercion) {
	        var coercedNumber = +argumentForCoercion,
	            value = 0;

	        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	            value = absFloor(coercedNumber);
	        }

	        return value;
	    }

	    function compareArrays(array1, array2, dontConvert) {
	        var len = Math.min(array1.length, array2.length),
	            lengthDiff = Math.abs(array1.length - array2.length),
	            diffs = 0,
	            i;
	        for (i = 0; i < len; i++) {
	            if ((dontConvert && array1[i] !== array2[i]) ||
	                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	                diffs++;
	            }
	        }
	        return diffs + lengthDiff;
	    }

	    function Locale() {
	    }

	    var locales = {};
	    var globalLocale;

	    function normalizeLocale(key) {
	        return key ? key.toLowerCase().replace('_', '-') : key;
	    }

	    // pick the locale from the array
	    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	    function chooseLocale(names) {
	        var i = 0, j, next, locale, split;

	        while (i < names.length) {
	            split = normalizeLocale(names[i]).split('-');
	            j = split.length;
	            next = normalizeLocale(names[i + 1]);
	            next = next ? next.split('-') : null;
	            while (j > 0) {
	                locale = loadLocale(split.slice(0, j).join('-'));
	                if (locale) {
	                    return locale;
	                }
	                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                    //the next array item is better than a shallower substring of this one
	                    break;
	                }
	                j--;
	            }
	            i++;
	        }
	        return null;
	    }

	    function loadLocale(name) {
	        var oldLocale = null;
	        // TODO: Find a better way to register and load all the locales in Node
	        if (!locales[name] && typeof module !== 'undefined' &&
	                module && module.exports) {
	            try {
	                oldLocale = globalLocale._abbr;
	                __webpack_require__(181)("./" + name);
	                // because defineLocale currently also sets the global locale, we
	                // want to undo that for lazy loaded locales
	                locale_locales__getSetGlobalLocale(oldLocale);
	            } catch (e) { }
	        }
	        return locales[name];
	    }

	    // This function will load locale and then set the global locale.  If
	    // no arguments are passed in, it will simply return the current global
	    // locale key.
	    function locale_locales__getSetGlobalLocale (key, values) {
	        var data;
	        if (key) {
	            if (typeof values === 'undefined') {
	                data = locale_locales__getLocale(key);
	            }
	            else {
	                data = defineLocale(key, values);
	            }

	            if (data) {
	                // moment.duration._locale = moment._locale = data;
	                globalLocale = data;
	            }
	        }

	        return globalLocale._abbr;
	    }

	    function defineLocale (name, values) {
	        if (values !== null) {
	            values.abbr = name;
	            locales[name] = locales[name] || new Locale();
	            locales[name].set(values);

	            // backwards compat for now: also set the locale
	            locale_locales__getSetGlobalLocale(name);

	            return locales[name];
	        } else {
	            // useful for testing
	            delete locales[name];
	            return null;
	        }
	    }

	    // returns locale data
	    function locale_locales__getLocale (key) {
	        var locale;

	        if (key && key._locale && key._locale._abbr) {
	            key = key._locale._abbr;
	        }

	        if (!key) {
	            return globalLocale;
	        }

	        if (!isArray(key)) {
	            //short-circuit everything else
	            locale = loadLocale(key);
	            if (locale) {
	                return locale;
	            }
	            key = [key];
	        }

	        return chooseLocale(key);
	    }

	    var aliases = {};

	    function addUnitAlias (unit, shorthand) {
	        var lowerCase = unit.toLowerCase();
	        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	    }

	    function normalizeUnits(units) {
	        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	    }

	    function normalizeObjectUnits(inputObject) {
	        var normalizedInput = {},
	            normalizedProp,
	            prop;

	        for (prop in inputObject) {
	            if (hasOwnProp(inputObject, prop)) {
	                normalizedProp = normalizeUnits(prop);
	                if (normalizedProp) {
	                    normalizedInput[normalizedProp] = inputObject[prop];
	                }
	            }
	        }

	        return normalizedInput;
	    }

	    function makeGetSet (unit, keepTime) {
	        return function (value) {
	            if (value != null) {
	                get_set__set(this, unit, value);
	                utils_hooks__hooks.updateOffset(this, keepTime);
	                return this;
	            } else {
	                return get_set__get(this, unit);
	            }
	        };
	    }

	    function get_set__get (mom, unit) {
	        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();
	    }

	    function get_set__set (mom, unit, value) {
	        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	    }

	    // MOMENTS

	    function getSet (units, value) {
	        var unit;
	        if (typeof units === 'object') {
	            for (unit in units) {
	                this.set(unit, units[unit]);
	            }
	        } else {
	            units = normalizeUnits(units);
	            if (typeof this[units] === 'function') {
	                return this[units](value);
	            }
	        }
	        return this;
	    }

	    function zeroFill(number, targetLength, forceSign) {
	        var absNumber = '' + Math.abs(number),
	            zerosToFill = targetLength - absNumber.length,
	            sign = number >= 0;
	        return (sign ? (forceSign ? '+' : '') : '-') +
	            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	    }

	    var formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	    var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	    var formatFunctions = {};

	    var formatTokenFunctions = {};

	    // token:    'M'
	    // padded:   ['MM', 2]
	    // ordinal:  'Mo'
	    // callback: function () { this.month() + 1 }
	    function addFormatToken (token, padded, ordinal, callback) {
	        var func = callback;
	        if (typeof callback === 'string') {
	            func = function () {
	                return this[callback]();
	            };
	        }
	        if (token) {
	            formatTokenFunctions[token] = func;
	        }
	        if (padded) {
	            formatTokenFunctions[padded[0]] = function () {
	                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	            };
	        }
	        if (ordinal) {
	            formatTokenFunctions[ordinal] = function () {
	                return this.localeData().ordinal(func.apply(this, arguments), token);
	            };
	        }
	    }

	    function removeFormattingTokens(input) {
	        if (input.match(/\[[\s\S]/)) {
	            return input.replace(/^\[|\]$/g, '');
	        }
	        return input.replace(/\\/g, '');
	    }

	    function makeFormatFunction(format) {
	        var array = format.match(formattingTokens), i, length;

	        for (i = 0, length = array.length; i < length; i++) {
	            if (formatTokenFunctions[array[i]]) {
	                array[i] = formatTokenFunctions[array[i]];
	            } else {
	                array[i] = removeFormattingTokens(array[i]);
	            }
	        }

	        return function (mom) {
	            var output = '';
	            for (i = 0; i < length; i++) {
	                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
	            }
	            return output;
	        };
	    }

	    // format date using native date object
	    function formatMoment(m, format) {
	        if (!m.isValid()) {
	            return m.localeData().invalidDate();
	        }

	        format = expandFormat(format, m.localeData());
	        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	        return formatFunctions[format](m);
	    }

	    function expandFormat(format, locale) {
	        var i = 5;

	        function replaceLongDateFormatTokens(input) {
	            return locale.longDateFormat(input) || input;
	        }

	        localFormattingTokens.lastIndex = 0;
	        while (i >= 0 && localFormattingTokens.test(format)) {
	            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	            localFormattingTokens.lastIndex = 0;
	            i -= 1;
	        }

	        return format;
	    }

	    var match1         = /\d/;            //       0 - 9
	    var match2         = /\d\d/;          //      00 - 99
	    var match3         = /\d{3}/;         //     000 - 999
	    var match4         = /\d{4}/;         //    0000 - 9999
	    var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	    var match1to2      = /\d\d?/;         //       0 - 99
	    var match1to3      = /\d{1,3}/;       //       0 - 999
	    var match1to4      = /\d{1,4}/;       //       0 - 9999
	    var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	    var matchUnsigned  = /\d+/;           //       0 - inf
	    var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	    var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

	    var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	    // any word (or two) characters or numbers including two/three word month in arabic.
	    var matchWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;

	    var regexes = {};

	    function isFunction (sth) {
	        // https://github.com/moment/moment/issues/2325
	        return typeof sth === 'function' &&
	            Object.prototype.toString.call(sth) === '[object Function]';
	    }


	    function addRegexToken (token, regex, strictRegex) {
	        regexes[token] = isFunction(regex) ? regex : function (isStrict) {
	            return (isStrict && strictRegex) ? strictRegex : regex;
	        };
	    }

	    function getParseRegexForToken (token, config) {
	        if (!hasOwnProp(regexes, token)) {
	            return new RegExp(unescapeFormat(token));
	        }

	        return regexes[token](config._strict, config._locale);
	    }

	    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	    function unescapeFormat(s) {
	        return s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	            return p1 || p2 || p3 || p4;
	        }).replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	    }

	    var tokens = {};

	    function addParseToken (token, callback) {
	        var i, func = callback;
	        if (typeof token === 'string') {
	            token = [token];
	        }
	        if (typeof callback === 'number') {
	            func = function (input, array) {
	                array[callback] = toInt(input);
	            };
	        }
	        for (i = 0; i < token.length; i++) {
	            tokens[token[i]] = func;
	        }
	    }

	    function addWeekParseToken (token, callback) {
	        addParseToken(token, function (input, array, config, token) {
	            config._w = config._w || {};
	            callback(input, config._w, config, token);
	        });
	    }

	    function addTimeToArrayFromToken(token, input, config) {
	        if (input != null && hasOwnProp(tokens, token)) {
	            tokens[token](input, config._a, config, token);
	        }
	    }

	    var YEAR = 0;
	    var MONTH = 1;
	    var DATE = 2;
	    var HOUR = 3;
	    var MINUTE = 4;
	    var SECOND = 5;
	    var MILLISECOND = 6;

	    function daysInMonth(year, month) {
	        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();
	    }

	    // FORMATTING

	    addFormatToken('M', ['MM', 2], 'Mo', function () {
	        return this.month() + 1;
	    });

	    addFormatToken('MMM', 0, 0, function (format) {
	        return this.localeData().monthsShort(this, format);
	    });

	    addFormatToken('MMMM', 0, 0, function (format) {
	        return this.localeData().months(this, format);
	    });

	    // ALIASES

	    addUnitAlias('month', 'M');

	    // PARSING

	    addRegexToken('M',    match1to2);
	    addRegexToken('MM',   match1to2, match2);
	    addRegexToken('MMM',  matchWord);
	    addRegexToken('MMMM', matchWord);

	    addParseToken(['M', 'MM'], function (input, array) {
	        array[MONTH] = toInt(input) - 1;
	    });

	    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	        var month = config._locale.monthsParse(input, token, config._strict);
	        // if we didn't find a month name, mark the date as invalid.
	        if (month != null) {
	            array[MONTH] = month;
	        } else {
	            getParsingFlags(config).invalidMonth = input;
	        }
	    });

	    // LOCALES

	    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	    function localeMonths (m) {
	        return this._months[m.month()];
	    }

	    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	    function localeMonthsShort (m) {
	        return this._monthsShort[m.month()];
	    }

	    function localeMonthsParse (monthName, format, strict) {
	        var i, mom, regex;

	        if (!this._monthsParse) {
	            this._monthsParse = [];
	            this._longMonthsParse = [];
	            this._shortMonthsParse = [];
	        }

	        for (i = 0; i < 12; i++) {
	            // make the regex if we don't have it already
	            mom = create_utc__createUTC([2000, i]);
	            if (strict && !this._longMonthsParse[i]) {
	                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	            }
	            if (!strict && !this._monthsParse[i]) {
	                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	                return i;
	            } else if (!strict && this._monthsParse[i].test(monthName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function setMonth (mom, value) {
	        var dayOfMonth;

	        // TODO: Move this out of here!
	        if (typeof value === 'string') {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (typeof value !== 'number') {
	                return mom;
	            }
	        }

	        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	        return mom;
	    }

	    function getSetMonth (value) {
	        if (value != null) {
	            setMonth(this, value);
	            utils_hooks__hooks.updateOffset(this, true);
	            return this;
	        } else {
	            return get_set__get(this, 'Month');
	        }
	    }

	    function getDaysInMonth () {
	        return daysInMonth(this.year(), this.month());
	    }

	    function checkOverflow (m) {
	        var overflow;
	        var a = m._a;

	        if (a && getParsingFlags(m).overflow === -2) {
	            overflow =
	                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	                -1;

	            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	                overflow = DATE;
	            }

	            getParsingFlags(m).overflow = overflow;
	        }

	        return m;
	    }

	    function warn(msg) {
	        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {
	            console.warn('Deprecation warning: ' + msg);
	        }
	    }

	    function deprecate(msg, fn) {
	        var firstTime = true;

	        return extend(function () {
	            if (firstTime) {
	                warn(msg + '\n' + (new Error()).stack);
	                firstTime = false;
	            }
	            return fn.apply(this, arguments);
	        }, fn);
	    }

	    var deprecations = {};

	    function deprecateSimple(name, msg) {
	        if (!deprecations[name]) {
	            warn(msg);
	            deprecations[name] = true;
	        }
	    }

	    utils_hooks__hooks.suppressDeprecationWarnings = false;

	    var from_string__isoRegex = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	    var isoDates = [
	        ['YYYYYY-MM-DD', /[+-]\d{6}-\d{2}-\d{2}/],
	        ['YYYY-MM-DD', /\d{4}-\d{2}-\d{2}/],
	        ['GGGG-[W]WW-E', /\d{4}-W\d{2}-\d/],
	        ['GGGG-[W]WW', /\d{4}-W\d{2}/],
	        ['YYYY-DDD', /\d{4}-\d{3}/]
	    ];

	    // iso time formats and regexes
	    var isoTimes = [
	        ['HH:mm:ss.SSSS', /(T| )\d\d:\d\d:\d\d\.\d+/],
	        ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/],
	        ['HH:mm', /(T| )\d\d:\d\d/],
	        ['HH', /(T| )\d\d/]
	    ];

	    var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	    // date from iso format
	    function configFromISO(config) {
	        var i, l,
	            string = config._i,
	            match = from_string__isoRegex.exec(string);

	        if (match) {
	            getParsingFlags(config).iso = true;
	            for (i = 0, l = isoDates.length; i < l; i++) {
	                if (isoDates[i][1].exec(string)) {
	                    config._f = isoDates[i][0];
	                    break;
	                }
	            }
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(string)) {
	                    // match[6] should be 'T' or space
	                    config._f += (match[6] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (string.match(matchOffset)) {
	                config._f += 'Z';
	            }
	            configFromStringAndFormat(config);
	        } else {
	            config._isValid = false;
	        }
	    }

	    // date from iso format or fallback
	    function configFromString(config) {
	        var matched = aspNetJsonRegex.exec(config._i);

	        if (matched !== null) {
	            config._d = new Date(+matched[1]);
	            return;
	        }

	        configFromISO(config);
	        if (config._isValid === false) {
	            delete config._isValid;
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    utils_hooks__hooks.createFromInputFallback = deprecate(
	        'moment construction falls back to js Date. This is ' +
	        'discouraged and will be removed in upcoming major ' +
	        'release. Please refer to ' +
	        'https://github.com/moment/moment/issues/1407 for more info.',
	        function (config) {
	            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	        }
	    );

	    function createDate (y, m, d, h, M, s, ms) {
	        //can't just apply() to create a date:
	        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply
	        var date = new Date(y, m, d, h, M, s, ms);

	        //the date constructor doesn't accept years < 1970
	        if (y < 1970) {
	            date.setFullYear(y);
	        }
	        return date;
	    }

	    function createUTCDate (y) {
	        var date = new Date(Date.UTC.apply(null, arguments));
	        if (y < 1970) {
	            date.setUTCFullYear(y);
	        }
	        return date;
	    }

	    addFormatToken(0, ['YY', 2], 0, function () {
	        return this.year() % 100;
	    });

	    addFormatToken(0, ['YYYY',   4],       0, 'year');
	    addFormatToken(0, ['YYYYY',  5],       0, 'year');
	    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	    // ALIASES

	    addUnitAlias('year', 'y');

	    // PARSING

	    addRegexToken('Y',      matchSigned);
	    addRegexToken('YY',     match1to2, match2);
	    addRegexToken('YYYY',   match1to4, match4);
	    addRegexToken('YYYYY',  match1to6, match6);
	    addRegexToken('YYYYYY', match1to6, match6);

	    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	    addParseToken('YYYY', function (input, array) {
	        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);
	    });
	    addParseToken('YY', function (input, array) {
	        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function daysInYear(year) {
	        return isLeapYear(year) ? 366 : 365;
	    }

	    function isLeapYear(year) {
	        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	    }

	    // HOOKS

	    utils_hooks__hooks.parseTwoDigitYear = function (input) {
	        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	    };

	    // MOMENTS

	    var getSetYear = makeGetSet('FullYear', false);

	    function getIsLeapYear () {
	        return isLeapYear(this.year());
	    }

	    addFormatToken('w', ['ww', 2], 'wo', 'week');
	    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	    // ALIASES

	    addUnitAlias('week', 'w');
	    addUnitAlias('isoWeek', 'W');

	    // PARSING

	    addRegexToken('w',  match1to2);
	    addRegexToken('ww', match1to2, match2);
	    addRegexToken('W',  match1to2);
	    addRegexToken('WW', match1to2, match2);

	    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	        week[token.substr(0, 1)] = toInt(input);
	    });

	    // HELPERS

	    // firstDayOfWeek       0 = sun, 6 = sat
	    //                      the day of the week that starts the week
	    //                      (usually sunday or monday)
	    // firstDayOfWeekOfYear 0 = sun, 6 = sat
	    //                      the first week is the week that contains the first
	    //                      of this day of the week
	    //                      (eg. ISO weeks use thursday (4))
	    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
	        var end = firstDayOfWeekOfYear - firstDayOfWeek,
	            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
	            adjustedMoment;


	        if (daysToDayOfWeek > end) {
	            daysToDayOfWeek -= 7;
	        }

	        if (daysToDayOfWeek < end - 7) {
	            daysToDayOfWeek += 7;
	        }

	        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');
	        return {
	            week: Math.ceil(adjustedMoment.dayOfYear() / 7),
	            year: adjustedMoment.year()
	        };
	    }

	    // LOCALES

	    function localeWeek (mom) {
	        return weekOfYear(mom, this._week.dow, this._week.doy).week;
	    }

	    var defaultLocaleWeek = {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    };

	    function localeFirstDayOfWeek () {
	        return this._week.dow;
	    }

	    function localeFirstDayOfYear () {
	        return this._week.doy;
	    }

	    // MOMENTS

	    function getSetWeek (input) {
	        var week = this.localeData().week(this);
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    function getSetISOWeek (input) {
	        var week = weekOfYear(this, 1, 4).week;
	        return input == null ? week : this.add((input - week) * 7, 'd');
	    }

	    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	    // ALIASES

	    addUnitAlias('dayOfYear', 'DDD');

	    // PARSING

	    addRegexToken('DDD',  match1to3);
	    addRegexToken('DDDD', match3);
	    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	        config._dayOfYear = toInt(input);
	    });

	    // HELPERS

	    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {
	        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;
	        if (d < firstDayOfWeek) {
	            d += 7;
	        }

	        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;

	        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;

	        return {
	            year: dayOfYear > 0 ? year : year - 1,
	            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear
	        };
	    }

	    // MOMENTS

	    function getSetDayOfYear (input) {
	        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	    }

	    // Pick the first defined of two or three arguments.
	    function defaults(a, b, c) {
	        if (a != null) {
	            return a;
	        }
	        if (b != null) {
	            return b;
	        }
	        return c;
	    }

	    function currentDateArray(config) {
	        var now = new Date();
	        if (config._useUTC) {
	            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];
	        }
	        return [now.getFullYear(), now.getMonth(), now.getDate()];
	    }

	    // convert an array to a date.
	    // the array should mirror the parameters below
	    // note: all values past the year are optional and will default to the lowest possible value.
	    // [year, month, day , hour, minute, second, millisecond]
	    function configFromArray (config) {
	        var i, date, input = [], currentDate, yearToUse;

	        if (config._d) {
	            return;
	        }

	        currentDate = currentDateArray(config);

	        //compute day of the year from weeks and weekdays
	        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	            dayOfYearFromWeekInfo(config);
	        }

	        //if the day of the year is set, figure out what it is
	        if (config._dayOfYear) {
	            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	            if (config._dayOfYear > daysInYear(yearToUse)) {
	                getParsingFlags(config)._overflowDayOfYear = true;
	            }

	            date = createUTCDate(yearToUse, 0, config._dayOfYear);
	            config._a[MONTH] = date.getUTCMonth();
	            config._a[DATE] = date.getUTCDate();
	        }

	        // Default to current date.
	        // * if no year, month, day of month are given, default to today
	        // * if day of month is given, default month and year
	        // * if month is given, default only year
	        // * if year is given, don't default anything
	        for (i = 0; i < 3 && config._a[i] == null; ++i) {
	            config._a[i] = input[i] = currentDate[i];
	        }

	        // Zero out whatever was not defaulted, including time
	        for (; i < 7; i++) {
	            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	        }

	        // Check for 24:00:00.000
	        if (config._a[HOUR] === 24 &&
	                config._a[MINUTE] === 0 &&
	                config._a[SECOND] === 0 &&
	                config._a[MILLISECOND] === 0) {
	            config._nextDay = true;
	            config._a[HOUR] = 0;
	        }

	        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	        // Apply timezone offset from input. The actual utcOffset can be changed
	        // with parseZone.
	        if (config._tzm != null) {
	            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	        }

	        if (config._nextDay) {
	            config._a[HOUR] = 24;
	        }
	    }

	    function dayOfYearFromWeekInfo(config) {
	        var w, weekYear, week, weekday, dow, doy, temp;

	        w = config._w;
	        if (w.GG != null || w.W != null || w.E != null) {
	            dow = 1;
	            doy = 4;

	            // TODO: We need to take the current isoWeekYear, but that depends on
	            // how we interpret now (local, utc, fixed offset). So create
	            // a now version of current config (take local/utc/offset flags, and
	            // create now).
	            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);
	            week = defaults(w.W, 1);
	            weekday = defaults(w.E, 1);
	        } else {
	            dow = config._locale._week.dow;
	            doy = config._locale._week.doy;

	            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);
	            week = defaults(w.w, 1);

	            if (w.d != null) {
	                // weekday -- low day numbers are considered next week
	                weekday = w.d;
	                if (weekday < dow) {
	                    ++week;
	                }
	            } else if (w.e != null) {
	                // local weekday -- counting starts from begining of week
	                weekday = w.e + dow;
	            } else {
	                // default to begining of week
	                weekday = dow;
	            }
	        }
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);

	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }

	    utils_hooks__hooks.ISO_8601 = function () {};

	    // date from string and format string
	    function configFromStringAndFormat(config) {
	        // TODO: Move this to another part of the creation flow to prevent circular deps
	        if (config._f === utils_hooks__hooks.ISO_8601) {
	            configFromISO(config);
	            return;
	        }

	        config._a = [];
	        getParsingFlags(config).empty = true;

	        // This array is used to make a Date, either with `new Date` or `Date.UTC`
	        var string = '' + config._i,
	            i, parsedInput, tokens, token, skipped,
	            stringLength = string.length,
	            totalParsedInputLength = 0;

	        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	        for (i = 0; i < tokens.length; i++) {
	            token = tokens[i];
	            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	            if (parsedInput) {
	                skipped = string.substr(0, string.indexOf(parsedInput));
	                if (skipped.length > 0) {
	                    getParsingFlags(config).unusedInput.push(skipped);
	                }
	                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	                totalParsedInputLength += parsedInput.length;
	            }
	            // don't parse if it's not a known token
	            if (formatTokenFunctions[token]) {
	                if (parsedInput) {
	                    getParsingFlags(config).empty = false;
	                }
	                else {
	                    getParsingFlags(config).unusedTokens.push(token);
	                }
	                addTimeToArrayFromToken(token, parsedInput, config);
	            }
	            else if (config._strict && !parsedInput) {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	        }

	        // add remaining unparsed input length to the string
	        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	        if (string.length > 0) {
	            getParsingFlags(config).unusedInput.push(string);
	        }

	        // clear _12h flag if hour is <= 12
	        if (getParsingFlags(config).bigHour === true &&
	                config._a[HOUR] <= 12 &&
	                config._a[HOUR] > 0) {
	            getParsingFlags(config).bigHour = undefined;
	        }
	        // handle meridiem
	        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	        configFromArray(config);
	        checkOverflow(config);
	    }


	    function meridiemFixWrap (locale, hour, meridiem) {
	        var isPm;

	        if (meridiem == null) {
	            // nothing to do
	            return hour;
	        }
	        if (locale.meridiemHour != null) {
	            return locale.meridiemHour(hour, meridiem);
	        } else if (locale.isPM != null) {
	            // Fallback
	            isPm = locale.isPM(meridiem);
	            if (isPm && hour < 12) {
	                hour += 12;
	            }
	            if (!isPm && hour === 12) {
	                hour = 0;
	            }
	            return hour;
	        } else {
	            // this is not supposed to happen
	            return hour;
	        }
	    }

	    function configFromStringAndArray(config) {
	        var tempConfig,
	            bestMoment,

	            scoreToBeat,
	            i,
	            currentScore;

	        if (config._f.length === 0) {
	            getParsingFlags(config).invalidFormat = true;
	            config._d = new Date(NaN);
	            return;
	        }

	        for (i = 0; i < config._f.length; i++) {
	            currentScore = 0;
	            tempConfig = copyConfig({}, config);
	            if (config._useUTC != null) {
	                tempConfig._useUTC = config._useUTC;
	            }
	            tempConfig._f = config._f[i];
	            configFromStringAndFormat(tempConfig);

	            if (!valid__isValid(tempConfig)) {
	                continue;
	            }

	            // if there is any input that was not parsed add a penalty for that format
	            currentScore += getParsingFlags(tempConfig).charsLeftOver;

	            //or tokens
	            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	            getParsingFlags(tempConfig).score = currentScore;

	            if (scoreToBeat == null || currentScore < scoreToBeat) {
	                scoreToBeat = currentScore;
	                bestMoment = tempConfig;
	            }
	        }

	        extend(config, bestMoment || tempConfig);
	    }

	    function configFromObject(config) {
	        if (config._d) {
	            return;
	        }

	        var i = normalizeObjectUnits(config._i);
	        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];

	        configFromArray(config);
	    }

	    function createFromConfig (config) {
	        var res = new Moment(checkOverflow(prepareConfig(config)));
	        if (res._nextDay) {
	            // Adding is smart enough around DST
	            res.add(1, 'd');
	            res._nextDay = undefined;
	        }

	        return res;
	    }

	    function prepareConfig (config) {
	        var input = config._i,
	            format = config._f;

	        config._locale = config._locale || locale_locales__getLocale(config._l);

	        if (input === null || (format === undefined && input === '')) {
	            return valid__createInvalid({nullInput: true});
	        }

	        if (typeof input === 'string') {
	            config._i = input = config._locale.preparse(input);
	        }

	        if (isMoment(input)) {
	            return new Moment(checkOverflow(input));
	        } else if (isArray(format)) {
	            configFromStringAndArray(config);
	        } else if (format) {
	            configFromStringAndFormat(config);
	        } else if (isDate(input)) {
	            config._d = input;
	        } else {
	            configFromInput(config);
	        }

	        return config;
	    }

	    function configFromInput(config) {
	        var input = config._i;
	        if (input === undefined) {
	            config._d = new Date();
	        } else if (isDate(input)) {
	            config._d = new Date(+input);
	        } else if (typeof input === 'string') {
	            configFromString(config);
	        } else if (isArray(input)) {
	            config._a = map(input.slice(0), function (obj) {
	                return parseInt(obj, 10);
	            });
	            configFromArray(config);
	        } else if (typeof(input) === 'object') {
	            configFromObject(config);
	        } else if (typeof(input) === 'number') {
	            // from milliseconds
	            config._d = new Date(input);
	        } else {
	            utils_hooks__hooks.createFromInputFallback(config);
	        }
	    }

	    function createLocalOrUTC (input, format, locale, strict, isUTC) {
	        var c = {};

	        if (typeof(locale) === 'boolean') {
	            strict = locale;
	            locale = undefined;
	        }
	        // object construction must be done this way.
	        // https://github.com/moment/moment/issues/1423
	        c._isAMomentObject = true;
	        c._useUTC = c._isUTC = isUTC;
	        c._l = locale;
	        c._i = input;
	        c._f = format;
	        c._strict = strict;

	        return createFromConfig(c);
	    }

	    function local__createLocal (input, format, locale, strict) {
	        return createLocalOrUTC(input, format, locale, strict, false);
	    }

	    var prototypeMin = deprecate(
	         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',
	         function () {
	             var other = local__createLocal.apply(null, arguments);
	             return other < this ? this : other;
	         }
	     );

	    var prototypeMax = deprecate(
	        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',
	        function () {
	            var other = local__createLocal.apply(null, arguments);
	            return other > this ? this : other;
	        }
	    );

	    // Pick a moment m from moments so that m[fn](other) is true for all
	    // other. This relies on the function fn to be transitive.
	    //
	    // moments should either be an array of moment objects or an array, whose
	    // first element is an array of moment objects.
	    function pickBy(fn, moments) {
	        var res, i;
	        if (moments.length === 1 && isArray(moments[0])) {
	            moments = moments[0];
	        }
	        if (!moments.length) {
	            return local__createLocal();
	        }
	        res = moments[0];
	        for (i = 1; i < moments.length; ++i) {
	            if (!moments[i].isValid() || moments[i][fn](res)) {
	                res = moments[i];
	            }
	        }
	        return res;
	    }

	    // TODO: Use [].sort instead?
	    function min () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isBefore', args);
	    }

	    function max () {
	        var args = [].slice.call(arguments, 0);

	        return pickBy('isAfter', args);
	    }

	    function Duration (duration) {
	        var normalizedInput = normalizeObjectUnits(duration),
	            years = normalizedInput.year || 0,
	            quarters = normalizedInput.quarter || 0,
	            months = normalizedInput.month || 0,
	            weeks = normalizedInput.week || 0,
	            days = normalizedInput.day || 0,
	            hours = normalizedInput.hour || 0,
	            minutes = normalizedInput.minute || 0,
	            seconds = normalizedInput.second || 0,
	            milliseconds = normalizedInput.millisecond || 0;

	        // representation for dateAddRemove
	        this._milliseconds = +milliseconds +
	            seconds * 1e3 + // 1000
	            minutes * 6e4 + // 1000 * 60
	            hours * 36e5; // 1000 * 60 * 60
	        // Because of dateAddRemove treats 24 hours as different from a
	        // day when working around DST, we need to store them separately
	        this._days = +days +
	            weeks * 7;
	        // It is impossible translate months into days without knowing
	        // which months you are are talking about, so we have to store
	        // it separately.
	        this._months = +months +
	            quarters * 3 +
	            years * 12;

	        this._data = {};

	        this._locale = locale_locales__getLocale();

	        this._bubble();
	    }

	    function isDuration (obj) {
	        return obj instanceof Duration;
	    }

	    function offset (token, separator) {
	        addFormatToken(token, 0, 0, function () {
	            var offset = this.utcOffset();
	            var sign = '+';
	            if (offset < 0) {
	                offset = -offset;
	                sign = '-';
	            }
	            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	        });
	    }

	    offset('Z', ':');
	    offset('ZZ', '');

	    // PARSING

	    addRegexToken('Z',  matchOffset);
	    addRegexToken('ZZ', matchOffset);
	    addParseToken(['Z', 'ZZ'], function (input, array, config) {
	        config._useUTC = true;
	        config._tzm = offsetFromString(input);
	    });

	    // HELPERS

	    // timezone chunker
	    // '+10:00' > ['10',  '00']
	    // '-1530'  > ['-15', '30']
	    var chunkOffset = /([\+\-]|\d\d)/gi;

	    function offsetFromString(string) {
	        var matches = ((string || '').match(matchOffset) || []);
	        var chunk   = matches[matches.length - 1] || [];
	        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	        var minutes = +(parts[1] * 60) + toInt(parts[2]);

	        return parts[0] === '+' ? minutes : -minutes;
	    }

	    // Return a moment from input, that is local/utc/zone equivalent to model.
	    function cloneWithOffset(input, model) {
	        var res, diff;
	        if (model._isUTC) {
	            res = model.clone();
	            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);
	            // Use low-level api, because this fn is low-level api.
	            res._d.setTime(+res._d + diff);
	            utils_hooks__hooks.updateOffset(res, false);
	            return res;
	        } else {
	            return local__createLocal(input).local();
	        }
	    }

	    function getDateOffset (m) {
	        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	        // https://github.com/moment/moment/pull/1871
	        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	    }

	    // HOOKS

	    // This function will be called whenever a moment is mutated.
	    // It is intended to keep the offset in sync with the timezone.
	    utils_hooks__hooks.updateOffset = function () {};

	    // MOMENTS

	    // keepLocalTime = true means only change the timezone, without
	    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	    // +0200, so we adjust the time as needed, to be valid.
	    //
	    // Keeping the time actually adds/subtracts (one hour)
	    // from the actual represented time. That is why we call updateOffset
	    // a second time. In case it wants us to change the offset again
	    // _changeInProgress == true case, then we have to adjust, because
	    // there is no such time in the given timezone.
	    function getSetOffset (input, keepLocalTime) {
	        var offset = this._offset || 0,
	            localAdjust;
	        if (input != null) {
	            if (typeof input === 'string') {
	                input = offsetFromString(input);
	            }
	            if (Math.abs(input) < 16) {
	                input = input * 60;
	            }
	            if (!this._isUTC && keepLocalTime) {
	                localAdjust = getDateOffset(this);
	            }
	            this._offset = input;
	            this._isUTC = true;
	            if (localAdjust != null) {
	                this.add(localAdjust, 'm');
	            }
	            if (offset !== input) {
	                if (!keepLocalTime || this._changeInProgress) {
	                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);
	                } else if (!this._changeInProgress) {
	                    this._changeInProgress = true;
	                    utils_hooks__hooks.updateOffset(this, true);
	                    this._changeInProgress = null;
	                }
	            }
	            return this;
	        } else {
	            return this._isUTC ? offset : getDateOffset(this);
	        }
	    }

	    function getSetZone (input, keepLocalTime) {
	        if (input != null) {
	            if (typeof input !== 'string') {
	                input = -input;
	            }

	            this.utcOffset(input, keepLocalTime);

	            return this;
	        } else {
	            return -this.utcOffset();
	        }
	    }

	    function setOffsetToUTC (keepLocalTime) {
	        return this.utcOffset(0, keepLocalTime);
	    }

	    function setOffsetToLocal (keepLocalTime) {
	        if (this._isUTC) {
	            this.utcOffset(0, keepLocalTime);
	            this._isUTC = false;

	            if (keepLocalTime) {
	                this.subtract(getDateOffset(this), 'm');
	            }
	        }
	        return this;
	    }

	    function setOffsetToParsedOffset () {
	        if (this._tzm) {
	            this.utcOffset(this._tzm);
	        } else if (typeof this._i === 'string') {
	            this.utcOffset(offsetFromString(this._i));
	        }
	        return this;
	    }

	    function hasAlignedHourOffset (input) {
	        input = input ? local__createLocal(input).utcOffset() : 0;

	        return (this.utcOffset() - input) % 60 === 0;
	    }

	    function isDaylightSavingTime () {
	        return (
	            this.utcOffset() > this.clone().month(0).utcOffset() ||
	            this.utcOffset() > this.clone().month(5).utcOffset()
	        );
	    }

	    function isDaylightSavingTimeShifted () {
	        if (typeof this._isDSTShifted !== 'undefined') {
	            return this._isDSTShifted;
	        }

	        var c = {};

	        copyConfig(c, this);
	        c = prepareConfig(c);

	        if (c._a) {
	            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);
	            this._isDSTShifted = this.isValid() &&
	                compareArrays(c._a, other.toArray()) > 0;
	        } else {
	            this._isDSTShifted = false;
	        }

	        return this._isDSTShifted;
	    }

	    function isLocal () {
	        return !this._isUTC;
	    }

	    function isUtcOffset () {
	        return this._isUTC;
	    }

	    function isUtc () {
	        return this._isUTC && this._offset === 0;
	    }

	    var aspNetRegex = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/;

	    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;

	    function create__createDuration (input, key) {
	        var duration = input,
	            // matching against regexp is expensive, do it on demand
	            match = null,
	            sign,
	            ret,
	            diffRes;

	        if (isDuration(input)) {
	            duration = {
	                ms : input._milliseconds,
	                d  : input._days,
	                M  : input._months
	            };
	        } else if (typeof input === 'number') {
	            duration = {};
	            if (key) {
	                duration[key] = input;
	            } else {
	                duration.milliseconds = input;
	            }
	        } else if (!!(match = aspNetRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y  : 0,
	                d  : toInt(match[DATE])        * sign,
	                h  : toInt(match[HOUR])        * sign,
	                m  : toInt(match[MINUTE])      * sign,
	                s  : toInt(match[SECOND])      * sign,
	                ms : toInt(match[MILLISECOND]) * sign
	            };
	        } else if (!!(match = create__isoRegex.exec(input))) {
	            sign = (match[1] === '-') ? -1 : 1;
	            duration = {
	                y : parseIso(match[2], sign),
	                M : parseIso(match[3], sign),
	                d : parseIso(match[4], sign),
	                h : parseIso(match[5], sign),
	                m : parseIso(match[6], sign),
	                s : parseIso(match[7], sign),
	                w : parseIso(match[8], sign)
	            };
	        } else if (duration == null) {// checks for null or undefined
	            duration = {};
	        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));

	            duration = {};
	            duration.ms = diffRes.milliseconds;
	            duration.M = diffRes.months;
	        }

	        ret = new Duration(duration);

	        if (isDuration(input) && hasOwnProp(input, '_locale')) {
	            ret._locale = input._locale;
	        }

	        return ret;
	    }

	    create__createDuration.fn = Duration.prototype;

	    function parseIso (inp, sign) {
	        // We'd normally use ~~inp for this, but unfortunately it also
	        // converts floats to ints.
	        // inp may be undefined, so careful calling replace on it.
	        var res = inp && parseFloat(inp.replace(',', '.'));
	        // apply sign while we're at it
	        return (isNaN(res) ? 0 : res) * sign;
	    }

	    function positiveMomentsDifference(base, other) {
	        var res = {milliseconds: 0, months: 0};

	        res.months = other.month() - base.month() +
	            (other.year() - base.year()) * 12;
	        if (base.clone().add(res.months, 'M').isAfter(other)) {
	            --res.months;
	        }

	        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	        return res;
	    }

	    function momentsDifference(base, other) {
	        var res;
	        other = cloneWithOffset(other, base);
	        if (base.isBefore(other)) {
	            res = positiveMomentsDifference(base, other);
	        } else {
	            res = positiveMomentsDifference(other, base);
	            res.milliseconds = -res.milliseconds;
	            res.months = -res.months;
	        }

	        return res;
	    }

	    function createAdder(direction, name) {
	        return function (val, period) {
	            var dur, tmp;
	            //invert the arguments, but complain about it
	            if (period !== null && !isNaN(+period)) {
	                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');
	                tmp = val; val = period; period = tmp;
	            }

	            val = typeof val === 'string' ? +val : val;
	            dur = create__createDuration(val, period);
	            add_subtract__addSubtract(this, dur, direction);
	            return this;
	        };
	    }

	    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {
	        var milliseconds = duration._milliseconds,
	            days = duration._days,
	            months = duration._months;
	        updateOffset = updateOffset == null ? true : updateOffset;

	        if (milliseconds) {
	            mom._d.setTime(+mom._d + milliseconds * isAdding);
	        }
	        if (days) {
	            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);
	        }
	        if (months) {
	            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);
	        }
	        if (updateOffset) {
	            utils_hooks__hooks.updateOffset(mom, days || months);
	        }
	    }

	    var add_subtract__add      = createAdder(1, 'add');
	    var add_subtract__subtract = createAdder(-1, 'subtract');

	    function moment_calendar__calendar (time, formats) {
	        // We want to compare the start of today, vs this.
	        // Getting start-of-today depends on whether we're local/utc/offset or not.
	        var now = time || local__createLocal(),
	            sod = cloneWithOffset(now, this).startOf('day'),
	            diff = this.diff(sod, 'days', true),
	            format = diff < -6 ? 'sameElse' :
	                diff < -1 ? 'lastWeek' :
	                diff < 0 ? 'lastDay' :
	                diff < 1 ? 'sameDay' :
	                diff < 2 ? 'nextDay' :
	                diff < 7 ? 'nextWeek' : 'sameElse';
	        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));
	    }

	    function clone () {
	        return new Moment(this);
	    }

	    function isAfter (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this > +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return inputMs < +this.clone().startOf(units);
	        }
	    }

	    function isBefore (input, units) {
	        var inputMs;
	        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this < +input;
	        } else {
	            inputMs = isMoment(input) ? +input : +local__createLocal(input);
	            return +this.clone().endOf(units) < inputMs;
	        }
	    }

	    function isBetween (from, to, units) {
	        return this.isAfter(from, units) && this.isBefore(to, units);
	    }

	    function isSame (input, units) {
	        var inputMs;
	        units = normalizeUnits(units || 'millisecond');
	        if (units === 'millisecond') {
	            input = isMoment(input) ? input : local__createLocal(input);
	            return +this === +input;
	        } else {
	            inputMs = +local__createLocal(input);
	            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));
	        }
	    }

	    function diff (input, units, asFloat) {
	        var that = cloneWithOffset(input, this),
	            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,
	            delta, output;

	        units = normalizeUnits(units);

	        if (units === 'year' || units === 'month' || units === 'quarter') {
	            output = monthDiff(this, that);
	            if (units === 'quarter') {
	                output = output / 3;
	            } else if (units === 'year') {
	                output = output / 12;
	            }
	        } else {
	            delta = this - that;
	            output = units === 'second' ? delta / 1e3 : // 1000
	                units === 'minute' ? delta / 6e4 : // 1000 * 60
	                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60
	                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst
	                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst
	                delta;
	        }
	        return asFloat ? output : absFloor(output);
	    }

	    function monthDiff (a, b) {
	        // difference in months
	        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	            // b is in (anchor - 1 month, anchor + 1 month)
	            anchor = a.clone().add(wholeMonthDiff, 'months'),
	            anchor2, adjust;

	        if (b - anchor < 0) {
	            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor - anchor2);
	        } else {
	            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	            // linear across the month
	            adjust = (b - anchor) / (anchor2 - anchor);
	        }

	        return -(wholeMonthDiff + adjust);
	    }

	    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';

	    function toString () {
	        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	    }

	    function moment_format__toISOString () {
	        var m = this.clone().utc();
	        if (0 < m.year() && m.year() <= 9999) {
	            if ('function' === typeof Date.prototype.toISOString) {
	                // native implementation is ~50x faster, use it when we can
	                return this.toDate().toISOString();
	            } else {
	                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	            }
	        } else {
	            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
	        }
	    }

	    function format (inputString) {
	        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);
	        return this.localeData().postformat(output);
	    }

	    function from (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function fromNow (withoutSuffix) {
	        return this.from(local__createLocal(), withoutSuffix);
	    }

	    function to (time, withoutSuffix) {
	        if (!this.isValid()) {
	            return this.localeData().invalidDate();
	        }
	        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    }

	    function toNow (withoutSuffix) {
	        return this.to(local__createLocal(), withoutSuffix);
	    }

	    function locale (key) {
	        var newLocaleData;

	        if (key === undefined) {
	            return this._locale._abbr;
	        } else {
	            newLocaleData = locale_locales__getLocale(key);
	            if (newLocaleData != null) {
	                this._locale = newLocaleData;
	            }
	            return this;
	        }
	    }

	    var lang = deprecate(
	        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	        function (key) {
	            if (key === undefined) {
	                return this.localeData();
	            } else {
	                return this.locale(key);
	            }
	        }
	    );

	    function localeData () {
	        return this._locale;
	    }

	    function startOf (units) {
	        units = normalizeUnits(units);
	        // the following switch intentionally omits break keywords
	        // to utilize falling through the cases.
	        switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	        }

	        // weeks are a special case
	        if (units === 'week') {
	            this.weekday(0);
	        }
	        if (units === 'isoWeek') {
	            this.isoWeekday(1);
	        }

	        // quarters are also special
	        if (units === 'quarter') {
	            this.month(Math.floor(this.month() / 3) * 3);
	        }

	        return this;
	    }

	    function endOf (units) {
	        units = normalizeUnits(units);
	        if (units === undefined || units === 'millisecond') {
	            return this;
	        }
	        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	    }

	    function to_type__valueOf () {
	        return +this._d - ((this._offset || 0) * 60000);
	    }

	    function unix () {
	        return Math.floor(+this / 1000);
	    }

	    function toDate () {
	        return this._offset ? new Date(+this) : this._d;
	    }

	    function toArray () {
	        var m = this;
	        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	    }

	    function toObject () {
	        var m = this;
	        return {
	            years: m.year(),
	            months: m.month(),
	            date: m.date(),
	            hours: m.hours(),
	            minutes: m.minutes(),
	            seconds: m.seconds(),
	            milliseconds: m.milliseconds()
	        };
	    }

	    function moment_valid__isValid () {
	        return valid__isValid(this);
	    }

	    function parsingFlags () {
	        return extend({}, getParsingFlags(this));
	    }

	    function invalidAt () {
	        return getParsingFlags(this).overflow;
	    }

	    addFormatToken(0, ['gg', 2], 0, function () {
	        return this.weekYear() % 100;
	    });

	    addFormatToken(0, ['GG', 2], 0, function () {
	        return this.isoWeekYear() % 100;
	    });

	    function addWeekYearFormatToken (token, getter) {
	        addFormatToken(0, [token, token.length], 0, getter);
	    }

	    addWeekYearFormatToken('gggg',     'weekYear');
	    addWeekYearFormatToken('ggggg',    'weekYear');
	    addWeekYearFormatToken('GGGG',  'isoWeekYear');
	    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	    // ALIASES

	    addUnitAlias('weekYear', 'gg');
	    addUnitAlias('isoWeekYear', 'GG');

	    // PARSING

	    addRegexToken('G',      matchSigned);
	    addRegexToken('g',      matchSigned);
	    addRegexToken('GG',     match1to2, match2);
	    addRegexToken('gg',     match1to2, match2);
	    addRegexToken('GGGG',   match1to4, match4);
	    addRegexToken('gggg',   match1to4, match4);
	    addRegexToken('GGGGG',  match1to6, match6);
	    addRegexToken('ggggg',  match1to6, match6);

	    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	        week[token.substr(0, 2)] = toInt(input);
	    });

	    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);
	    });

	    // HELPERS

	    function weeksInYear(year, dow, doy) {
	        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;
	    }

	    // MOMENTS

	    function getSetWeekYear (input) {
	        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getSetISOWeekYear (input) {
	        var year = weekOfYear(this, 1, 4).year;
	        return input == null ? year : this.add((input - year), 'y');
	    }

	    function getISOWeeksInYear () {
	        return weeksInYear(this.year(), 1, 4);
	    }

	    function getWeeksInYear () {
	        var weekInfo = this.localeData()._week;
	        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	    }

	    addFormatToken('Q', 0, 0, 'quarter');

	    // ALIASES

	    addUnitAlias('quarter', 'Q');

	    // PARSING

	    addRegexToken('Q', match1);
	    addParseToken('Q', function (input, array) {
	        array[MONTH] = (toInt(input) - 1) * 3;
	    });

	    // MOMENTS

	    function getSetQuarter (input) {
	        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	    }

	    addFormatToken('D', ['DD', 2], 'Do', 'date');

	    // ALIASES

	    addUnitAlias('date', 'D');

	    // PARSING

	    addRegexToken('D',  match1to2);
	    addRegexToken('DD', match1to2, match2);
	    addRegexToken('Do', function (isStrict, locale) {
	        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;
	    });

	    addParseToken(['D', 'DD'], DATE);
	    addParseToken('Do', function (input, array) {
	        array[DATE] = toInt(input.match(match1to2)[0], 10);
	    });

	    // MOMENTS

	    var getSetDayOfMonth = makeGetSet('Date', true);

	    addFormatToken('d', 0, 'do', 'day');

	    addFormatToken('dd', 0, 0, function (format) {
	        return this.localeData().weekdaysMin(this, format);
	    });

	    addFormatToken('ddd', 0, 0, function (format) {
	        return this.localeData().weekdaysShort(this, format);
	    });

	    addFormatToken('dddd', 0, 0, function (format) {
	        return this.localeData().weekdays(this, format);
	    });

	    addFormatToken('e', 0, 0, 'weekday');
	    addFormatToken('E', 0, 0, 'isoWeekday');

	    // ALIASES

	    addUnitAlias('day', 'd');
	    addUnitAlias('weekday', 'e');
	    addUnitAlias('isoWeekday', 'E');

	    // PARSING

	    addRegexToken('d',    match1to2);
	    addRegexToken('e',    match1to2);
	    addRegexToken('E',    match1to2);
	    addRegexToken('dd',   matchWord);
	    addRegexToken('ddd',  matchWord);
	    addRegexToken('dddd', matchWord);

	    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {
	        var weekday = config._locale.weekdaysParse(input);
	        // if we didn't get a weekday name, mark the date as invalid
	        if (weekday != null) {
	            week.d = weekday;
	        } else {
	            getParsingFlags(config).invalidWeekday = input;
	        }
	    });

	    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	        week[token] = toInt(input);
	    });

	    // HELPERS

	    function parseWeekday(input, locale) {
	        if (typeof input !== 'string') {
	            return input;
	        }

	        if (!isNaN(input)) {
	            return parseInt(input, 10);
	        }

	        input = locale.weekdaysParse(input);
	        if (typeof input === 'number') {
	            return input;
	        }

	        return null;
	    }

	    // LOCALES

	    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	    function localeWeekdays (m) {
	        return this._weekdays[m.day()];
	    }

	    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	    function localeWeekdaysShort (m) {
	        return this._weekdaysShort[m.day()];
	    }

	    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	    function localeWeekdaysMin (m) {
	        return this._weekdaysMin[m.day()];
	    }

	    function localeWeekdaysParse (weekdayName) {
	        var i, mom, regex;

	        this._weekdaysParse = this._weekdaysParse || [];

	        for (i = 0; i < 7; i++) {
	            // make the regex if we don't have it already
	            if (!this._weekdaysParse[i]) {
	                mom = local__createLocal([2000, 1]).day(i);
	                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	            }
	            // test the regex
	            if (this._weekdaysParse[i].test(weekdayName)) {
	                return i;
	            }
	        }
	    }

	    // MOMENTS

	    function getSetDayOfWeek (input) {
	        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	        if (input != null) {
	            input = parseWeekday(input, this.localeData());
	            return this.add(input - day, 'd');
	        } else {
	            return day;
	        }
	    }

	    function getSetLocaleDayOfWeek (input) {
	        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	        return input == null ? weekday : this.add(input - weekday, 'd');
	    }

	    function getSetISODayOfWeek (input) {
	        // behaves the same as moment#day except
	        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	        // as a setter, sunday should belong to the previous week.
	        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
	    }

	    addFormatToken('H', ['HH', 2], 0, 'hour');
	    addFormatToken('h', ['hh', 2], 0, function () {
	        return this.hours() % 12 || 12;
	    });

	    function meridiem (token, lowercase) {
	        addFormatToken(token, 0, 0, function () {
	            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	        });
	    }

	    meridiem('a', true);
	    meridiem('A', false);

	    // ALIASES

	    addUnitAlias('hour', 'h');

	    // PARSING

	    function matchMeridiem (isStrict, locale) {
	        return locale._meridiemParse;
	    }

	    addRegexToken('a',  matchMeridiem);
	    addRegexToken('A',  matchMeridiem);
	    addRegexToken('H',  match1to2);
	    addRegexToken('h',  match1to2);
	    addRegexToken('HH', match1to2, match2);
	    addRegexToken('hh', match1to2, match2);

	    addParseToken(['H', 'HH'], HOUR);
	    addParseToken(['a', 'A'], function (input, array, config) {
	        config._isPm = config._locale.isPM(input);
	        config._meridiem = input;
	    });
	    addParseToken(['h', 'hh'], function (input, array, config) {
	        array[HOUR] = toInt(input);
	        getParsingFlags(config).bigHour = true;
	    });

	    // LOCALES

	    function localeIsPM (input) {
	        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	        // Using charAt should be more compatible.
	        return ((input + '').toLowerCase().charAt(0) === 'p');
	    }

	    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	    function localeMeridiem (hours, minutes, isLower) {
	        if (hours > 11) {
	            return isLower ? 'pm' : 'PM';
	        } else {
	            return isLower ? 'am' : 'AM';
	        }
	    }


	    // MOMENTS

	    // Setting the hour should keep the time, because the user explicitly
	    // specified which hour he wants. So trying to maintain the same hour (in
	    // a new timezone) makes sense. Adding/subtracting hours does not follow
	    // this rule.
	    var getSetHour = makeGetSet('Hours', true);

	    addFormatToken('m', ['mm', 2], 0, 'minute');

	    // ALIASES

	    addUnitAlias('minute', 'm');

	    // PARSING

	    addRegexToken('m',  match1to2);
	    addRegexToken('mm', match1to2, match2);
	    addParseToken(['m', 'mm'], MINUTE);

	    // MOMENTS

	    var getSetMinute = makeGetSet('Minutes', false);

	    addFormatToken('s', ['ss', 2], 0, 'second');

	    // ALIASES

	    addUnitAlias('second', 's');

	    // PARSING

	    addRegexToken('s',  match1to2);
	    addRegexToken('ss', match1to2, match2);
	    addParseToken(['s', 'ss'], SECOND);

	    // MOMENTS

	    var getSetSecond = makeGetSet('Seconds', false);

	    addFormatToken('S', 0, 0, function () {
	        return ~~(this.millisecond() / 100);
	    });

	    addFormatToken(0, ['SS', 2], 0, function () {
	        return ~~(this.millisecond() / 10);
	    });

	    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	    addFormatToken(0, ['SSSS', 4], 0, function () {
	        return this.millisecond() * 10;
	    });
	    addFormatToken(0, ['SSSSS', 5], 0, function () {
	        return this.millisecond() * 100;
	    });
	    addFormatToken(0, ['SSSSSS', 6], 0, function () {
	        return this.millisecond() * 1000;
	    });
	    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	        return this.millisecond() * 10000;
	    });
	    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	        return this.millisecond() * 100000;
	    });
	    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	        return this.millisecond() * 1000000;
	    });


	    // ALIASES

	    addUnitAlias('millisecond', 'ms');

	    // PARSING

	    addRegexToken('S',    match1to3, match1);
	    addRegexToken('SS',   match1to3, match2);
	    addRegexToken('SSS',  match1to3, match3);

	    var token;
	    for (token = 'SSSS'; token.length <= 9; token += 'S') {
	        addRegexToken(token, matchUnsigned);
	    }

	    function parseMs(input, array) {
	        array[MILLISECOND] = toInt(('0.' + input) * 1000);
	    }

	    for (token = 'S'; token.length <= 9; token += 'S') {
	        addParseToken(token, parseMs);
	    }
	    // MOMENTS

	    var getSetMillisecond = makeGetSet('Milliseconds', false);

	    addFormatToken('z',  0, 0, 'zoneAbbr');
	    addFormatToken('zz', 0, 0, 'zoneName');

	    // MOMENTS

	    function getZoneAbbr () {
	        return this._isUTC ? 'UTC' : '';
	    }

	    function getZoneName () {
	        return this._isUTC ? 'Coordinated Universal Time' : '';
	    }

	    var momentPrototype__proto = Moment.prototype;

	    momentPrototype__proto.add          = add_subtract__add;
	    momentPrototype__proto.calendar     = moment_calendar__calendar;
	    momentPrototype__proto.clone        = clone;
	    momentPrototype__proto.diff         = diff;
	    momentPrototype__proto.endOf        = endOf;
	    momentPrototype__proto.format       = format;
	    momentPrototype__proto.from         = from;
	    momentPrototype__proto.fromNow      = fromNow;
	    momentPrototype__proto.to           = to;
	    momentPrototype__proto.toNow        = toNow;
	    momentPrototype__proto.get          = getSet;
	    momentPrototype__proto.invalidAt    = invalidAt;
	    momentPrototype__proto.isAfter      = isAfter;
	    momentPrototype__proto.isBefore     = isBefore;
	    momentPrototype__proto.isBetween    = isBetween;
	    momentPrototype__proto.isSame       = isSame;
	    momentPrototype__proto.isValid      = moment_valid__isValid;
	    momentPrototype__proto.lang         = lang;
	    momentPrototype__proto.locale       = locale;
	    momentPrototype__proto.localeData   = localeData;
	    momentPrototype__proto.max          = prototypeMax;
	    momentPrototype__proto.min          = prototypeMin;
	    momentPrototype__proto.parsingFlags = parsingFlags;
	    momentPrototype__proto.set          = getSet;
	    momentPrototype__proto.startOf      = startOf;
	    momentPrototype__proto.subtract     = add_subtract__subtract;
	    momentPrototype__proto.toArray      = toArray;
	    momentPrototype__proto.toObject     = toObject;
	    momentPrototype__proto.toDate       = toDate;
	    momentPrototype__proto.toISOString  = moment_format__toISOString;
	    momentPrototype__proto.toJSON       = moment_format__toISOString;
	    momentPrototype__proto.toString     = toString;
	    momentPrototype__proto.unix         = unix;
	    momentPrototype__proto.valueOf      = to_type__valueOf;

	    // Year
	    momentPrototype__proto.year       = getSetYear;
	    momentPrototype__proto.isLeapYear = getIsLeapYear;

	    // Week Year
	    momentPrototype__proto.weekYear    = getSetWeekYear;
	    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;

	    // Quarter
	    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;

	    // Month
	    momentPrototype__proto.month       = getSetMonth;
	    momentPrototype__proto.daysInMonth = getDaysInMonth;

	    // Week
	    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;
	    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;
	    momentPrototype__proto.weeksInYear    = getWeeksInYear;
	    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;

	    // Day
	    momentPrototype__proto.date       = getSetDayOfMonth;
	    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;
	    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;
	    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;
	    momentPrototype__proto.dayOfYear  = getSetDayOfYear;

	    // Hour
	    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;

	    // Minute
	    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;

	    // Second
	    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;

	    // Millisecond
	    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;

	    // Offset
	    momentPrototype__proto.utcOffset            = getSetOffset;
	    momentPrototype__proto.utc                  = setOffsetToUTC;
	    momentPrototype__proto.local                = setOffsetToLocal;
	    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;
	    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;
	    momentPrototype__proto.isDST                = isDaylightSavingTime;
	    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;
	    momentPrototype__proto.isLocal              = isLocal;
	    momentPrototype__proto.isUtcOffset          = isUtcOffset;
	    momentPrototype__proto.isUtc                = isUtc;
	    momentPrototype__proto.isUTC                = isUtc;

	    // Timezone
	    momentPrototype__proto.zoneAbbr = getZoneAbbr;
	    momentPrototype__proto.zoneName = getZoneName;

	    // Deprecations
	    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);

	    var momentPrototype = momentPrototype__proto;

	    function moment__createUnix (input) {
	        return local__createLocal(input * 1000);
	    }

	    function moment__createInZone () {
	        return local__createLocal.apply(null, arguments).parseZone();
	    }

	    var defaultCalendar = {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    };

	    function locale_calendar__calendar (key, mom, now) {
	        var output = this._calendar[key];
	        return typeof output === 'function' ? output.call(mom, now) : output;
	    }

	    var defaultLongDateFormat = {
	        LTS  : 'h:mm:ss A',
	        LT   : 'h:mm A',
	        L    : 'MM/DD/YYYY',
	        LL   : 'MMMM D, YYYY',
	        LLL  : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    };

	    function longDateFormat (key) {
	        var format = this._longDateFormat[key],
	            formatUpper = this._longDateFormat[key.toUpperCase()];

	        if (format || !formatUpper) {
	            return format;
	        }

	        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	            return val.slice(1);
	        });

	        return this._longDateFormat[key];
	    }

	    var defaultInvalidDate = 'Invalid date';

	    function invalidDate () {
	        return this._invalidDate;
	    }

	    var defaultOrdinal = '%d';
	    var defaultOrdinalParse = /\d{1,2}/;

	    function ordinal (number) {
	        return this._ordinal.replace('%d', number);
	    }

	    function preParsePostFormat (string) {
	        return string;
	    }

	    var defaultRelativeTime = {
	        future : 'in %s',
	        past   : '%s ago',
	        s  : 'a few seconds',
	        m  : 'a minute',
	        mm : '%d minutes',
	        h  : 'an hour',
	        hh : '%d hours',
	        d  : 'a day',
	        dd : '%d days',
	        M  : 'a month',
	        MM : '%d months',
	        y  : 'a year',
	        yy : '%d years'
	    };

	    function relative__relativeTime (number, withoutSuffix, string, isFuture) {
	        var output = this._relativeTime[string];
	        return (typeof output === 'function') ?
	            output(number, withoutSuffix, string, isFuture) :
	            output.replace(/%d/i, number);
	    }

	    function pastFuture (diff, output) {
	        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
	    }

	    function locale_set__set (config) {
	        var prop, i;
	        for (i in config) {
	            prop = config[i];
	            if (typeof prop === 'function') {
	                this[i] = prop;
	            } else {
	                this['_' + i] = prop;
	            }
	        }
	        // Lenient ordinal parsing accepts just a number in addition to
	        // number + (possibly) stuff coming from _ordinalParseLenient.
	        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\d{1,2}/).source);
	    }

	    var prototype__proto = Locale.prototype;

	    prototype__proto._calendar       = defaultCalendar;
	    prototype__proto.calendar        = locale_calendar__calendar;
	    prototype__proto._longDateFormat = defaultLongDateFormat;
	    prototype__proto.longDateFormat  = longDateFormat;
	    prototype__proto._invalidDate    = defaultInvalidDate;
	    prototype__proto.invalidDate     = invalidDate;
	    prototype__proto._ordinal        = defaultOrdinal;
	    prototype__proto.ordinal         = ordinal;
	    prototype__proto._ordinalParse   = defaultOrdinalParse;
	    prototype__proto.preparse        = preParsePostFormat;
	    prototype__proto.postformat      = preParsePostFormat;
	    prototype__proto._relativeTime   = defaultRelativeTime;
	    prototype__proto.relativeTime    = relative__relativeTime;
	    prototype__proto.pastFuture      = pastFuture;
	    prototype__proto.set             = locale_set__set;

	    // Month
	    prototype__proto.months       =        localeMonths;
	    prototype__proto._months      = defaultLocaleMonths;
	    prototype__proto.monthsShort  =        localeMonthsShort;
	    prototype__proto._monthsShort = defaultLocaleMonthsShort;
	    prototype__proto.monthsParse  =        localeMonthsParse;

	    // Week
	    prototype__proto.week = localeWeek;
	    prototype__proto._week = defaultLocaleWeek;
	    prototype__proto.firstDayOfYear = localeFirstDayOfYear;
	    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;

	    // Day of Week
	    prototype__proto.weekdays       =        localeWeekdays;
	    prototype__proto._weekdays      = defaultLocaleWeekdays;
	    prototype__proto.weekdaysMin    =        localeWeekdaysMin;
	    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;
	    prototype__proto.weekdaysShort  =        localeWeekdaysShort;
	    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;
	    prototype__proto.weekdaysParse  =        localeWeekdaysParse;

	    // Hours
	    prototype__proto.isPM = localeIsPM;
	    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;
	    prototype__proto.meridiem = localeMeridiem;

	    function lists__get (format, index, field, setter) {
	        var locale = locale_locales__getLocale();
	        var utc = create_utc__createUTC().set(setter, index);
	        return locale[field](utc, format);
	    }

	    function list (format, index, field, count, setter) {
	        if (typeof format === 'number') {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';

	        if (index != null) {
	            return lists__get(format, index, field, setter);
	        }

	        var i;
	        var out = [];
	        for (i = 0; i < count; i++) {
	            out[i] = lists__get(format, i, field, setter);
	        }
	        return out;
	    }

	    function lists__listMonths (format, index) {
	        return list(format, index, 'months', 12, 'month');
	    }

	    function lists__listMonthsShort (format, index) {
	        return list(format, index, 'monthsShort', 12, 'month');
	    }

	    function lists__listWeekdays (format, index) {
	        return list(format, index, 'weekdays', 7, 'day');
	    }

	    function lists__listWeekdaysShort (format, index) {
	        return list(format, index, 'weekdaysShort', 7, 'day');
	    }

	    function lists__listWeekdaysMin (format, index) {
	        return list(format, index, 'weekdaysMin', 7, 'day');
	    }

	    locale_locales__getSetGlobalLocale('en', {
	        ordinalParse: /\d{1,2}(th|st|nd|rd)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (toInt(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    // Side effect imports
	    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);
	    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);

	    var mathAbs = Math.abs;

	    function duration_abs__abs () {
	        var data           = this._data;

	        this._milliseconds = mathAbs(this._milliseconds);
	        this._days         = mathAbs(this._days);
	        this._months       = mathAbs(this._months);

	        data.milliseconds  = mathAbs(data.milliseconds);
	        data.seconds       = mathAbs(data.seconds);
	        data.minutes       = mathAbs(data.minutes);
	        data.hours         = mathAbs(data.hours);
	        data.months        = mathAbs(data.months);
	        data.years         = mathAbs(data.years);

	        return this;
	    }

	    function duration_add_subtract__addSubtract (duration, input, value, direction) {
	        var other = create__createDuration(input, value);

	        duration._milliseconds += direction * other._milliseconds;
	        duration._days         += direction * other._days;
	        duration._months       += direction * other._months;

	        return duration._bubble();
	    }

	    // supports only 2.0-style add(1, 's') or add(duration)
	    function duration_add_subtract__add (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, 1);
	    }

	    // supports only 2.0-style subtract(1, 's') or subtract(duration)
	    function duration_add_subtract__subtract (input, value) {
	        return duration_add_subtract__addSubtract(this, input, value, -1);
	    }

	    function absCeil (number) {
	        if (number < 0) {
	            return Math.floor(number);
	        } else {
	            return Math.ceil(number);
	        }
	    }

	    function bubble () {
	        var milliseconds = this._milliseconds;
	        var days         = this._days;
	        var months       = this._months;
	        var data         = this._data;
	        var seconds, minutes, hours, years, monthsFromDays;

	        // if we have a mix of positive and negative values, bubble down first
	        // check: https://github.com/moment/moment/issues/2166
	        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	                (milliseconds <= 0 && days <= 0 && months <= 0))) {
	            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	            days = 0;
	            months = 0;
	        }

	        // The following code bubbles up values, see the tests for
	        // examples of what that means.
	        data.milliseconds = milliseconds % 1000;

	        seconds           = absFloor(milliseconds / 1000);
	        data.seconds      = seconds % 60;

	        minutes           = absFloor(seconds / 60);
	        data.minutes      = minutes % 60;

	        hours             = absFloor(minutes / 60);
	        data.hours        = hours % 24;

	        days += absFloor(hours / 24);

	        // convert days to months
	        monthsFromDays = absFloor(daysToMonths(days));
	        months += monthsFromDays;
	        days -= absCeil(monthsToDays(monthsFromDays));

	        // 12 months -> 1 year
	        years = absFloor(months / 12);
	        months %= 12;

	        data.days   = days;
	        data.months = months;
	        data.years  = years;

	        return this;
	    }

	    function daysToMonths (days) {
	        // 400 years have 146097 days (taking into account leap year rules)
	        // 400 years have 12 months === 4800
	        return days * 4800 / 146097;
	    }

	    function monthsToDays (months) {
	        // the reverse of daysToMonths
	        return months * 146097 / 4800;
	    }

	    function as (units) {
	        var days;
	        var months;
	        var milliseconds = this._milliseconds;

	        units = normalizeUnits(units);

	        if (units === 'month' || units === 'year') {
	            days   = this._days   + milliseconds / 864e5;
	            months = this._months + daysToMonths(days);
	            return units === 'month' ? months : months / 12;
	        } else {
	            // handle milliseconds separately because of floating point math errors (issue #1867)
	            days = this._days + Math.round(monthsToDays(this._months));
	            switch (units) {
	                case 'week'   : return days / 7     + milliseconds / 6048e5;
	                case 'day'    : return days         + milliseconds / 864e5;
	                case 'hour'   : return days * 24    + milliseconds / 36e5;
	                case 'minute' : return days * 1440  + milliseconds / 6e4;
	                case 'second' : return days * 86400 + milliseconds / 1000;
	                // Math.floor prevents floating point math errors here
	                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	                default: throw new Error('Unknown unit ' + units);
	            }
	        }
	    }

	    // TODO: Use this.as('ms')?
	    function duration_as__valueOf () {
	        return (
	            this._milliseconds +
	            this._days * 864e5 +
	            (this._months % 12) * 2592e6 +
	            toInt(this._months / 12) * 31536e6
	        );
	    }

	    function makeAs (alias) {
	        return function () {
	            return this.as(alias);
	        };
	    }

	    var asMilliseconds = makeAs('ms');
	    var asSeconds      = makeAs('s');
	    var asMinutes      = makeAs('m');
	    var asHours        = makeAs('h');
	    var asDays         = makeAs('d');
	    var asWeeks        = makeAs('w');
	    var asMonths       = makeAs('M');
	    var asYears        = makeAs('y');

	    function duration_get__get (units) {
	        units = normalizeUnits(units);
	        return this[units + 's']();
	    }

	    function makeGetter(name) {
	        return function () {
	            return this._data[name];
	        };
	    }

	    var milliseconds = makeGetter('milliseconds');
	    var seconds      = makeGetter('seconds');
	    var minutes      = makeGetter('minutes');
	    var hours        = makeGetter('hours');
	    var days         = makeGetter('days');
	    var months       = makeGetter('months');
	    var years        = makeGetter('years');

	    function weeks () {
	        return absFloor(this.days() / 7);
	    }

	    var round = Math.round;
	    var thresholds = {
	        s: 45,  // seconds to minute
	        m: 45,  // minutes to hour
	        h: 22,  // hours to day
	        d: 26,  // days to month
	        M: 11   // months to year
	    };

	    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	    }

	    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {
	        var duration = create__createDuration(posNegDuration).abs();
	        var seconds  = round(duration.as('s'));
	        var minutes  = round(duration.as('m'));
	        var hours    = round(duration.as('h'));
	        var days     = round(duration.as('d'));
	        var months   = round(duration.as('M'));
	        var years    = round(duration.as('y'));

	        var a = seconds < thresholds.s && ['s', seconds]  ||
	                minutes === 1          && ['m']           ||
	                minutes < thresholds.m && ['mm', minutes] ||
	                hours   === 1          && ['h']           ||
	                hours   < thresholds.h && ['hh', hours]   ||
	                days    === 1          && ['d']           ||
	                days    < thresholds.d && ['dd', days]    ||
	                months  === 1          && ['M']           ||
	                months  < thresholds.M && ['MM', months]  ||
	                years   === 1          && ['y']           || ['yy', years];

	        a[2] = withoutSuffix;
	        a[3] = +posNegDuration > 0;
	        a[4] = locale;
	        return substituteTimeAgo.apply(null, a);
	    }

	    // This function allows you to set a threshold for relative time strings
	    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {
	        if (thresholds[threshold] === undefined) {
	            return false;
	        }
	        if (limit === undefined) {
	            return thresholds[threshold];
	        }
	        thresholds[threshold] = limit;
	        return true;
	    }

	    function humanize (withSuffix) {
	        var locale = this.localeData();
	        var output = duration_humanize__relativeTime(this, !withSuffix, locale);

	        if (withSuffix) {
	            output = locale.pastFuture(+this, output);
	        }

	        return locale.postformat(output);
	    }

	    var iso_string__abs = Math.abs;

	    function iso_string__toISOString() {
	        // for ISO strings we do not use the normal bubbling rules:
	        //  * milliseconds bubble up until they become hours
	        //  * days do not bubble at all
	        //  * months bubble up until they become years
	        // This is because there is no context-free conversion between hours and days
	        // (think of clock changes)
	        // and also not between days and months (28-31 days per month)
	        var seconds = iso_string__abs(this._milliseconds) / 1000;
	        var days         = iso_string__abs(this._days);
	        var months       = iso_string__abs(this._months);
	        var minutes, hours, years;

	        // 3600 seconds -> 60 minutes -> 1 hour
	        minutes           = absFloor(seconds / 60);
	        hours             = absFloor(minutes / 60);
	        seconds %= 60;
	        minutes %= 60;

	        // 12 months -> 1 year
	        years  = absFloor(months / 12);
	        months %= 12;


	        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	        var Y = years;
	        var M = months;
	        var D = days;
	        var h = hours;
	        var m = minutes;
	        var s = seconds;
	        var total = this.asSeconds();

	        if (!total) {
	            // this is the same as C#'s (Noda) and python (isodate)...
	            // but not other JS (goog.date)
	            return 'P0D';
	        }

	        return (total < 0 ? '-' : '') +
	            'P' +
	            (Y ? Y + 'Y' : '') +
	            (M ? M + 'M' : '') +
	            (D ? D + 'D' : '') +
	            ((h || m || s) ? 'T' : '') +
	            (h ? h + 'H' : '') +
	            (m ? m + 'M' : '') +
	            (s ? s + 'S' : '');
	    }

	    var duration_prototype__proto = Duration.prototype;

	    duration_prototype__proto.abs            = duration_abs__abs;
	    duration_prototype__proto.add            = duration_add_subtract__add;
	    duration_prototype__proto.subtract       = duration_add_subtract__subtract;
	    duration_prototype__proto.as             = as;
	    duration_prototype__proto.asMilliseconds = asMilliseconds;
	    duration_prototype__proto.asSeconds      = asSeconds;
	    duration_prototype__proto.asMinutes      = asMinutes;
	    duration_prototype__proto.asHours        = asHours;
	    duration_prototype__proto.asDays         = asDays;
	    duration_prototype__proto.asWeeks        = asWeeks;
	    duration_prototype__proto.asMonths       = asMonths;
	    duration_prototype__proto.asYears        = asYears;
	    duration_prototype__proto.valueOf        = duration_as__valueOf;
	    duration_prototype__proto._bubble        = bubble;
	    duration_prototype__proto.get            = duration_get__get;
	    duration_prototype__proto.milliseconds   = milliseconds;
	    duration_prototype__proto.seconds        = seconds;
	    duration_prototype__proto.minutes        = minutes;
	    duration_prototype__proto.hours          = hours;
	    duration_prototype__proto.days           = days;
	    duration_prototype__proto.weeks          = weeks;
	    duration_prototype__proto.months         = months;
	    duration_prototype__proto.years          = years;
	    duration_prototype__proto.humanize       = humanize;
	    duration_prototype__proto.toISOString    = iso_string__toISOString;
	    duration_prototype__proto.toString       = iso_string__toISOString;
	    duration_prototype__proto.toJSON         = iso_string__toISOString;
	    duration_prototype__proto.locale         = locale;
	    duration_prototype__proto.localeData     = localeData;

	    // Deprecations
	    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);
	    duration_prototype__proto.lang = lang;

	    // Side effect imports

	    addFormatToken('X', 0, 0, 'unix');
	    addFormatToken('x', 0, 0, 'valueOf');

	    // PARSING

	    addRegexToken('x', matchSigned);
	    addRegexToken('X', matchTimestamp);
	    addParseToken('X', function (input, array, config) {
	        config._d = new Date(parseFloat(input, 10) * 1000);
	    });
	    addParseToken('x', function (input, array, config) {
	        config._d = new Date(toInt(input));
	    });

	    // Side effect imports


	    utils_hooks__hooks.version = '2.10.6';

	    setHookCallback(local__createLocal);

	    utils_hooks__hooks.fn                    = momentPrototype;
	    utils_hooks__hooks.min                   = min;
	    utils_hooks__hooks.max                   = max;
	    utils_hooks__hooks.utc                   = create_utc__createUTC;
	    utils_hooks__hooks.unix                  = moment__createUnix;
	    utils_hooks__hooks.months                = lists__listMonths;
	    utils_hooks__hooks.isDate                = isDate;
	    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;
	    utils_hooks__hooks.invalid               = valid__createInvalid;
	    utils_hooks__hooks.duration              = create__createDuration;
	    utils_hooks__hooks.isMoment              = isMoment;
	    utils_hooks__hooks.weekdays              = lists__listWeekdays;
	    utils_hooks__hooks.parseZone             = moment__createInZone;
	    utils_hooks__hooks.localeData            = locale_locales__getLocale;
	    utils_hooks__hooks.isDuration            = isDuration;
	    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;
	    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;
	    utils_hooks__hooks.defineLocale          = defineLocale;
	    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;
	    utils_hooks__hooks.normalizeUnits        = normalizeUnits;
	    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;

	    var _moment = utils_hooks__hooks;

	    return _moment;

	}));
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(180)(module)))

/***/ },
/* 180 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./af": 182,
		"./af.js": 182,
		"./ar": 183,
		"./ar-ma": 184,
		"./ar-ma.js": 184,
		"./ar-sa": 185,
		"./ar-sa.js": 185,
		"./ar-tn": 186,
		"./ar-tn.js": 186,
		"./ar.js": 183,
		"./az": 187,
		"./az.js": 187,
		"./be": 188,
		"./be.js": 188,
		"./bg": 189,
		"./bg.js": 189,
		"./bn": 190,
		"./bn.js": 190,
		"./bo": 191,
		"./bo.js": 191,
		"./br": 192,
		"./br.js": 192,
		"./bs": 193,
		"./bs.js": 193,
		"./ca": 194,
		"./ca.js": 194,
		"./cs": 195,
		"./cs.js": 195,
		"./cv": 196,
		"./cv.js": 196,
		"./cy": 197,
		"./cy.js": 197,
		"./da": 198,
		"./da.js": 198,
		"./de": 199,
		"./de-at": 200,
		"./de-at.js": 200,
		"./de.js": 199,
		"./el": 201,
		"./el.js": 201,
		"./en-au": 202,
		"./en-au.js": 202,
		"./en-ca": 203,
		"./en-ca.js": 203,
		"./en-gb": 204,
		"./en-gb.js": 204,
		"./eo": 205,
		"./eo.js": 205,
		"./es": 206,
		"./es.js": 206,
		"./et": 207,
		"./et.js": 207,
		"./eu": 208,
		"./eu.js": 208,
		"./fa": 209,
		"./fa.js": 209,
		"./fi": 210,
		"./fi.js": 210,
		"./fo": 211,
		"./fo.js": 211,
		"./fr": 212,
		"./fr-ca": 213,
		"./fr-ca.js": 213,
		"./fr.js": 212,
		"./fy": 214,
		"./fy.js": 214,
		"./gl": 215,
		"./gl.js": 215,
		"./he": 216,
		"./he.js": 216,
		"./hi": 217,
		"./hi.js": 217,
		"./hr": 218,
		"./hr.js": 218,
		"./hu": 219,
		"./hu.js": 219,
		"./hy-am": 220,
		"./hy-am.js": 220,
		"./id": 221,
		"./id.js": 221,
		"./is": 222,
		"./is.js": 222,
		"./it": 223,
		"./it.js": 223,
		"./ja": 224,
		"./ja.js": 224,
		"./jv": 225,
		"./jv.js": 225,
		"./ka": 226,
		"./ka.js": 226,
		"./km": 227,
		"./km.js": 227,
		"./ko": 228,
		"./ko.js": 228,
		"./lb": 229,
		"./lb.js": 229,
		"./lt": 230,
		"./lt.js": 230,
		"./lv": 231,
		"./lv.js": 231,
		"./me": 232,
		"./me.js": 232,
		"./mk": 233,
		"./mk.js": 233,
		"./ml": 234,
		"./ml.js": 234,
		"./mr": 235,
		"./mr.js": 235,
		"./ms": 236,
		"./ms-my": 237,
		"./ms-my.js": 237,
		"./ms.js": 236,
		"./my": 238,
		"./my.js": 238,
		"./nb": 239,
		"./nb.js": 239,
		"./ne": 240,
		"./ne.js": 240,
		"./nl": 241,
		"./nl.js": 241,
		"./nn": 242,
		"./nn.js": 242,
		"./pl": 243,
		"./pl.js": 243,
		"./pt": 244,
		"./pt-br": 245,
		"./pt-br.js": 245,
		"./pt.js": 244,
		"./ro": 246,
		"./ro.js": 246,
		"./ru": 247,
		"./ru.js": 247,
		"./si": 248,
		"./si.js": 248,
		"./sk": 249,
		"./sk.js": 249,
		"./sl": 250,
		"./sl.js": 250,
		"./sq": 251,
		"./sq.js": 251,
		"./sr": 252,
		"./sr-cyrl": 253,
		"./sr-cyrl.js": 253,
		"./sr.js": 252,
		"./sv": 254,
		"./sv.js": 254,
		"./ta": 255,
		"./ta.js": 255,
		"./th": 256,
		"./th.js": 256,
		"./tl-ph": 257,
		"./tl-ph.js": 257,
		"./tr": 258,
		"./tr.js": 258,
		"./tzl": 259,
		"./tzl.js": 259,
		"./tzm": 260,
		"./tzm-latn": 261,
		"./tzm-latn.js": 261,
		"./tzm.js": 260,
		"./uk": 262,
		"./uk.js": 262,
		"./uz": 263,
		"./uz.js": 263,
		"./vi": 264,
		"./vi.js": 264,
		"./zh-cn": 265,
		"./zh-cn.js": 265,
		"./zh-tw": 266,
		"./zh-tw.js": 266
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 181;


/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : afrikaans (af)
	//! author : Werner Mollentze : https://github.com/wernerm

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var af = moment.defineLocale('af', {
	        months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
	        weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
	        weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
	        meridiemParse: /vm|nm/i,
	        isPM : function (input) {
	            return /^nm$/i.test(input);
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower ? 'vm' : 'VM';
	            } else {
	                return isLower ? 'nm' : 'NM';
	            }
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Vandag om] LT',
	            nextDay : '[Môre om] LT',
	            nextWeek : 'dddd [om] LT',
	            lastDay : '[Gister om] LT',
	            lastWeek : '[Laas] dddd [om] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'oor %s',
	            past : '%s gelede',
	            s : '\'n paar sekondes',
	            m : '\'n minuut',
	            mm : '%d minute',
	            h : '\'n uur',
	            hh : '%d ure',
	            d : '\'n dag',
	            dd : '%d dae',
	            M : '\'n maand',
	            MM : '%d maande',
	            y : '\'n jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
	        },
	        week : {
	            dow : 1, // Maandag is die eerste dag van die week.
	            doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
	        }
	    });

	    return af;

	}));

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! Locale: Arabic (ar)
	//! Author: Abdel Said: https://github.com/abdelsaid
	//! Changes in months, weekdays: Ahmed Elkhatib
	//! Native plural forms: forabi https://github.com/forabi

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    }, pluralForm = function (n) {
	        return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
	    }, plurals = {
	        s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
	        m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
	        h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
	        d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
	        M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
	        y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
	    }, pluralize = function (u) {
	        return function (number, withoutSuffix, string, isFuture) {
	            var f = pluralForm(number),
	                str = plurals[u][pluralForm(number)];
	            if (f === 2) {
	                str = str[withoutSuffix ? 0 : 1];
	            }
	            return str.replace(/%d/i, number);
	        };
	    }, months = [
	        'كانون الثاني يناير',
	        'شباط فبراير',
	        'آذار مارس',
	        'نيسان أبريل',
	        'أيار مايو',
	        'حزيران يونيو',
	        'تموز يوليو',
	        'آب أغسطس',
	        'أيلول سبتمبر',
	        'تشرين الأول أكتوبر',
	        'تشرين الثاني نوفمبر',
	        'كانون الأول ديسمبر'
	    ];

	    var ar = moment.defineLocale('ar', {
	        months : months,
	        monthsShort : months,
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'D/\u200FM/\u200FYYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم عند الساعة] LT',
	            nextDay: '[غدًا عند الساعة] LT',
	            nextWeek: 'dddd [عند الساعة] LT',
	            lastDay: '[أمس عند الساعة] LT',
	            lastWeek: 'dddd [عند الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'بعد %s',
	            past : 'منذ %s',
	            s : pluralize('s'),
	            m : pluralize('m'),
	            mm : pluralize('m'),
	            h : pluralize('h'),
	            hh : pluralize('h'),
	            d : pluralize('d'),
	            dd : pluralize('d'),
	            M : pluralize('M'),
	            MM : pluralize('M'),
	            y : pluralize('y'),
	            yy : pluralize('y')
	        },
	        preparse: function (string) {
	            return string.replace(/\u200f/g, '').replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar;

	}));

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Moroccan Arabic (ar-ma)
	//! author : ElFadili Yassine : https://github.com/ElFadiliY
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_ma = moment.defineLocale('ar-ma', {
	        months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
	        weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_ma;

	}));

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Arabic Saudi Arabia (ar-sa)
	//! author : Suhail Alkowaileet : https://github.com/xsoh

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '١',
	        '2': '٢',
	        '3': '٣',
	        '4': '٤',
	        '5': '٥',
	        '6': '٦',
	        '7': '٧',
	        '8': '٨',
	        '9': '٩',
	        '0': '٠'
	    }, numberMap = {
	        '١': '1',
	        '٢': '2',
	        '٣': '3',
	        '٤': '4',
	        '٥': '5',
	        '٦': '6',
	        '٧': '7',
	        '٨': '8',
	        '٩': '9',
	        '٠': '0'
	    };

	    var ar_sa = moment.defineLocale('ar-sa', {
	        months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /ص|م/,
	        isPM : function (input) {
	            return 'م' === input;
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ص';
	            } else {
	                return 'م';
	            }
	        },
	        calendar : {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'في %s',
	            past : 'منذ %s',
	            s : 'ثوان',
	            m : 'دقيقة',
	            mm : '%d دقائق',
	            h : 'ساعة',
	            hh : '%d ساعات',
	            d : 'يوم',
	            dd : '%d أيام',
	            M : 'شهر',
	            MM : '%d أشهر',
	            y : 'سنة',
	            yy : '%d سنوات'
	        },
	        preparse: function (string) {
	            return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ar_sa;

	}));

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale  : Tunisian Arabic (ar-tn)

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ar_tn = moment.defineLocale('ar-tn', {
	        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
	        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
	        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
	        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[اليوم على الساعة] LT',
	            nextDay: '[غدا على الساعة] LT',
	            nextWeek: 'dddd [على الساعة] LT',
	            lastDay: '[أمس على الساعة] LT',
	            lastWeek: 'dddd [على الساعة] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'في %s',
	            past: 'منذ %s',
	            s: 'ثوان',
	            m: 'دقيقة',
	            mm: '%d دقائق',
	            h: 'ساعة',
	            hh: '%d ساعات',
	            d: 'يوم',
	            dd: '%d أيام',
	            M: 'شهر',
	            MM: '%d أشهر',
	            y: 'سنة',
	            yy: '%d سنوات'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ar_tn;

	}));

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : azerbaijani (az)
	//! author : topchiyev : https://github.com/topchiyev

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '-inci',
	        5: '-inci',
	        8: '-inci',
	        70: '-inci',
	        80: '-inci',
	        2: '-nci',
	        7: '-nci',
	        20: '-nci',
	        50: '-nci',
	        3: '-üncü',
	        4: '-üncü',
	        100: '-üncü',
	        6: '-ncı',
	        9: '-uncu',
	        10: '-uncu',
	        30: '-uncu',
	        60: '-ıncı',
	        90: '-ıncı'
	    };

	    var az = moment.defineLocale('az', {
	        months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
	        monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
	        weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
	        weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
	        weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[sabah saat] LT',
	            nextWeek : '[gələn həftə] dddd [saat] LT',
	            lastDay : '[dünən] LT',
	            lastWeek : '[keçən həftə] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s əvvəl',
	            s : 'birneçə saniyyə',
	            m : 'bir dəqiqə',
	            mm : '%d dəqiqə',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir il',
	            yy : '%d il'
	        },
	        meridiemParse: /gecə|səhər|gündüz|axşam/,
	        isPM : function (input) {
	            return /^(gündüz|axşam)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'gecə';
	            } else if (hour < 12) {
	                return 'səhər';
	            } else if (hour < 17) {
	                return 'gündüz';
	            } else {
	                return 'axşam';
	            }
	        },
	        ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '-ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return az;

	}));

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : belarusian (be)
	//! author : Dmitry Demidov : https://github.com/demidov91
	//! author: Praleska: http://praleska.pro/
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
	            'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
	            'dd': 'дзень_дні_дзён',
	            'MM': 'месяц_месяцы_месяцаў',
	            'yy': 'год_гады_гадоў'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвіліна' : 'хвіліну';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'гадзіна' : 'гадзіну';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_'),
	            'accusative': 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
	            'accusative': 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var be = moment.defineLocale('be', {
	        months : monthsCaseReplace,
	        monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сёння ў] LT',
	            nextDay: '[Заўтра ў] LT',
	            lastDay: '[Учора ў] LT',
	            nextWeek: function () {
	                return '[У] dddd [ў] LT';
	            },
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return '[У мінулую] dddd [ў] LT';
	                case 1:
	                case 2:
	                case 4:
	                    return '[У мінулы] dddd [ў] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'праз %s',
	            past : '%s таму',
	            s : 'некалькі секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithPlural,
	            hh : relativeTimeWithPlural,
	            d : 'дзень',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночы|раніцы|дня|вечара/,
	        isPM : function (input) {
	            return /^(дня|вечара)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночы';
	            } else if (hour < 12) {
	                return 'раніцы';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечара';
	            }
	        },
	        ordinalParse: /\d{1,2}-(і|ы|га)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
	            case 'D':
	                return number + '-га';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return be;

	}));

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bulgarian (bg)
	//! author : Krasen Borisov : https://github.com/kraz

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var bg = moment.defineLocale('bg', {
	        months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Днес в] LT',
	            nextDay : '[Утре в] LT',
	            nextWeek : 'dddd [в] LT',
	            lastDay : '[Вчера в] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[В изминалата] dddd [в] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[В изминалия] dddd [в] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'след %s',
	            past : 'преди %s',
	            s : 'няколко секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дни',
	            M : 'месец',
	            MM : '%d месеца',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bg;

	}));

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bengali (bn)
	//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '১',
	        '2': '২',
	        '3': '৩',
	        '4': '৪',
	        '5': '৫',
	        '6': '৬',
	        '7': '৭',
	        '8': '৮',
	        '9': '৯',
	        '0': '০'
	    },
	    numberMap = {
	        '১': '1',
	        '২': '2',
	        '৩': '3',
	        '৪': '4',
	        '৫': '5',
	        '৬': '6',
	        '৭': '7',
	        '৮': '8',
	        '৯': '9',
	        '০': '0'
	    };

	    var bn = moment.defineLocale('bn', {
	        months : 'জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
	        monthsShort : 'জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্'.split('_'),
	        weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার'.split('_'),
	        weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি'.split('_'),
	        weekdaysMin : 'রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm সময়',
	            LTS : 'A h:mm:ss সময়',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm সময়',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
	        },
	        calendar : {
	            sameDay : '[আজ] LT',
	            nextDay : '[আগামীকাল] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[গতকাল] LT',
	            lastWeek : '[গত] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s পরে',
	            past : '%s আগে',
	            s : 'কএক সেকেন্ড',
	            m : 'এক মিনিট',
	            mm : '%d মিনিট',
	            h : 'এক ঘন্টা',
	            hh : '%d ঘন্টা',
	            d : 'এক দিন',
	            dd : '%d দিন',
	            M : 'এক মাস',
	            MM : '%d মাস',
	            y : 'এক বছর',
	            yy : '%d বছর'
	        },
	        preparse: function (string) {
	            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /রাত|সকাল|দুপুর|বিকেল|রাত/,
	        isPM: function (input) {
	            return /^(দুপুর|বিকেল|রাত)$/.test(input);
	        },
	        //Bengali is a vast language its spoken
	        //in different forms in various parts of the world.
	        //I have just generalized with most common one used
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'রাত';
	            } else if (hour < 10) {
	                return 'সকাল';
	            } else if (hour < 17) {
	                return 'দুপুর';
	            } else if (hour < 20) {
	                return 'বিকেল';
	            } else {
	                return 'রাত';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bn;

	}));

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tibetan (bo)
	//! author : Thupten N. Chakrishar : https://github.com/vajradog

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '༡',
	        '2': '༢',
	        '3': '༣',
	        '4': '༤',
	        '5': '༥',
	        '6': '༦',
	        '7': '༧',
	        '8': '༨',
	        '9': '༩',
	        '0': '༠'
	    },
	    numberMap = {
	        '༡': '1',
	        '༢': '2',
	        '༣': '3',
	        '༤': '4',
	        '༥': '5',
	        '༦': '6',
	        '༧': '7',
	        '༨': '8',
	        '༩': '9',
	        '༠': '0'
	    };

	    var bo = moment.defineLocale('bo', {
	        months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
	        weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
	        weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm',
	            LTS : 'A h:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm'
	        },
	        calendar : {
	            sameDay : '[དི་རིང] LT',
	            nextDay : '[སང་ཉིན] LT',
	            nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
	            lastDay : '[ཁ་སང] LT',
	            lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s ལ་',
	            past : '%s སྔན་ལ',
	            s : 'ལམ་སང',
	            m : 'སྐར་མ་གཅིག',
	            mm : '%d སྐར་མ',
	            h : 'ཆུ་ཚོད་གཅིག',
	            hh : '%d ཆུ་ཚོད',
	            d : 'ཉིན་གཅིག',
	            dd : '%d ཉིན་',
	            M : 'ཟླ་བ་གཅིག',
	            MM : '%d ཟླ་བ',
	            y : 'ལོ་གཅིག',
	            yy : '%d ལོ'
	        },
	        preparse: function (string) {
	            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
	        isPM: function (input) {
	            return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'མཚན་མོ';
	            } else if (hour < 10) {
	                return 'ཞོགས་ཀས';
	            } else if (hour < 17) {
	                return 'ཉིན་གུང';
	            } else if (hour < 20) {
	                return 'དགོང་དག';
	            } else {
	                return 'མཚན་མོ';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bo;

	}));

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : breton (br)
	//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithMutation(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'munutenn',
	            'MM': 'miz',
	            'dd': 'devezh'
	        };
	        return number + ' ' + mutation(format[key], number);
	    }
	    function specialMutationForYears(number) {
	        switch (lastNumber(number)) {
	        case 1:
	        case 3:
	        case 4:
	        case 5:
	        case 9:
	            return number + ' bloaz';
	        default:
	            return number + ' vloaz';
	        }
	    }
	    function lastNumber(number) {
	        if (number > 9) {
	            return lastNumber(number % 10);
	        }
	        return number;
	    }
	    function mutation(text, number) {
	        if (number === 2) {
	            return softMutation(text);
	        }
	        return text;
	    }
	    function softMutation(text) {
	        var mutationTable = {
	            'm': 'v',
	            'b': 'v',
	            'd': 'z'
	        };
	        if (mutationTable[text.charAt(0)] === undefined) {
	            return text;
	        }
	        return mutationTable[text.charAt(0)] + text.substring(1);
	    }

	    var br = moment.defineLocale('br', {
	        months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
	        monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
	        weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
	        weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
	        weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h[e]mm A',
	            LTS : 'h[e]mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D [a viz] MMMM YYYY',
	            LLL : 'D [a viz] MMMM YYYY h[e]mm A',
	            LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
	        },
	        calendar : {
	            sameDay : '[Hiziv da] LT',
	            nextDay : '[Warc\'hoazh da] LT',
	            nextWeek : 'dddd [da] LT',
	            lastDay : '[Dec\'h da] LT',
	            lastWeek : 'dddd [paset da] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'a-benn %s',
	            past : '%s \'zo',
	            s : 'un nebeud segondennoù',
	            m : 'ur vunutenn',
	            mm : relativeTimeWithMutation,
	            h : 'un eur',
	            hh : '%d eur',
	            d : 'un devezh',
	            dd : relativeTimeWithMutation,
	            M : 'ur miz',
	            MM : relativeTimeWithMutation,
	            y : 'ur bloaz',
	            yy : specialMutationForYears
	        },
	        ordinalParse: /\d{1,2}(añ|vet)/,
	        ordinal : function (number) {
	            var output = (number === 1) ? 'añ' : 'vet';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return br;

	}));

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : bosnian (bs)
	//! author : Nedim Cholich : https://github.com/frontyard
	//! based on (hr) translation by Bojan Marković

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var bs = moment.defineLocale('bs', {
	        months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return bs;

	}));

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : catalan (ca)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ca = moment.defineLocale('ca', {
	        months : 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
	        monthsShort : 'gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.'.split('_'),
	        weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
	        weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
	        weekdaysMin : 'Dg_Dl_Dt_Dc_Dj_Dv_Ds'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'LT:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextDay : function () {
	                return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastDay : function () {
	                return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'fa %s',
	            s : 'uns segons',
	            m : 'un minut',
	            mm : '%d minuts',
	            h : 'una hora',
	            hh : '%d hores',
	            d : 'un dia',
	            dd : '%d dies',
	            M : 'un mes',
	            MM : '%d mesos',
	            y : 'un any',
	            yy : '%d anys'
	        },
	        ordinalParse: /\d{1,2}(r|n|t|è|a)/,
	        ordinal : function (number, period) {
	            var output = (number === 1) ? 'r' :
	                (number === 2) ? 'n' :
	                (number === 3) ? 'r' :
	                (number === 4) ? 't' : 'è';
	            if (period === 'w' || period === 'W') {
	                output = 'a';
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return ca;

	}));

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : czech (cs)
	//! author : petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_'),
	        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minuty' : 'minut');
	            } else {
	                return result + 'minutami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodin');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dny' : 'dní');
	            } else {
	                return result + 'dny';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'měsíce' : 'měsíců');
	            } else {
	                return result + 'měsíci';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'let');
	            } else {
	                return result + 'lety';
	            }
	            break;
	        }
	    }

	    var cs = moment.defineLocale('cs', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
	        weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
	        weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes v] LT',
	            nextDay: '[zítra v] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v neděli v] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [v] LT';
	                case 3:
	                    return '[ve středu v] LT';
	                case 4:
	                    return '[ve čtvrtek v] LT';
	                case 5:
	                    return '[v pátek v] LT';
	                case 6:
	                    return '[v sobotu v] LT';
	                }
	            },
	            lastDay: '[včera v] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulou neděli v] LT';
	                case 1:
	                case 2:
	                    return '[minulé] dddd [v] LT';
	                case 3:
	                    return '[minulou středu v] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [v] LT';
	                case 6:
	                    return '[minulou sobotu v] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'před %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse : /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cs;

	}));

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chuvash (cv)
	//! author : Anatoly Mironov : https://github.com/mirontoli

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cv = moment.defineLocale('cv', {
	        months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
	        monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
	        weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
	        weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
	        weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
	            LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
	            LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
	        },
	        calendar : {
	            sameDay: '[Паян] LT [сехетре]',
	            nextDay: '[Ыран] LT [сехетре]',
	            lastDay: '[Ӗнер] LT [сехетре]',
	            nextWeek: '[Ҫитес] dddd LT [сехетре]',
	            lastWeek: '[Иртнӗ] dddd LT [сехетре]',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (output) {
	                var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
	                return output + affix;
	            },
	            past : '%s каялла',
	            s : 'пӗр-ик ҫеккунт',
	            m : 'пӗр минут',
	            mm : '%d минут',
	            h : 'пӗр сехет',
	            hh : '%d сехет',
	            d : 'пӗр кун',
	            dd : '%d кун',
	            M : 'пӗр уйӑх',
	            MM : '%d уйӑх',
	            y : 'пӗр ҫул',
	            yy : '%d ҫул'
	        },
	        ordinalParse: /\d{1,2}-мӗш/,
	        ordinal : '%d-мӗш',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return cv;

	}));

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Welsh (cy)
	//! author : Robert Allen

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var cy = moment.defineLocale('cy', {
	        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
	        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
	        weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
	        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
	        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
	        // time formats are the same as en-gb
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[Heddiw am] LT',
	            nextDay: '[Yfory am] LT',
	            nextWeek: 'dddd [am] LT',
	            lastDay: '[Ddoe am] LT',
	            lastWeek: 'dddd [diwethaf am] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'mewn %s',
	            past: '%s yn ôl',
	            s: 'ychydig eiliadau',
	            m: 'munud',
	            mm: '%d munud',
	            h: 'awr',
	            hh: '%d awr',
	            d: 'diwrnod',
	            dd: '%d diwrnod',
	            M: 'mis',
	            MM: '%d mis',
	            y: 'blwyddyn',
	            yy: '%d flynedd'
	        },
	        ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
	        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
	        ordinal: function (number) {
	            var b = number,
	                output = '',
	                lookup = [
	                    '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
	                    'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
	                ];
	            if (b > 20) {
	                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
	                    output = 'fed'; // not 30ain, 70ain or 90ain
	                } else {
	                    output = 'ain';
	                }
	            } else if (b > 0) {
	                output = lookup[b];
	            }
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return cy;

	}));

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : danish (da)
	//! author : Ulrik Nielsen : https://github.com/mrbase

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var da = moment.defineLocale('da', {
	        months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd [d.] D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[I dag kl.] LT',
	            nextDay : '[I morgen kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[I går kl.] LT',
	            lastWeek : '[sidste] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : '%s siden',
	            s : 'få sekunder',
	            m : 'et minut',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dage',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'et år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return da;

	}));

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : german (de)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de = moment.defineLocale('de', {
	        months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de;

	}));

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : austrian german (de-at)
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eine Minute', 'einer Minute'],
	            'h': ['eine Stunde', 'einer Stunde'],
	            'd': ['ein Tag', 'einem Tag'],
	            'dd': [number + ' Tage', number + ' Tagen'],
	            'M': ['ein Monat', 'einem Monat'],
	            'MM': [number + ' Monate', number + ' Monaten'],
	            'y': ['ein Jahr', 'einem Jahr'],
	            'yy': [number + ' Jahre', number + ' Jahren']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }

	    var de_at = moment.defineLocale('de-at', {
	        months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort : 'Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	        weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	        weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY HH:mm',
	            LLLL : 'dddd, D. MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Heute um] LT [Uhr]',
	            sameElse: 'L',
	            nextDay: '[Morgen um] LT [Uhr]',
	            nextWeek: 'dddd [um] LT [Uhr]',
	            lastDay: '[Gestern um] LT [Uhr]',
	            lastWeek: '[letzten] dddd [um] LT [Uhr]'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : 'vor %s',
	            s : 'ein paar Sekunden',
	            m : processRelativeTime,
	            mm : '%d Minuten',
	            h : processRelativeTime,
	            hh : '%d Stunden',
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return de_at;

	}));

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : modern greek (el)
	//! author : Aggelos Karalias : https://github.com/mehiel

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var el = moment.defineLocale('el', {
	        monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
	        monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
	        months : function (momentToFormat, format) {
	            if (/D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
	                return this._monthsGenitiveEl[momentToFormat.month()];
	            } else {
	                return this._monthsNominativeEl[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
	        weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
	        weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
	        weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'μμ' : 'ΜΜ';
	            } else {
	                return isLower ? 'πμ' : 'ΠΜ';
	            }
	        },
	        isPM : function (input) {
	            return ((input + '').toLowerCase()[0] === 'μ');
	        },
	        meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendarEl : {
	            sameDay : '[Σήμερα {}] LT',
	            nextDay : '[Αύριο {}] LT',
	            nextWeek : 'dddd [{}] LT',
	            lastDay : '[Χθες {}] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                    case 6:
	                        return '[το προηγούμενο] dddd [{}] LT';
	                    default:
	                        return '[την προηγούμενη] dddd [{}] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        calendar : function (key, mom) {
	            var output = this._calendarEl[key],
	                hours = mom && mom.hours();
	            if (typeof output === 'function') {
	                output = output.apply(mom);
	            }
	            return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
	        },
	        relativeTime : {
	            future : 'σε %s',
	            past : '%s πριν',
	            s : 'λίγα δευτερόλεπτα',
	            m : 'ένα λεπτό',
	            mm : '%d λεπτά',
	            h : 'μία ώρα',
	            hh : '%d ώρες',
	            d : 'μία μέρα',
	            dd : '%d μέρες',
	            M : 'ένας μήνας',
	            MM : '%d μήνες',
	            y : 'ένας χρόνος',
	            yy : '%d χρόνια'
	        },
	        ordinalParse: /\d{1,2}η/,
	        ordinal: '%dη',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4st is the first week of the year.
	        }
	    });

	    return el;

	}));

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : australian english (en-au)

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_au = moment.defineLocale('en-au', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_au;

	}));

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian english (en-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_ca = moment.defineLocale('en-ca', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM, YYYY',
	            LLL : 'D MMMM, YYYY h:mm A',
	            LLLL : 'dddd, D MMMM, YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        }
	    });

	    return en_ca;

	}));

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : great britain english (en-gb)
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var en_gb = moment.defineLocale('en-gb', {
	        months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	        weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	        weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	        weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Today at] LT',
	            nextDay : '[Tomorrow at] LT',
	            nextWeek : 'dddd [at] LT',
	            lastDay : '[Yesterday at] LT',
	            lastWeek : '[Last] dddd [at] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'in %s',
	            past : '%s ago',
	            s : 'a few seconds',
	            m : 'a minute',
	            mm : '%d minutes',
	            h : 'an hour',
	            hh : '%d hours',
	            d : 'a day',
	            dd : '%d days',
	            M : 'a month',
	            MM : '%d months',
	            y : 'a year',
	            yy : '%d years'
	        },
	        ordinalParse: /\d{1,2}(st|nd|rd|th)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'th' :
	                (b === 1) ? 'st' :
	                (b === 2) ? 'nd' :
	                (b === 3) ? 'rd' : 'th';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return en_gb;

	}));

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : esperanto (eo)
	//! author : Colin Dean : https://github.com/colindean
	//! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
	//!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eo = moment.defineLocale('eo', {
	        months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
	        weekdays : 'Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato'.split('_'),
	        weekdaysShort : 'Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Ĵa_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D[-an de] MMMM, YYYY',
	            LLL : 'D[-an de] MMMM, YYYY HH:mm',
	            LLLL : 'dddd, [la] D[-an de] MMMM, YYYY HH:mm'
	        },
	        meridiemParse: /[ap]\.t\.m/i,
	        isPM: function (input) {
	            return input.charAt(0).toLowerCase() === 'p';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'p.t.m.' : 'P.T.M.';
	            } else {
	                return isLower ? 'a.t.m.' : 'A.T.M.';
	            }
	        },
	        calendar : {
	            sameDay : '[Hodiaŭ je] LT',
	            nextDay : '[Morgaŭ je] LT',
	            nextWeek : 'dddd [je] LT',
	            lastDay : '[Hieraŭ je] LT',
	            lastWeek : '[pasinta] dddd [je] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'je %s',
	            past : 'antaŭ %s',
	            s : 'sekundoj',
	            m : 'minuto',
	            mm : '%d minutoj',
	            h : 'horo',
	            hh : '%d horoj',
	            d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
	            dd : '%d tagoj',
	            M : 'monato',
	            MM : '%d monatoj',
	            y : 'jaro',
	            yy : '%d jaroj'
	        },
	        ordinalParse: /\d{1,2}a/,
	        ordinal : '%da',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eo;

	}));

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : spanish (es)
	//! author : Julio Napurí : https://github.com/julionc

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortDot = 'Ene._Feb._Mar._Abr._May._Jun._Jul._Ago._Sep._Oct._Nov._Dic.'.split('_'),
	        monthsShort = 'Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic'.split('_');

	    var es = moment.defineLocale('es', {
	        months : 'Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShort[m.month()];
	            } else {
	                return monthsShortDot[m.month()];
	            }
	        },
	        weekdays : 'Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mié._Jue._Vie._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mi_Ju_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY H:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastDay : function () {
	                return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            lastWeek : function () {
	                return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'en %s',
	            past : 'hace %s',
	            s : 'unos segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'una hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un año',
	            yy : '%d años'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return es;

	}));

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : estonian (et)
	//! author : Henry Kehlmann : https://github.com/madhenry
	//! improvements : Illimar Tambek : https://github.com/ragulka

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
	            'm' : ['ühe minuti', 'üks minut'],
	            'mm': [number + ' minuti', number + ' minutit'],
	            'h' : ['ühe tunni', 'tund aega', 'üks tund'],
	            'hh': [number + ' tunni', number + ' tundi'],
	            'd' : ['ühe päeva', 'üks päev'],
	            'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
	            'MM': [number + ' kuu', number + ' kuud'],
	            'y' : ['ühe aasta', 'aasta', 'üks aasta'],
	            'yy': [number + ' aasta', number + ' aastat']
	        };
	        if (withoutSuffix) {
	            return format[key][2] ? format[key][2] : format[key][1];
	        }
	        return isFuture ? format[key][0] : format[key][1];
	    }

	    var et = moment.defineLocale('et', {
	        months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
	        monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
	        weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
	        weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
	        weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
	        longDateFormat : {
	            LT   : 'H:mm',
	            LTS : 'H:mm:ss',
	            L    : 'DD.MM.YYYY',
	            LL   : 'D. MMMM YYYY',
	            LLL  : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[Täna,] LT',
	            nextDay  : '[Homme,] LT',
	            nextWeek : '[Järgmine] dddd LT',
	            lastDay  : '[Eile,] LT',
	            lastWeek : '[Eelmine] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s pärast',
	            past   : '%s tagasi',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : '%d päeva',
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return et;

	}));

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : euskara (eu)
	//! author : Eneko Illarramendi : https://github.com/eillarra

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var eu = moment.defineLocale('eu', {
	        months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
	        monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
	        weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
	        weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
	        weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY[ko] MMMM[ren] D[a]',
	            LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
	            LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
	            l : 'YYYY-M-D',
	            ll : 'YYYY[ko] MMM D[a]',
	            lll : 'YYYY[ko] MMM D[a] HH:mm',
	            llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
	        },
	        calendar : {
	            sameDay : '[gaur] LT[etan]',
	            nextDay : '[bihar] LT[etan]',
	            nextWeek : 'dddd LT[etan]',
	            lastDay : '[atzo] LT[etan]',
	            lastWeek : '[aurreko] dddd LT[etan]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s barru',
	            past : 'duela %s',
	            s : 'segundo batzuk',
	            m : 'minutu bat',
	            mm : '%d minutu',
	            h : 'ordu bat',
	            hh : '%d ordu',
	            d : 'egun bat',
	            dd : '%d egun',
	            M : 'hilabete bat',
	            MM : '%d hilabete',
	            y : 'urte bat',
	            yy : '%d urte'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return eu;

	}));

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Persian (fa)
	//! author : Ebrahim Byagowi : https://github.com/ebraminio

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '۱',
	        '2': '۲',
	        '3': '۳',
	        '4': '۴',
	        '5': '۵',
	        '6': '۶',
	        '7': '۷',
	        '8': '۸',
	        '9': '۹',
	        '0': '۰'
	    }, numberMap = {
	        '۱': '1',
	        '۲': '2',
	        '۳': '3',
	        '۴': '4',
	        '۵': '5',
	        '۶': '6',
	        '۷': '7',
	        '۸': '8',
	        '۹': '9',
	        '۰': '0'
	    };

	    var fa = moment.defineLocale('fa', {
	        months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
	        weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
	        weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        meridiemParse: /قبل از ظهر|بعد از ظهر/,
	        isPM: function (input) {
	            return /بعد از ظهر/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'قبل از ظهر';
	            } else {
	                return 'بعد از ظهر';
	            }
	        },
	        calendar : {
	            sameDay : '[امروز ساعت] LT',
	            nextDay : '[فردا ساعت] LT',
	            nextWeek : 'dddd [ساعت] LT',
	            lastDay : '[دیروز ساعت] LT',
	            lastWeek : 'dddd [پیش] [ساعت] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'در %s',
	            past : '%s پیش',
	            s : 'چندین ثانیه',
	            m : 'یک دقیقه',
	            mm : '%d دقیقه',
	            h : 'یک ساعت',
	            hh : '%d ساعت',
	            d : 'یک روز',
	            dd : '%d روز',
	            M : 'یک ماه',
	            MM : '%d ماه',
	            y : 'یک سال',
	            yy : '%d سال'
	        },
	        preparse: function (string) {
	            return string.replace(/[۰-۹]/g, function (match) {
	                return numberMap[match];
	            }).replace(/،/g, ',');
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            }).replace(/,/g, '،');
	        },
	        ordinalParse: /\d{1,2}م/,
	        ordinal : '%dم',
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return fa;

	}));

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : finnish (fi)
	//! author : Tarmo Aidantausta : https://github.com/bleadof

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' '),
	        numbersFuture = [
	            'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
	            numbersPast[7], numbersPast[8], numbersPast[9]
	        ];
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = '';
	        switch (key) {
	        case 's':
	            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
	        case 'm':
	            return isFuture ? 'minuutin' : 'minuutti';
	        case 'mm':
	            result = isFuture ? 'minuutin' : 'minuuttia';
	            break;
	        case 'h':
	            return isFuture ? 'tunnin' : 'tunti';
	        case 'hh':
	            result = isFuture ? 'tunnin' : 'tuntia';
	            break;
	        case 'd':
	            return isFuture ? 'päivän' : 'päivä';
	        case 'dd':
	            result = isFuture ? 'päivän' : 'päivää';
	            break;
	        case 'M':
	            return isFuture ? 'kuukauden' : 'kuukausi';
	        case 'MM':
	            result = isFuture ? 'kuukauden' : 'kuukautta';
	            break;
	        case 'y':
	            return isFuture ? 'vuoden' : 'vuosi';
	        case 'yy':
	            result = isFuture ? 'vuoden' : 'vuotta';
	            break;
	        }
	        result = verbalNumber(number, isFuture) + ' ' + result;
	        return result;
	    }
	    function verbalNumber(number, isFuture) {
	        return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
	    }

	    var fi = moment.defineLocale('fi', {
	        months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
	        monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
	        weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
	        weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'Do MMMM[ta] YYYY',
	            LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
	            LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
	            l : 'D.M.YYYY',
	            ll : 'Do MMM YYYY',
	            lll : 'Do MMM YYYY, [klo] HH.mm',
	            llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
	        },
	        calendar : {
	            sameDay : '[tänään] [klo] LT',
	            nextDay : '[huomenna] [klo] LT',
	            nextWeek : 'dddd [klo] LT',
	            lastDay : '[eilen] [klo] LT',
	            lastWeek : '[viime] dddd[na] [klo] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s päästä',
	            past : '%s sitten',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fi;

	}));

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : faroese (fo)
	//! author : Ragnar Johannesen : https://github.com/ragnar123

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fo = moment.defineLocale('fo', {
	        months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
	        weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
	        weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D. MMMM, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Í dag kl.] LT',
	            nextDay : '[Í morgin kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[Í gjár kl.] LT',
	            lastWeek : '[síðstu] dddd [kl] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'um %s',
	            past : '%s síðani',
	            s : 'fá sekund',
	            m : 'ein minutt',
	            mm : '%d minuttir',
	            h : 'ein tími',
	            hh : '%d tímar',
	            d : 'ein dagur',
	            dd : '%d dagar',
	            M : 'ein mánaði',
	            MM : '%d mánaðir',
	            y : 'eitt ár',
	            yy : '%d ár'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fo;

	}));

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : french (fr)
	//! author : John Fischer : https://github.com/jfroffice

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr = moment.defineLocale('fr', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : '');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fr;

	}));

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : canadian french (fr-ca)
	//! author : Jonathan Abourbih : https://github.com/jonbca

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var fr_ca = moment.defineLocale('fr-ca', {
	        months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	        monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	        weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	        weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	        weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Aujourd\'hui à] LT',
	            nextDay: '[Demain à] LT',
	            nextWeek: 'dddd [à] LT',
	            lastDay: '[Hier à] LT',
	            lastWeek: 'dddd [dernier à] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dans %s',
	            past : 'il y a %s',
	            s : 'quelques secondes',
	            m : 'une minute',
	            mm : '%d minutes',
	            h : 'une heure',
	            hh : '%d heures',
	            d : 'un jour',
	            dd : '%d jours',
	            M : 'un mois',
	            MM : '%d mois',
	            y : 'un an',
	            yy : '%d ans'
	        },
	        ordinalParse: /\d{1,2}(er|e)/,
	        ordinal : function (number) {
	            return number + (number === 1 ? 'er' : 'e');
	        }
	    });

	    return fr_ca;

	}));

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : frisian (fy)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

	    var fy = moment.defineLocale('fy', {
	        months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
	        weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
	        weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[hjoed om] LT',
	            nextDay: '[moarn om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[juster om] LT',
	            lastWeek: '[ôfrûne] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'oer %s',
	            past : '%s lyn',
	            s : 'in pear sekonden',
	            m : 'ien minút',
	            mm : '%d minuten',
	            h : 'ien oere',
	            hh : '%d oeren',
	            d : 'ien dei',
	            dd : '%d dagen',
	            M : 'ien moanne',
	            MM : '%d moannen',
	            y : 'ien jier',
	            yy : '%d jierren'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return fy;

	}));

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : galician (gl)
	//! author : Juan G. Hurtado : https://github.com/juanghurtado

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var gl = moment.defineLocale('gl', {
	        months : 'Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro'.split('_'),
	        monthsShort : 'Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.'.split('_'),
	        weekdays : 'Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado'.split('_'),
	        weekdaysShort : 'Dom._Lun._Mar._Mér._Xov._Ven._Sáb.'.split('_'),
	        weekdaysMin : 'Do_Lu_Ma_Mé_Xo_Ve_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : function () {
	                return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextDay : function () {
	                return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
	            },
	            nextWeek : function () {
	                return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            lastDay : function () {
	                return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
	            },
	            lastWeek : function () {
	                return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (str) {
	                if (str === 'uns segundos') {
	                    return 'nuns segundos';
	                }
	                return 'en ' + str;
	            },
	            past : 'hai %s',
	            s : 'uns segundos',
	            m : 'un minuto',
	            mm : '%d minutos',
	            h : 'unha hora',
	            hh : '%d horas',
	            d : 'un día',
	            dd : '%d días',
	            M : 'un mes',
	            MM : '%d meses',
	            y : 'un ano',
	            yy : '%d anos'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return gl;

	}));

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Hebrew (he)
	//! author : Tomer Cohen : https://github.com/tomer
	//! author : Moshe Simantov : https://github.com/DevelopmentIL
	//! author : Tal Ater : https://github.com/TalAter

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var he = moment.defineLocale('he', {
	        months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
	        monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
	        weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
	        weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
	        weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [ב]MMMM YYYY',
	            LLL : 'D [ב]MMMM YYYY HH:mm',
	            LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
	            l : 'D/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[היום ב־]LT',
	            nextDay : '[מחר ב־]LT',
	            nextWeek : 'dddd [בשעה] LT',
	            lastDay : '[אתמול ב־]LT',
	            lastWeek : '[ביום] dddd [האחרון בשעה] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'בעוד %s',
	            past : 'לפני %s',
	            s : 'מספר שניות',
	            m : 'דקה',
	            mm : '%d דקות',
	            h : 'שעה',
	            hh : function (number) {
	                if (number === 2) {
	                    return 'שעתיים';
	                }
	                return number + ' שעות';
	            },
	            d : 'יום',
	            dd : function (number) {
	                if (number === 2) {
	                    return 'יומיים';
	                }
	                return number + ' ימים';
	            },
	            M : 'חודש',
	            MM : function (number) {
	                if (number === 2) {
	                    return 'חודשיים';
	                }
	                return number + ' חודשים';
	            },
	            y : 'שנה',
	            yy : function (number) {
	                if (number === 2) {
	                    return 'שנתיים';
	                } else if (number % 10 === 0 && number !== 10) {
	                    return number + ' שנה';
	                }
	                return number + ' שנים';
	            }
	        }
	    });

	    return he;

	}));

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hindi (hi)
	//! author : Mayank Singhal : https://github.com/mayanksinghal

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var hi = moment.defineLocale('hi', {
	        months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
	        monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm बजे',
	            LTS : 'A h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[कल] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[कल] LT',
	            lastWeek : '[पिछले] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s में',
	            past : '%s पहले',
	            s : 'कुछ ही क्षण',
	            m : 'एक मिनट',
	            mm : '%d मिनट',
	            h : 'एक घंटा',
	            hh : '%d घंटे',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महीने',
	            MM : '%d महीने',
	            y : 'एक वर्ष',
	            yy : '%d वर्ष'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        // Hindi notation for meridiems are quite fuzzy in practice. While there exists
	        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
	        meridiemParse: /रात|सुबह|दोपहर|शाम/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सुबह') {
	                return hour;
	            } else if (meridiem === 'दोपहर') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'शाम') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात';
	            } else if (hour < 10) {
	                return 'सुबह';
	            } else if (hour < 17) {
	                return 'दोपहर';
	            } else if (hour < 20) {
	                return 'शाम';
	            } else {
	                return 'रात';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hi;

	}));

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hrvatski (hr)
	//! author : Bojan Marković : https://github.com/bmarkovic

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
	        case 'mm':
	            if (number === 1) {
	                result += 'minuta';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'minute';
	            } else {
	                result += 'minuta';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'jedan sat' : 'jednog sata';
	        case 'hh':
	            if (number === 1) {
	                result += 'sat';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'sata';
	            } else {
	                result += 'sati';
	            }
	            return result;
	        case 'dd':
	            if (number === 1) {
	                result += 'dan';
	            } else {
	                result += 'dana';
	            }
	            return result;
	        case 'MM':
	            if (number === 1) {
	                result += 'mjesec';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'mjeseca';
	            } else {
	                result += 'mjeseci';
	            }
	            return result;
	        case 'yy':
	            if (number === 1) {
	                result += 'godina';
	            } else if (number === 2 || number === 3 || number === 4) {
	                result += 'godine';
	            } else {
	                result += 'godina';
	            }
	            return result;
	        }
	    }

	    var hr = moment.defineLocale('hr', {
	        months : 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_'),
	        monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
	        weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
	        weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
	        weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danas u] LT',
	            nextDay  : '[sutra u] LT',
	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[jučer u] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                    return '[prošlu] dddd [u] LT';
	                case 6:
	                    return '[prošle] [subote] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prošli] dddd [u] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'par sekundi',
	            m      : translate,
	            mm     : translate,
	            h      : translate,
	            hh     : translate,
	            d      : 'dan',
	            dd     : translate,
	            M      : 'mjesec',
	            MM     : translate,
	            y      : 'godinu',
	            yy     : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hr;

	}));

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : hungarian (hu)
	//! author : Adam Brunner : https://github.com/adambrunner

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
	    function translate(number, withoutSuffix, key, isFuture) {
	        var num = number,
	            suffix;
	        switch (key) {
	        case 's':
	            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
	        case 'm':
	            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'mm':
	            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
	        case 'h':
	            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'hh':
	            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
	        case 'd':
	            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'dd':
	            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
	        case 'M':
	            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'MM':
	            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
	        case 'y':
	            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
	        case 'yy':
	            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
	        }
	        return '';
	    }
	    function week(isFuture) {
	        return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
	    }

	    var hu = moment.defineLocale('hu', {
	        months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
	        monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
	        weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
	        weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
	        weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'YYYY.MM.DD.',
	            LL : 'YYYY. MMMM D.',
	            LLL : 'YYYY. MMMM D. H:mm',
	            LLLL : 'YYYY. MMMM D., dddd H:mm'
	        },
	        meridiemParse: /de|du/i,
	        isPM: function (input) {
	            return input.charAt(1).toLowerCase() === 'u';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 12) {
	                return isLower === true ? 'de' : 'DE';
	            } else {
	                return isLower === true ? 'du' : 'DU';
	            }
	        },
	        calendar : {
	            sameDay : '[ma] LT[-kor]',
	            nextDay : '[holnap] LT[-kor]',
	            nextWeek : function () {
	                return week.call(this, true);
	            },
	            lastDay : '[tegnap] LT[-kor]',
	            lastWeek : function () {
	                return week.call(this, false);
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s múlva',
	            past : '%s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hu;

	}));

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Armenian (hy-am)
	//! author : Armendarabyan : https://github.com/armendarabyan

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_'),
	            'accusative': 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_');
	        return monthsShort[m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_');
	        return weekdays[m.day()];
	    }

	    var hy_am = moment.defineLocale('hy-am', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY թ.',
	            LLL : 'D MMMM YYYY թ., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
	        },
	        calendar : {
	            sameDay: '[այսօր] LT',
	            nextDay: '[վաղը] LT',
	            lastDay: '[երեկ] LT',
	            nextWeek: function () {
	                return 'dddd [օրը ժամը] LT';
	            },
	            lastWeek: function () {
	                return '[անցած] dddd [օրը ժամը] LT';
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s հետո',
	            past : '%s առաջ',
	            s : 'մի քանի վայրկյան',
	            m : 'րոպե',
	            mm : '%d րոպե',
	            h : 'ժամ',
	            hh : '%d ժամ',
	            d : 'օր',
	            dd : '%d օր',
	            M : 'ամիս',
	            MM : '%d ամիս',
	            y : 'տարի',
	            yy : '%d տարի'
	        },
	        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
	        isPM: function (input) {
	            return /^(ցերեկվա|երեկոյան)$/.test(input);
	        },
	        meridiem : function (hour) {
	            if (hour < 4) {
	                return 'գիշերվա';
	            } else if (hour < 12) {
	                return 'առավոտվա';
	            } else if (hour < 17) {
	                return 'ցերեկվա';
	            } else {
	                return 'երեկոյան';
	            }
	        },
	        ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'DDD':
	            case 'w':
	            case 'W':
	            case 'DDDo':
	                if (number === 1) {
	                    return number + '-ին';
	                }
	                return number + '-րդ';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return hy_am;

	}));

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Indonesia (id)
	//! author : Mohammad Satrio Utomo : https://github.com/tyok
	//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var id = moment.defineLocale('id', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
	        weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|siang|sore|malam/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'siang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sore' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'siang';
	            } else if (hours < 19) {
	                return 'sore';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Besok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kemarin pukul] LT',
	            lastWeek : 'dddd [lalu pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lalu',
	            s : 'beberapa detik',
	            m : 'semenit',
	            mm : '%d menit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return id;

	}));

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : icelandic (is)
	//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(n) {
	        if (n % 100 === 11) {
	            return true;
	        } else if (n % 10 === 1) {
	            return false;
	        }
	        return true;
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
	        case 'm':
	            return withoutSuffix ? 'mínúta' : 'mínútu';
	        case 'mm':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
	            } else if (withoutSuffix) {
	                return result + 'mínúta';
	            }
	            return result + 'mínútu';
	        case 'hh':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
	            }
	            return result + 'klukkustund';
	        case 'd':
	            if (withoutSuffix) {
	                return 'dagur';
	            }
	            return isFuture ? 'dag' : 'degi';
	        case 'dd':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'dagar';
	                }
	                return result + (isFuture ? 'daga' : 'dögum');
	            } else if (withoutSuffix) {
	                return result + 'dagur';
	            }
	            return result + (isFuture ? 'dag' : 'degi');
	        case 'M':
	            if (withoutSuffix) {
	                return 'mánuður';
	            }
	            return isFuture ? 'mánuð' : 'mánuði';
	        case 'MM':
	            if (plural(number)) {
	                if (withoutSuffix) {
	                    return result + 'mánuðir';
	                }
	                return result + (isFuture ? 'mánuði' : 'mánuðum');
	            } else if (withoutSuffix) {
	                return result + 'mánuður';
	            }
	            return result + (isFuture ? 'mánuð' : 'mánuði');
	        case 'y':
	            return withoutSuffix || isFuture ? 'ár' : 'ári';
	        case 'yy':
	            if (plural(number)) {
	                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
	            }
	            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
	        }
	    }

	    var is = moment.defineLocale('is', {
	        months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
	        weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
	        weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
	        weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H:mm',
	            LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
	        },
	        calendar : {
	            sameDay : '[í dag kl.] LT',
	            nextDay : '[á morgun kl.] LT',
	            nextWeek : 'dddd [kl.] LT',
	            lastDay : '[í gær kl.] LT',
	            lastWeek : '[síðasta] dddd [kl.] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'eftir %s',
	            past : 'fyrir %s síðan',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : 'klukkustund',
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return is;

	}));

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : italian (it)
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var it = moment.defineLocale('it', {
	        months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	        monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	        weekdays : 'Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato'.split('_'),
	        weekdaysShort : 'Dom_Lun_Mar_Mer_Gio_Ven_Sab'.split('_'),
	        weekdaysMin : 'D_L_Ma_Me_G_V_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Oggi alle] LT',
	            nextDay: '[Domani alle] LT',
	            nextWeek: 'dddd [alle] LT',
	            lastDay: '[Ieri alle] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                    case 0:
	                        return '[la scorsa] dddd [alle] LT';
	                    default:
	                        return '[lo scorso] dddd [alle] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	            },
	            past : '%s fa',
	            s : 'alcuni secondi',
	            m : 'un minuto',
	            mm : '%d minuti',
	            h : 'un\'ora',
	            hh : '%d ore',
	            d : 'un giorno',
	            dd : '%d giorni',
	            M : 'un mese',
	            MM : '%d mesi',
	            y : 'un anno',
	            yy : '%d anni'
	        },
	        ordinalParse : /\d{1,2}º/,
	        ordinal: '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return it;

	}));

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : japanese (ja)
	//! author : LI Long : https://github.com/baryon

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ja = moment.defineLocale('ja', {
	        months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	        weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	        weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	        longDateFormat : {
	            LT : 'Ah時m分',
	            LTS : 'Ah時m分s秒',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY年M月D日',
	            LLL : 'YYYY年M月D日Ah時m分',
	            LLLL : 'YYYY年M月D日Ah時m分 dddd'
	        },
	        meridiemParse: /午前|午後/i,
	        isPM : function (input) {
	            return input === '午後';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return '午前';
	            } else {
	                return '午後';
	            }
	        },
	        calendar : {
	            sameDay : '[今日] LT',
	            nextDay : '[明日] LT',
	            nextWeek : '[来週]dddd LT',
	            lastDay : '[昨日] LT',
	            lastWeek : '[前週]dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s後',
	            past : '%s前',
	            s : '数秒',
	            m : '1分',
	            mm : '%d分',
	            h : '1時間',
	            hh : '%d時間',
	            d : '1日',
	            dd : '%d日',
	            M : '1ヶ月',
	            MM : '%dヶ月',
	            y : '1年',
	            yy : '%d年'
	        }
	    });

	    return ja;

	}));

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Boso Jowo (jv)
	//! author : Rony Lantip : https://github.com/lantip
	//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var jv = moment.defineLocale('jv', {
	        months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
	        monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
	        weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
	        weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
	        weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /enjing|siyang|sonten|ndalu/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'enjing') {
	                return hour;
	            } else if (meridiem === 'siyang') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'enjing';
	            } else if (hours < 15) {
	                return 'siyang';
	            } else if (hours < 19) {
	                return 'sonten';
	            } else {
	                return 'ndalu';
	            }
	        },
	        calendar : {
	            sameDay : '[Dinten puniko pukul] LT',
	            nextDay : '[Mbenjang pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kala wingi pukul] LT',
	            lastWeek : 'dddd [kepengker pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'wonten ing %s',
	            past : '%s ingkang kepengker',
	            s : 'sawetawis detik',
	            m : 'setunggal menit',
	            mm : '%d menit',
	            h : 'setunggal jam',
	            hh : '%d jam',
	            d : 'sedinten',
	            dd : '%d dinten',
	            M : 'sewulan',
	            MM : '%d wulan',
	            y : 'setaun',
	            yy : '%d taun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return jv;

	}));

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Georgian (ka)
	//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
	            'accusative': 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
	        },
	        nounCase = (/D[oD] *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
	            'accusative': 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_')
	        },
	        nounCase = (/(წინა|შემდეგ)/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ka = moment.defineLocale('ka', {
	        months : monthsCaseReplace,
	        monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
	        weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
	        longDateFormat : {
	            LT : 'h:mm A',
	            LTS : 'h:mm:ss A',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY h:mm A',
	            LLLL : 'dddd, D MMMM YYYY h:mm A'
	        },
	        calendar : {
	            sameDay : '[დღეს] LT[-ზე]',
	            nextDay : '[ხვალ] LT[-ზე]',
	            lastDay : '[გუშინ] LT[-ზე]',
	            nextWeek : '[შემდეგ] dddd LT[-ზე]',
	            lastWeek : '[წინა] dddd LT-ზე',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : function (s) {
	                return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
	                    s.replace(/ი$/, 'ში') :
	                    s + 'ში';
	            },
	            past : function (s) {
	                if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
	                    return s.replace(/(ი|ე)$/, 'ის წინ');
	                }
	                if ((/წელი/).test(s)) {
	                    return s.replace(/წელი$/, 'წლის წინ');
	                }
	            },
	            s : 'რამდენიმე წამი',
	            m : 'წუთი',
	            mm : '%d წუთი',
	            h : 'საათი',
	            hh : '%d საათი',
	            d : 'დღე',
	            dd : '%d დღე',
	            M : 'თვე',
	            MM : '%d თვე',
	            y : 'წელი',
	            yy : '%d წელი'
	        },
	        ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
	        ordinal : function (number) {
	            if (number === 0) {
	                return number;
	            }
	            if (number === 1) {
	                return number + '-ლი';
	            }
	            if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
	                return 'მე-' + number;
	            }
	            return number + '-ე';
	        },
	        week : {
	            dow : 1,
	            doy : 7
	        }
	    });

	    return ka;

	}));

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : khmer (km)
	//! author : Kruy Vanna : https://github.com/kruyvanna

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var km = moment.defineLocale('km', {
	        months: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        monthsShort: 'មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
	        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ថ្ងៃនៈ ម៉ោង] LT',
	            nextDay: '[ស្អែក ម៉ោង] LT',
	            nextWeek: 'dddd [ម៉ោង] LT',
	            lastDay: '[ម្សិលមិញ ម៉ោង] LT',
	            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: '%sទៀត',
	            past: '%sមុន',
	            s: 'ប៉ុន្មានវិនាទី',
	            m: 'មួយនាទី',
	            mm: '%d នាទី',
	            h: 'មួយម៉ោង',
	            hh: '%d ម៉ោង',
	            d: 'មួយថ្ងៃ',
	            dd: '%d ថ្ងៃ',
	            M: 'មួយខែ',
	            MM: '%d ខែ',
	            y: 'មួយឆ្នាំ',
	            yy: '%d ឆ្នាំ'
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return km;

	}));

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : korean (ko)
	//!
	//! authors
	//!
	//! - Kyungwook, Park : https://github.com/kyungw00k
	//! - Jeeeyul Lee <jeeeyul@gmail.com>

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ko = moment.defineLocale('ko', {
	        months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
	        weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
	        weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
	        weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
	        longDateFormat : {
	            LT : 'A h시 m분',
	            LTS : 'A h시 m분 s초',
	            L : 'YYYY.MM.DD',
	            LL : 'YYYY년 MMMM D일',
	            LLL : 'YYYY년 MMMM D일 A h시 m분',
	            LLLL : 'YYYY년 MMMM D일 dddd A h시 m분'
	        },
	        calendar : {
	            sameDay : '오늘 LT',
	            nextDay : '내일 LT',
	            nextWeek : 'dddd LT',
	            lastDay : '어제 LT',
	            lastWeek : '지난주 dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s 후',
	            past : '%s 전',
	            s : '몇초',
	            ss : '%d초',
	            m : '일분',
	            mm : '%d분',
	            h : '한시간',
	            hh : '%d시간',
	            d : '하루',
	            dd : '%d일',
	            M : '한달',
	            MM : '%d달',
	            y : '일년',
	            yy : '%d년'
	        },
	        ordinalParse : /\d{1,2}일/,
	        ordinal : '%d일',
	        meridiemParse : /오전|오후/,
	        isPM : function (token) {
	            return token === '오후';
	        },
	        meridiem : function (hour, minute, isUpper) {
	            return hour < 12 ? '오전' : '오후';
	        }
	    });

	    return ko;

	}));

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Luxembourgish (lb)
	//! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            'm': ['eng Minutt', 'enger Minutt'],
	            'h': ['eng Stonn', 'enger Stonn'],
	            'd': ['een Dag', 'engem Dag'],
	            'M': ['ee Mount', 'engem Mount'],
	            'y': ['ee Joer', 'engem Joer']
	        };
	        return withoutSuffix ? format[key][0] : format[key][1];
	    }
	    function processFutureTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'a ' + string;
	        }
	        return 'an ' + string;
	    }
	    function processPastTime(string) {
	        var number = string.substr(0, string.indexOf(' '));
	        if (eifelerRegelAppliesToNumber(number)) {
	            return 'viru ' + string;
	        }
	        return 'virun ' + string;
	    }
	    /**
	     * Returns true if the word before the given number loses the '-n' ending.
	     * e.g. 'an 10 Deeg' but 'a 5 Deeg'
	     *
	     * @param number {integer}
	     * @returns {boolean}
	     */
	    function eifelerRegelAppliesToNumber(number) {
	        number = parseInt(number, 10);
	        if (isNaN(number)) {
	            return false;
	        }
	        if (number < 0) {
	            // Negative Number --> always true
	            return true;
	        } else if (number < 10) {
	            // Only 1 digit
	            if (4 <= number && number <= 7) {
	                return true;
	            }
	            return false;
	        } else if (number < 100) {
	            // 2 digits
	            var lastDigit = number % 10, firstDigit = number / 10;
	            if (lastDigit === 0) {
	                return eifelerRegelAppliesToNumber(firstDigit);
	            }
	            return eifelerRegelAppliesToNumber(lastDigit);
	        } else if (number < 10000) {
	            // 3 or 4 digits --> recursively check first digit
	            while (number >= 10) {
	                number = number / 10;
	            }
	            return eifelerRegelAppliesToNumber(number);
	        } else {
	            // Anything larger than 4 digits: recursively check first n-3 digits
	            number = number / 1000;
	            return eifelerRegelAppliesToNumber(number);
	        }
	    }

	    var lb = moment.defineLocale('lb', {
	        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	        monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
	        weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
	        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
	        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
	        longDateFormat: {
	            LT: 'H:mm [Auer]',
	            LTS: 'H:mm:ss [Auer]',
	            L: 'DD.MM.YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm [Auer]',
	            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
	        },
	        calendar: {
	            sameDay: '[Haut um] LT',
	            sameElse: 'L',
	            nextDay: '[Muer um] LT',
	            nextWeek: 'dddd [um] LT',
	            lastDay: '[Gëschter um] LT',
	            lastWeek: function () {
	                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
	                switch (this.day()) {
	                    case 2:
	                    case 4:
	                        return '[Leschten] dddd [um] LT';
	                    default:
	                        return '[Leschte] dddd [um] LT';
	                }
	            }
	        },
	        relativeTime : {
	            future : processFutureTime,
	            past : processPastTime,
	            s : 'e puer Sekonnen',
	            m : processRelativeTime,
	            mm : '%d Minutten',
	            h : processRelativeTime,
	            hh : '%d Stonnen',
	            d : processRelativeTime,
	            dd : '%d Deeg',
	            M : processRelativeTime,
	            MM : '%d Méint',
	            y : processRelativeTime,
	            yy : '%d Joer'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal: '%d.',
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lb;

	}));

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Lithuanian (lt)
	//! author : Mindaugas Mozūras : https://github.com/mmozuras

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm' : 'minutė_minutės_minutę',
	        'mm': 'minutės_minučių_minutes',
	        'h' : 'valanda_valandos_valandą',
	        'hh': 'valandos_valandų_valandas',
	        'd' : 'diena_dienos_dieną',
	        'dd': 'dienos_dienų_dienas',
	        'M' : 'mėnuo_mėnesio_mėnesį',
	        'MM': 'mėnesiai_mėnesių_mėnesius',
	        'y' : 'metai_metų_metus',
	        'yy': 'metai_metų_metus'
	    },
	    weekDays = 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_');
	    function translateSeconds(number, withoutSuffix, key, isFuture) {
	        if (withoutSuffix) {
	            return 'kelios sekundės';
	        } else {
	            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	                'nominative': 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
	                'accusative': 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_')
	            },
	            nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	                'accusative' :
	                'nominative';
	        return months[nounCase][m.month()];
	    }
	    function translateSingular(number, withoutSuffix, key, isFuture) {
	        return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
	    }
	    function special(number) {
	        return number % 10 === 0 || (number > 10 && number < 20);
	    }
	    function forms(key) {
	        return units[key].split('_');
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        if (number === 1) {
	            return result + translateSingular(number, withoutSuffix, key[0], isFuture);
	        } else if (withoutSuffix) {
	            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
	        } else {
	            if (isFuture) {
	                return result + forms(key)[1];
	            } else {
	                return result + (special(number) ? forms(key)[1] : forms(key)[2]);
	            }
	        }
	    }
	    function relativeWeekDay(moment, format) {
	        var nominative = format.indexOf('dddd HH:mm') === -1,
	            weekDay = weekDays[moment.day()];
	        return nominative ? weekDay : weekDay.substring(0, weekDay.length - 2) + 'į';
	    }

	    var lt = moment.defineLocale('lt', {
	        months : monthsCaseReplace,
	        monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
	        weekdays : relativeWeekDay,
	        weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
	        weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY [m.] MMMM D [d.]',
	            LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY [m.] MMMM D [d.]',
	            lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
	            llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
	        },
	        calendar : {
	            sameDay : '[Šiandien] LT',
	            nextDay : '[Rytoj] LT',
	            nextWeek : 'dddd LT',
	            lastDay : '[Vakar] LT',
	            lastWeek : '[Praėjusį] dddd LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'po %s',
	            past : 'prieš %s',
	            s : translateSeconds,
	            m : translateSingular,
	            mm : translate,
	            h : translateSingular,
	            hh : translate,
	            d : translateSingular,
	            dd : translate,
	            M : translateSingular,
	            MM : translate,
	            y : translateSingular,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}-oji/,
	        ordinal : function (number) {
	            return number + '-oji';
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lt;

	}));

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : latvian (lv)
	//! author : Kristaps Karlsons : https://github.com/skakri
	//! author : Jānis Elmeris : https://github.com/JanisE

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var units = {
	        'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
	        'h': 'stundas_stundām_stunda_stundas'.split('_'),
	        'hh': 'stundas_stundām_stunda_stundas'.split('_'),
	        'd': 'dienas_dienām_diena_dienas'.split('_'),
	        'dd': 'dienas_dienām_diena_dienas'.split('_'),
	        'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
	        'y': 'gada_gadiem_gads_gadi'.split('_'),
	        'yy': 'gada_gadiem_gads_gadi'.split('_')
	    };
	    /**
	     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
	     */
	    function format(forms, number, withoutSuffix) {
	        if (withoutSuffix) {
	            // E.g. "21 minūte", "3 minūtes".
	            return number % 10 === 1 && number !== 11 ? forms[2] : forms[3];
	        } else {
	            // E.g. "21 minūtes" as in "pēc 21 minūtes".
	            // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
	            return number % 10 === 1 && number !== 11 ? forms[0] : forms[1];
	        }
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        return number + ' ' + format(units[key], number, withoutSuffix);
	    }
	    function relativeTimeWithSingular(number, withoutSuffix, key) {
	        return format(units[key], number, withoutSuffix);
	    }
	    function relativeSeconds(number, withoutSuffix) {
	        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
	    }

	    var lv = moment.defineLocale('lv', {
	        months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
	        weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY.',
	            LL : 'YYYY. [gada] D. MMMM',
	            LLL : 'YYYY. [gada] D. MMMM, HH:mm',
	            LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
	        },
	        calendar : {
	            sameDay : '[Šodien pulksten] LT',
	            nextDay : '[Rīt pulksten] LT',
	            nextWeek : 'dddd [pulksten] LT',
	            lastDay : '[Vakar pulksten] LT',
	            lastWeek : '[Pagājušā] dddd [pulksten] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'pēc %s',
	            past : 'pirms %s',
	            s : relativeSeconds,
	            m : relativeTimeWithSingular,
	            mm : relativeTimeWithPlural,
	            h : relativeTimeWithSingular,
	            hh : relativeTimeWithPlural,
	            d : relativeTimeWithSingular,
	            dd : relativeTimeWithPlural,
	            M : relativeTimeWithSingular,
	            MM : relativeTimeWithPlural,
	            y : relativeTimeWithSingular,
	            yy : relativeTimeWithPlural
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return lv;

	}));

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Montenegrin (me)
	//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jednog minuta'],
	            mm: ['minut', 'minuta', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mjesec', 'mjeseca', 'mjeseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var me = moment.defineLocale('me', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedjelja', 'ponedjeljak', 'utorak', 'srijeda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sri.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sjutra u] LT',

	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedjelju] [u] LT';
	                case 3:
	                    return '[u] [srijedu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedjelje] [u] LT',
	                    '[prošlog] [ponedjeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srijede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'prije %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mjesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return me;

	}));

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : macedonian (mk)
	//! author : Borislav Mickov : https://github.com/B0k0

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var mk = moment.defineLocale('mk', {
	        months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
	        monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
	        weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
	        weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
	        weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'D.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay : '[Денес во] LT',
	            nextDay : '[Утре во] LT',
	            nextWeek : 'dddd [во] LT',
	            lastDay : '[Вчера во] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 6:
	                    return '[Во изминатата] dddd [во] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[Во изминатиот] dddd [во] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'после %s',
	            past : 'пред %s',
	            s : 'неколку секунди',
	            m : 'минута',
	            mm : '%d минути',
	            h : 'час',
	            hh : '%d часа',
	            d : 'ден',
	            dd : '%d дена',
	            M : 'месец',
	            MM : '%d месеци',
	            y : 'година',
	            yy : '%d години'
	        },
	        ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
	        ordinal : function (number) {
	            var lastDigit = number % 10,
	                last2Digits = number % 100;
	            if (number === 0) {
	                return number + '-ев';
	            } else if (last2Digits === 0) {
	                return number + '-ен';
	            } else if (last2Digits > 10 && last2Digits < 20) {
	                return number + '-ти';
	            } else if (lastDigit === 1) {
	                return number + '-ви';
	            } else if (lastDigit === 2) {
	                return number + '-ри';
	            } else if (lastDigit === 7 || lastDigit === 8) {
	                return number + '-ми';
	            } else {
	                return number + '-ти';
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mk;

	}));

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : malayalam (ml)
	//! author : Floyd Pink : https://github.com/floydpink

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ml = moment.defineLocale('ml', {
	        months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
	        monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
	        weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
	        weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
	        weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm -നു',
	            LTS : 'A h:mm:ss -നു',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm -നു',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
	        },
	        calendar : {
	            sameDay : '[ഇന്ന്] LT',
	            nextDay : '[നാളെ] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[ഇന്നലെ] LT',
	            lastWeek : '[കഴിഞ്ഞ] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s കഴിഞ്ഞ്',
	            past : '%s മുൻപ്',
	            s : 'അൽപ നിമിഷങ്ങൾ',
	            m : 'ഒരു മിനിറ്റ്',
	            mm : '%d മിനിറ്റ്',
	            h : 'ഒരു മണിക്കൂർ',
	            hh : '%d മണിക്കൂർ',
	            d : 'ഒരു ദിവസം',
	            dd : '%d ദിവസം',
	            M : 'ഒരു മാസം',
	            MM : '%d മാസം',
	            y : 'ഒരു വർഷം',
	            yy : '%d വർഷം'
	        },
	        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
	        isPM : function (input) {
	            return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'രാത്രി';
	            } else if (hour < 12) {
	                return 'രാവിലെ';
	            } else if (hour < 17) {
	                return 'ഉച്ച കഴിഞ്ഞ്';
	            } else if (hour < 20) {
	                return 'വൈകുന്നേരം';
	            } else {
	                return 'രാത്രി';
	            }
	        }
	    });

	    return ml;

	}));

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Marathi (mr)
	//! author : Harshad Kale : https://github.com/kalehv

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var mr = moment.defineLocale('mr', {
	        months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
	        monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
	        weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
	        weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
	        weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
	        longDateFormat : {
	            LT : 'A h:mm वाजता',
	            LTS : 'A h:mm:ss वाजता',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, A h:mm वाजता',
	            LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[उद्या] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[काल] LT',
	            lastWeek: '[मागील] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s नंतर',
	            past : '%s पूर्वी',
	            s : 'सेकंद',
	            m: 'एक मिनिट',
	            mm: '%d मिनिटे',
	            h : 'एक तास',
	            hh : '%d तास',
	            d : 'एक दिवस',
	            dd : '%d दिवस',
	            M : 'एक महिना',
	            MM : '%d महिने',
	            y : 'एक वर्ष',
	            yy : '%d वर्षे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'रात्री') {
	                return hour < 4 ? hour : hour + 12;
	            } else if (meridiem === 'सकाळी') {
	                return hour;
	            } else if (meridiem === 'दुपारी') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'सायंकाळी') {
	                return hour + 12;
	            }
	        },
	        meridiem: function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'रात्री';
	            } else if (hour < 10) {
	                return 'सकाळी';
	            } else if (hour < 17) {
	                return 'दुपारी';
	            } else if (hour < 20) {
	                return 'सायंकाळी';
	            } else {
	                return 'रात्री';
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return mr;

	}));

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms = moment.defineLocale('ms', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms;

	}));

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Bahasa Malaysia (ms-MY)
	//! author : Weldan Jamili : https://github.com/weldan

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ms_my = moment.defineLocale('ms-my', {
	        months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
	        monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
	        weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
	        weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
	        weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'HH.mm.ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY [pukul] HH.mm',
	            LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
	        },
	        meridiemParse: /pagi|tengahari|petang|malam/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'pagi') {
	                return hour;
	            } else if (meridiem === 'tengahari') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === 'petang' || meridiem === 'malam') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours < 11) {
	                return 'pagi';
	            } else if (hours < 15) {
	                return 'tengahari';
	            } else if (hours < 19) {
	                return 'petang';
	            } else {
	                return 'malam';
	            }
	        },
	        calendar : {
	            sameDay : '[Hari ini pukul] LT',
	            nextDay : '[Esok pukul] LT',
	            nextWeek : 'dddd [pukul] LT',
	            lastDay : '[Kelmarin pukul] LT',
	            lastWeek : 'dddd [lepas pukul] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'dalam %s',
	            past : '%s yang lepas',
	            s : 'beberapa saat',
	            m : 'seminit',
	            mm : '%d minit',
	            h : 'sejam',
	            hh : '%d jam',
	            d : 'sehari',
	            dd : '%d hari',
	            M : 'sebulan',
	            MM : '%d bulan',
	            y : 'setahun',
	            yy : '%d tahun'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ms_my;

	}));

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Burmese (my)
	//! author : Squar team, mysquar.com

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '၁',
	        '2': '၂',
	        '3': '၃',
	        '4': '၄',
	        '5': '၅',
	        '6': '၆',
	        '7': '၇',
	        '8': '၈',
	        '9': '၉',
	        '0': '၀'
	    }, numberMap = {
	        '၁': '1',
	        '၂': '2',
	        '၃': '3',
	        '၄': '4',
	        '၅': '5',
	        '၆': '6',
	        '၇': '7',
	        '၈': '8',
	        '၉': '9',
	        '၀': '0'
	    };

	    var my = moment.defineLocale('my', {
	        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
	        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
	        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
	        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
	        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

	        longDateFormat: {
	            LT: 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L: 'DD/MM/YYYY',
	            LL: 'D MMMM YYYY',
	            LLL: 'D MMMM YYYY HH:mm',
	            LLLL: 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar: {
	            sameDay: '[ယနေ.] LT [မှာ]',
	            nextDay: '[မနက်ဖြန်] LT [မှာ]',
	            nextWeek: 'dddd LT [မှာ]',
	            lastDay: '[မနေ.က] LT [မှာ]',
	            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
	            sameElse: 'L'
	        },
	        relativeTime: {
	            future: 'လာမည့် %s မှာ',
	            past: 'လွန်ခဲ့သော %s က',
	            s: 'စက္ကန်.အနည်းငယ်',
	            m: 'တစ်မိနစ်',
	            mm: '%d မိနစ်',
	            h: 'တစ်နာရီ',
	            hh: '%d နာရီ',
	            d: 'တစ်ရက်',
	            dd: '%d ရက်',
	            M: 'တစ်လ',
	            MM: '%d လ',
	            y: 'တစ်နှစ်',
	            yy: '%d နှစ်'
	        },
	        preparse: function (string) {
	            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        week: {
	            dow: 1, // Monday is the first day of the week.
	            doy: 4 // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return my;

	}));

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian bokmål (nb)
	//! authors : Espen Hovlandsdal : https://github.com/rexxars
	//!           Sigurd Gartmann : https://github.com/sigurdga

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nb = moment.defineLocale('nb', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
	        weekdaysShort : 'søn_man_tirs_ons_tors_fre_lør'.split('_'),
	        weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'H.mm',
	            LTS : 'H.mm.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY [kl.] H.mm',
	            LLLL : 'dddd D. MMMM YYYY [kl.] H.mm'
	        },
	        calendar : {
	            sameDay: '[i dag kl.] LT',
	            nextDay: '[i morgen kl.] LT',
	            nextWeek: 'dddd [kl.] LT',
	            lastDay: '[i går kl.] LT',
	            lastWeek: '[forrige] dddd [kl.] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s siden',
	            s : 'noen sekunder',
	            m : 'ett minutt',
	            mm : '%d minutter',
	            h : 'en time',
	            hh : '%d timer',
	            d : 'en dag',
	            dd : '%d dager',
	            M : 'en måned',
	            MM : '%d måneder',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nb;

	}));

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : nepali/nepalese
	//! author : suvash : https://github.com/suvash

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var symbolMap = {
	        '1': '१',
	        '2': '२',
	        '3': '३',
	        '4': '४',
	        '5': '५',
	        '6': '६',
	        '7': '७',
	        '8': '८',
	        '9': '९',
	        '0': '०'
	    },
	    numberMap = {
	        '१': '1',
	        '२': '2',
	        '३': '3',
	        '४': '4',
	        '५': '5',
	        '६': '6',
	        '७': '7',
	        '८': '8',
	        '९': '9',
	        '०': '0'
	    };

	    var ne = moment.defineLocale('ne', {
	        months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
	        monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
	        weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
	        weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
	        weekdaysMin : 'आइ._सो._मङ्_बु._बि._शु._श.'.split('_'),
	        longDateFormat : {
	            LT : 'Aको h:mm बजे',
	            LTS : 'Aको h:mm:ss बजे',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, Aको h:mm बजे',
	            LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
	        },
	        preparse: function (string) {
	            return string.replace(/[१२३४५६७८९०]/g, function (match) {
	                return numberMap[match];
	            });
	        },
	        postformat: function (string) {
	            return string.replace(/\d/g, function (match) {
	                return symbolMap[match];
	            });
	        },
	        meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'राती') {
	                return hour < 3 ? hour : hour + 12;
	            } else if (meridiem === 'बिहान') {
	                return hour;
	            } else if (meridiem === 'दिउँसो') {
	                return hour >= 10 ? hour : hour + 12;
	            } else if (meridiem === 'बेलुका' || meridiem === 'साँझ') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 3) {
	                return 'राती';
	            } else if (hour < 10) {
	                return 'बिहान';
	            } else if (hour < 15) {
	                return 'दिउँसो';
	            } else if (hour < 18) {
	                return 'बेलुका';
	            } else if (hour < 20) {
	                return 'साँझ';
	            } else {
	                return 'राती';
	            }
	        },
	        calendar : {
	            sameDay : '[आज] LT',
	            nextDay : '[भोली] LT',
	            nextWeek : '[आउँदो] dddd[,] LT',
	            lastDay : '[हिजो] LT',
	            lastWeek : '[गएको] dddd[,] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sमा',
	            past : '%s अगाडी',
	            s : 'केही समय',
	            m : 'एक मिनेट',
	            mm : '%d मिनेट',
	            h : 'एक घण्टा',
	            hh : '%d घण्टा',
	            d : 'एक दिन',
	            dd : '%d दिन',
	            M : 'एक महिना',
	            MM : '%d महिना',
	            y : 'एक बर्ष',
	            yy : '%d बर्ष'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ne;

	}));

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : dutch (nl)
	//! author : Joris Röling : https://github.com/jjupiter

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),
	        monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

	    var nl = moment.defineLocale('nl', {
	        months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
	        monthsShort : function (m, format) {
	            if (/-MMM-/.test(format)) {
	                return monthsShortWithoutDots[m.month()];
	            } else {
	                return monthsShortWithDots[m.month()];
	            }
	        },
	        weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
	        weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
	        weekdaysMin : 'Zo_Ma_Di_Wo_Do_Vr_Za'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD-MM-YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[vandaag om] LT',
	            nextDay: '[morgen om] LT',
	            nextWeek: 'dddd [om] LT',
	            lastDay: '[gisteren om] LT',
	            lastWeek: '[afgelopen] dddd [om] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'over %s',
	            past : '%s geleden',
	            s : 'een paar seconden',
	            m : 'één minuut',
	            mm : '%d minuten',
	            h : 'één uur',
	            hh : '%d uur',
	            d : 'één dag',
	            dd : '%d dagen',
	            M : 'één maand',
	            MM : '%d maanden',
	            y : 'één jaar',
	            yy : '%d jaar'
	        },
	        ordinalParse: /\d{1,2}(ste|de)/,
	        ordinal : function (number) {
	            return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nl;

	}));

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : norwegian nynorsk (nn)
	//! author : https://github.com/mechuwind

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var nn = moment.defineLocale('nn', {
	        months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
	        weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
	        weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
	        weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[I dag klokka] LT',
	            nextDay: '[I morgon klokka] LT',
	            nextWeek: 'dddd [klokka] LT',
	            lastDay: '[I går klokka] LT',
	            lastWeek: '[Føregåande] dddd [klokka] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'for %s sidan',
	            s : 'nokre sekund',
	            m : 'eit minutt',
	            mm : '%d minutt',
	            h : 'ein time',
	            hh : '%d timar',
	            d : 'ein dag',
	            dd : '%d dagar',
	            M : 'ein månad',
	            MM : '%d månader',
	            y : 'eit år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return nn;

	}));

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : polish (pl)
	//! author : Rafal Hirsz : https://github.com/evoL

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_'),
	        monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
	    function plural(n) {
	        return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
	    }
	    function translate(number, withoutSuffix, key) {
	        var result = number + ' ';
	        switch (key) {
	        case 'm':
	            return withoutSuffix ? 'minuta' : 'minutę';
	        case 'mm':
	            return result + (plural(number) ? 'minuty' : 'minut');
	        case 'h':
	            return withoutSuffix  ? 'godzina'  : 'godzinę';
	        case 'hh':
	            return result + (plural(number) ? 'godziny' : 'godzin');
	        case 'MM':
	            return result + (plural(number) ? 'miesiące' : 'miesięcy');
	        case 'yy':
	            return result + (plural(number) ? 'lata' : 'lat');
	        }
	    }

	    var pl = moment.defineLocale('pl', {
	        months : function (momentToFormat, format) {
	            if (format === '') {
	                // Hack: if format empty we know this is used to generate
	                // RegExp by moment. Give then back both valid forms of months
	                // in RegExp ready format.
	                return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
	            } else if (/D MMMM/.test(format)) {
	                return monthsSubjective[momentToFormat.month()];
	            } else {
	                return monthsNominative[momentToFormat.month()];
	            }
	        },
	        monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
	        weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
	        weekdaysShort : 'nie_pon_wt_śr_czw_pt_sb'.split('_'),
	        weekdaysMin : 'N_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Dziś o] LT',
	            nextDay: '[Jutro o] LT',
	            nextWeek: '[W] dddd [o] LT',
	            lastDay: '[Wczoraj o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[W zeszłą niedzielę o] LT';
	                case 3:
	                    return '[W zeszłą środę o] LT';
	                case 6:
	                    return '[W zeszłą sobotę o] LT';
	                default:
	                    return '[W zeszły] dddd [o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : '%s temu',
	            s : 'kilka sekund',
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : '1 dzień',
	            dd : '%d dni',
	            M : 'miesiąc',
	            MM : translate,
	            y : 'rok',
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pl;

	}));

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : portuguese (pt)
	//! author : Jefferson : https://github.com/jalex79

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt = moment.defineLocale('pt', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : 'há %s',
	            s : 'segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return pt;

	}));

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : brazilian portuguese (pt-br)
	//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var pt_br = moment.defineLocale('pt-br', {
	        months : 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),
	        weekdays : 'Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado'.split('_'),
	        weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
	        weekdaysMin : 'Dom_2ª_3ª_4ª_5ª_6ª_Sáb'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D [de] MMMM [de] YYYY',
	            LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
	            LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hoje às] LT',
	            nextDay: '[Amanhã às] LT',
	            nextWeek: 'dddd [às] LT',
	            lastDay: '[Ontem às] LT',
	            lastWeek: function () {
	                return (this.day() === 0 || this.day() === 6) ?
	                    '[Último] dddd [às] LT' : // Saturday + Sunday
	                    '[Última] dddd [às] LT'; // Monday - Friday
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'em %s',
	            past : '%s atrás',
	            s : 'poucos segundos',
	            m : 'um minuto',
	            mm : '%d minutos',
	            h : 'uma hora',
	            hh : '%d horas',
	            d : 'um dia',
	            dd : '%d dias',
	            M : 'um mês',
	            MM : '%d meses',
	            y : 'um ano',
	            yy : '%d anos'
	        },
	        ordinalParse: /\d{1,2}º/,
	        ordinal : '%dº'
	    });

	    return pt_br;

	}));

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : romanian (ro)
	//! author : Vlad Gurdiga : https://github.com/gurdiga
	//! author : Valentin Agachi : https://github.com/avaly

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	                'mm': 'minute',
	                'hh': 'ore',
	                'dd': 'zile',
	                'MM': 'luni',
	                'yy': 'ani'
	            },
	            separator = ' ';
	        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
	            separator = ' de ';
	        }
	        return number + separator + format[key];
	    }

	    var ro = moment.defineLocale('ro', {
	        months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
	        monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
	        weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
	        weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
	        weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY H:mm',
	            LLLL : 'dddd, D MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[azi la] LT',
	            nextDay: '[mâine la] LT',
	            nextWeek: 'dddd [la] LT',
	            lastDay: '[ieri la] LT',
	            lastWeek: '[fosta] dddd [la] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'peste %s',
	            past : '%s în urmă',
	            s : 'câteva secunde',
	            m : 'un minut',
	            mm : relativeTimeWithPlural,
	            h : 'o oră',
	            hh : relativeTimeWithPlural,
	            d : 'o zi',
	            dd : relativeTimeWithPlural,
	            M : 'o lună',
	            MM : relativeTimeWithPlural,
	            y : 'un an',
	            yy : relativeTimeWithPlural
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ro;

	}));

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : russian (ru)
	//! author : Viktorminator : https://github.com/Viktorminator
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
	            'hh': 'час_часа_часов',
	            'dd': 'день_дня_дней',
	            'MM': 'месяц_месяца_месяцев',
	            'yy': 'год_года_лет'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'минута' : 'минуту';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	            'accusative': 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function monthsShortCaseReplace(m, format) {
	        var monthsShort = {
	            'nominative': 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
	            'accusative': 'янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек'.split('_')
	        },
	        nounCase = (/D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return monthsShort[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
	            'accusative': 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_')
	        },
	        nounCase = (/\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/).test(format) ?
	            'accusative' :
	            'nominative';
	        return weekdays[nounCase][m.day()];
	    }

	    var ru = moment.defineLocale('ru', {
	        months : monthsCaseReplace,
	        monthsShort : monthsShortCaseReplace,
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
	        monthsParse : [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i],
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY г.',
	            LLL : 'D MMMM YYYY г., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY г., HH:mm'
	        },
	        calendar : {
	            sameDay: '[Сегодня в] LT',
	            nextDay: '[Завтра в] LT',
	            lastDay: '[Вчера в] LT',
	            nextWeek: function () {
	                return this.day() === 2 ? '[Во] dddd [в] LT' : '[В] dddd [в] LT';
	            },
	            lastWeek: function (now) {
	                if (now.week() !== this.week()) {
	                    switch (this.day()) {
	                    case 0:
	                        return '[В прошлое] dddd [в] LT';
	                    case 1:
	                    case 2:
	                    case 4:
	                        return '[В прошлый] dddd [в] LT';
	                    case 3:
	                    case 5:
	                    case 6:
	                        return '[В прошлую] dddd [в] LT';
	                    }
	                } else {
	                    if (this.day() === 2) {
	                        return '[Во] dddd [в] LT';
	                    } else {
	                        return '[В] dddd [в] LT';
	                    }
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'через %s',
	            past : '%s назад',
	            s : 'несколько секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'час',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'месяц',
	            MM : relativeTimeWithPlural,
	            y : 'год',
	            yy : relativeTimeWithPlural
	        },
	        meridiemParse: /ночи|утра|дня|вечера/i,
	        isPM : function (input) {
	            return /^(дня|вечера)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночи';
	            } else if (hour < 12) {
	                return 'утра';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечера';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го|я)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            case 'w':
	            case 'W':
	                return number + '-я';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ru;

	}));

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Sinhalese (si)
	//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var si = moment.defineLocale('si', {
	        months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
	        monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
	        weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
	        weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
	        weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
	        longDateFormat : {
	            LT : 'a h:mm',
	            LTS : 'a h:mm:ss',
	            L : 'YYYY/MM/DD',
	            LL : 'YYYY MMMM D',
	            LLL : 'YYYY MMMM D, a h:mm',
	            LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
	        },
	        calendar : {
	            sameDay : '[අද] LT[ට]',
	            nextDay : '[හෙට] LT[ට]',
	            nextWeek : 'dddd LT[ට]',
	            lastDay : '[ඊයේ] LT[ට]',
	            lastWeek : '[පසුගිය] dddd LT[ට]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%sකින්',
	            past : '%sකට පෙර',
	            s : 'තත්පර කිහිපය',
	            m : 'මිනිත්තුව',
	            mm : 'මිනිත්තු %d',
	            h : 'පැය',
	            hh : 'පැය %d',
	            d : 'දිනය',
	            dd : 'දින %d',
	            M : 'මාසය',
	            MM : 'මාස %d',
	            y : 'වසර',
	            yy : 'වසර %d'
	        },
	        ordinalParse: /\d{1,2} වැනි/,
	        ordinal : function (number) {
	            return number + ' වැනි';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'ප.ව.' : 'පස් වරු';
	            } else {
	                return isLower ? 'පෙ.ව.' : 'පෙර වරු';
	            }
	        }
	    });

	    return si;

	}));

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovak (sk)
	//! author : Martin Minka : https://github.com/k2s
	//! based on work of petrbela : https://github.com/petrbela

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_'),
	        monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
	    function plural(n) {
	        return (n > 1) && (n < 5);
	    }
	    function translate(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':  // a few seconds / in a few seconds / a few seconds ago
	            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
	        case 'm':  // a minute / in a minute / a minute ago
	            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
	        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'minúty' : 'minút');
	            } else {
	                return result + 'minútami';
	            }
	            break;
	        case 'h':  // an hour / in an hour / an hour ago
	            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
	        case 'hh': // 9 hours / in 9 hours / 9 hours ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'hodiny' : 'hodín');
	            } else {
	                return result + 'hodinami';
	            }
	            break;
	        case 'd':  // a day / in a day / a day ago
	            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
	        case 'dd': // 9 days / in 9 days / 9 days ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'dni' : 'dní');
	            } else {
	                return result + 'dňami';
	            }
	            break;
	        case 'M':  // a month / in a month / a month ago
	            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
	        case 'MM': // 9 months / in 9 months / 9 months ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'mesiace' : 'mesiacov');
	            } else {
	                return result + 'mesiacmi';
	            }
	            break;
	        case 'y':  // a year / in a year / a year ago
	            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
	        case 'yy': // 9 years / in 9 years / 9 years ago
	            if (withoutSuffix || isFuture) {
	                return result + (plural(number) ? 'roky' : 'rokov');
	            } else {
	                return result + 'rokmi';
	            }
	            break;
	        }
	    }

	    var sk = moment.defineLocale('sk', {
	        months : months,
	        monthsShort : monthsShort,
	        monthsParse : (function (months, monthsShort) {
	            var i, _monthsParse = [];
	            for (i = 0; i < 12; i++) {
	                // use custom parser to solve problem with July (červenec)
	                _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
	            }
	            return _monthsParse;
	        }(months, monthsShort)),
	        weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
	        weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
	        weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
	        longDateFormat : {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay: '[dnes o] LT',
	            nextDay: '[zajtra o] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[v] dddd [o] LT';
	                case 3:
	                    return '[v stredu o] LT';
	                case 4:
	                    return '[vo štvrtok o] LT';
	                case 5:
	                    return '[v piatok o] LT';
	                case 6:
	                    return '[v sobotu o] LT';
	                }
	            },
	            lastDay: '[včera o] LT',
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[minulú nedeľu o] LT';
	                case 1:
	                case 2:
	                    return '[minulý] dddd [o] LT';
	                case 3:
	                    return '[minulú stredu o] LT';
	                case 4:
	                case 5:
	                    return '[minulý] dddd [o] LT';
	                case 6:
	                    return '[minulú sobotu o] LT';
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past : 'pred %s',
	            s : translate,
	            m : translate,
	            mm : translate,
	            h : translate,
	            hh : translate,
	            d : translate,
	            dd : translate,
	            M : translate,
	            MM : translate,
	            y : translate,
	            yy : translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sk;

	}));

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : slovenian (sl)
	//! author : Robert Sedovšek : https://github.com/sedovsek

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var result = number + ' ';
	        switch (key) {
	        case 's':
	            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
	        case 'm':
	            return withoutSuffix ? 'ena minuta' : 'eno minuto';
	        case 'mm':
	            if (number === 1) {
	                result += withoutSuffix ? 'minuta' : 'minuto';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
	            } else {
	                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
	            }
	            return result;
	        case 'h':
	            return withoutSuffix ? 'ena ura' : 'eno uro';
	        case 'hh':
	            if (number === 1) {
	                result += withoutSuffix ? 'ura' : 'uro';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'uri' : 'urama';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'ure' : 'urami';
	            } else {
	                result += withoutSuffix || isFuture ? 'ur' : 'urami';
	            }
	            return result;
	        case 'd':
	            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
	        case 'dd':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
	            } else {
	                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
	            }
	            return result;
	        case 'M':
	            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
	        case 'MM':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
	            } else {
	                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
	            }
	            return result;
	        case 'y':
	            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
	        case 'yy':
	            if (number === 1) {
	                result += withoutSuffix || isFuture ? 'leto' : 'letom';
	            } else if (number === 2) {
	                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
	            } else if (number < 5) {
	                result += withoutSuffix || isFuture ? 'leta' : 'leti';
	            } else {
	                result += withoutSuffix || isFuture ? 'let' : 'leti';
	            }
	            return result;
	        }
	    }

	    var sl = moment.defineLocale('sl', {
	        months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
	        weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
	        weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
	        weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
	        longDateFormat : {
	            LT : 'H:mm',
	            LTS : 'H:mm:ss',
	            L : 'DD. MM. YYYY',
	            LL : 'D. MMMM YYYY',
	            LLL : 'D. MMMM YYYY H:mm',
	            LLLL : 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar : {
	            sameDay  : '[danes ob] LT',
	            nextDay  : '[jutri ob] LT',

	            nextWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[v] [nedeljo] [ob] LT';
	                case 3:
	                    return '[v] [sredo] [ob] LT';
	                case 6:
	                    return '[v] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[v] dddd [ob] LT';
	                }
	            },
	            lastDay  : '[včeraj ob] LT',
	            lastWeek : function () {
	                switch (this.day()) {
	                case 0:
	                    return '[prejšnjo] [nedeljo] [ob] LT';
	                case 3:
	                    return '[prejšnjo] [sredo] [ob] LT';
	                case 6:
	                    return '[prejšnjo] [soboto] [ob] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[prejšnji] dddd [ob] LT';
	                }
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'čez %s',
	            past   : 'pred %s',
	            s      : processRelativeTime,
	            m      : processRelativeTime,
	            mm     : processRelativeTime,
	            h      : processRelativeTime,
	            hh     : processRelativeTime,
	            d      : processRelativeTime,
	            dd     : processRelativeTime,
	            M      : processRelativeTime,
	            MM     : processRelativeTime,
	            y      : processRelativeTime,
	            yy     : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sl;

	}));

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Albanian (sq)
	//! author : Flakërim Ismani : https://github.com/flakerimi
	//! author: Menelion Elensúle: https://github.com/Oire (tests)
	//! author : Oerd Cukalla : https://github.com/oerd (fixes)

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sq = moment.defineLocale('sq', {
	        months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
	        monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
	        weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
	        weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
	        weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
	        meridiemParse: /PD|MD/,
	        isPM: function (input) {
	            return input.charAt(0) === 'M';
	        },
	        meridiem : function (hours, minutes, isLower) {
	            return hours < 12 ? 'PD' : 'MD';
	        },
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[Sot në] LT',
	            nextDay : '[Nesër në] LT',
	            nextWeek : 'dddd [në] LT',
	            lastDay : '[Dje në] LT',
	            lastWeek : 'dddd [e kaluar në] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'në %s',
	            past : '%s më parë',
	            s : 'disa sekonda',
	            m : 'një minutë',
	            mm : '%d minuta',
	            h : 'një orë',
	            hh : '%d orë',
	            d : 'një ditë',
	            dd : '%d ditë',
	            M : 'një muaj',
	            MM : '%d muaj',
	            y : 'një vit',
	            yy : '%d vite'
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sq;

	}));

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-latin (sr)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['jedan minut', 'jedne minute'],
	            mm: ['minut', 'minute', 'minuta'],
	            h: ['jedan sat', 'jednog sata'],
	            hh: ['sat', 'sata', 'sati'],
	            dd: ['dan', 'dana', 'dana'],
	            MM: ['mesec', 'meseca', 'meseci'],
	            yy: ['godina', 'godine', 'godina']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr = moment.defineLocale('sr', {
	        months: ['januar', 'februar', 'mart', 'april', 'maj', 'jun', 'jul', 'avgust', 'septembar', 'oktobar', 'novembar', 'decembar'],
	        monthsShort: ['jan.', 'feb.', 'mar.', 'apr.', 'maj', 'jun', 'jul', 'avg.', 'sep.', 'okt.', 'nov.', 'dec.'],
	        weekdays: ['nedelja', 'ponedeljak', 'utorak', 'sreda', 'četvrtak', 'petak', 'subota'],
	        weekdaysShort: ['ned.', 'pon.', 'uto.', 'sre.', 'čet.', 'pet.', 'sub.'],
	        weekdaysMin: ['ne', 'po', 'ut', 'sr', 'če', 'pe', 'su'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[danas u] LT',
	            nextDay: '[sutra u] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[u] [nedelju] [u] LT';
	                case 3:
	                    return '[u] [sredu] [u] LT';
	                case 6:
	                    return '[u] [subotu] [u] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[u] dddd [u] LT';
	                }
	            },
	            lastDay  : '[juče u] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[prošle] [nedelje] [u] LT',
	                    '[prošlog] [ponedeljka] [u] LT',
	                    '[prošlog] [utorka] [u] LT',
	                    '[prošle] [srede] [u] LT',
	                    '[prošlog] [četvrtka] [u] LT',
	                    '[prošlog] [petka] [u] LT',
	                    '[prošle] [subote] [u] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'za %s',
	            past   : 'pre %s',
	            s      : 'nekoliko sekundi',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'dan',
	            dd     : translator.translate,
	            M      : 'mesec',
	            MM     : translator.translate,
	            y      : 'godinu',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr;

	}));

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Serbian-cyrillic (sr-cyrl)
	//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var translator = {
	        words: { //Different grammatical cases
	            m: ['један минут', 'једне минуте'],
	            mm: ['минут', 'минуте', 'минута'],
	            h: ['један сат', 'једног сата'],
	            hh: ['сат', 'сата', 'сати'],
	            dd: ['дан', 'дана', 'дана'],
	            MM: ['месец', 'месеца', 'месеци'],
	            yy: ['година', 'године', 'година']
	        },
	        correctGrammaticalCase: function (number, wordKey) {
	            return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
	        },
	        translate: function (number, withoutSuffix, key) {
	            var wordKey = translator.words[key];
	            if (key.length === 1) {
	                return withoutSuffix ? wordKey[0] : wordKey[1];
	            } else {
	                return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
	            }
	        }
	    };

	    var sr_cyrl = moment.defineLocale('sr-cyrl', {
	        months: ['јануар', 'фебруар', 'март', 'април', 'мај', 'јун', 'јул', 'август', 'септембар', 'октобар', 'новембар', 'децембар'],
	        monthsShort: ['јан.', 'феб.', 'мар.', 'апр.', 'мај', 'јун', 'јул', 'авг.', 'сеп.', 'окт.', 'нов.', 'дец.'],
	        weekdays: ['недеља', 'понедељак', 'уторак', 'среда', 'четвртак', 'петак', 'субота'],
	        weekdaysShort: ['нед.', 'пон.', 'уто.', 'сре.', 'чет.', 'пет.', 'суб.'],
	        weekdaysMin: ['не', 'по', 'ут', 'ср', 'че', 'пе', 'су'],
	        longDateFormat: {
	            LT: 'H:mm',
	            LTS : 'H:mm:ss',
	            L: 'DD. MM. YYYY',
	            LL: 'D. MMMM YYYY',
	            LLL: 'D. MMMM YYYY H:mm',
	            LLLL: 'dddd, D. MMMM YYYY H:mm'
	        },
	        calendar: {
	            sameDay: '[данас у] LT',
	            nextDay: '[сутра у] LT',
	            nextWeek: function () {
	                switch (this.day()) {
	                case 0:
	                    return '[у] [недељу] [у] LT';
	                case 3:
	                    return '[у] [среду] [у] LT';
	                case 6:
	                    return '[у] [суботу] [у] LT';
	                case 1:
	                case 2:
	                case 4:
	                case 5:
	                    return '[у] dddd [у] LT';
	                }
	            },
	            lastDay  : '[јуче у] LT',
	            lastWeek : function () {
	                var lastWeekDays = [
	                    '[прошле] [недеље] [у] LT',
	                    '[прошлог] [понедељка] [у] LT',
	                    '[прошлог] [уторка] [у] LT',
	                    '[прошле] [среде] [у] LT',
	                    '[прошлог] [четвртка] [у] LT',
	                    '[прошлог] [петка] [у] LT',
	                    '[прошле] [суботе] [у] LT'
	                ];
	                return lastWeekDays[this.day()];
	            },
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past   : 'пре %s',
	            s      : 'неколико секунди',
	            m      : translator.translate,
	            mm     : translator.translate,
	            h      : translator.translate,
	            hh     : translator.translate,
	            d      : 'дан',
	            dd     : translator.translate,
	            M      : 'месец',
	            MM     : translator.translate,
	            y      : 'годину',
	            yy     : translator.translate
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return sr_cyrl;

	}));

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : swedish (sv)
	//! author : Jens Alm : https://github.com/ulmus

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var sv = moment.defineLocale('sv', {
	        months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
	        monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
	        weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
	        weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
	        weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'YYYY-MM-DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Idag] LT',
	            nextDay: '[Imorgon] LT',
	            lastDay: '[Igår] LT',
	            nextWeek: '[På] dddd LT',
	            lastWeek: '[I] dddd[s] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'om %s',
	            past : 'för %s sedan',
	            s : 'några sekunder',
	            m : 'en minut',
	            mm : '%d minuter',
	            h : 'en timme',
	            hh : '%d timmar',
	            d : 'en dag',
	            dd : '%d dagar',
	            M : 'en månad',
	            MM : '%d månader',
	            y : 'ett år',
	            yy : '%d år'
	        },
	        ordinalParse: /\d{1,2}(e|a)/,
	        ordinal : function (number) {
	            var b = number % 10,
	                output = (~~(number % 100 / 10) === 1) ? 'e' :
	                (b === 1) ? 'a' :
	                (b === 2) ? 'a' :
	                (b === 3) ? 'e' : 'e';
	            return number + output;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return sv;

	}));

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : tamil (ta)
	//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var ta = moment.defineLocale('ta', {
	        months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
	        weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
	        weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
	        weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY, HH:mm',
	            LLLL : 'dddd, D MMMM YYYY, HH:mm'
	        },
	        calendar : {
	            sameDay : '[இன்று] LT',
	            nextDay : '[நாளை] LT',
	            nextWeek : 'dddd, LT',
	            lastDay : '[நேற்று] LT',
	            lastWeek : '[கடந்த வாரம்] dddd, LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s இல்',
	            past : '%s முன்',
	            s : 'ஒரு சில விநாடிகள்',
	            m : 'ஒரு நிமிடம்',
	            mm : '%d நிமிடங்கள்',
	            h : 'ஒரு மணி நேரம்',
	            hh : '%d மணி நேரம்',
	            d : 'ஒரு நாள்',
	            dd : '%d நாட்கள்',
	            M : 'ஒரு மாதம்',
	            MM : '%d மாதங்கள்',
	            y : 'ஒரு வருடம்',
	            yy : '%d ஆண்டுகள்'
	        },
	        ordinalParse: /\d{1,2}வது/,
	        ordinal : function (number) {
	            return number + 'வது';
	        },
	        // refer http://ta.wikipedia.org/s/1er1
	        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 2) {
	                return ' யாமம்';
	            } else if (hour < 6) {
	                return ' வைகறை';  // வைகறை
	            } else if (hour < 10) {
	                return ' காலை'; // காலை
	            } else if (hour < 14) {
	                return ' நண்பகல்'; // நண்பகல்
	            } else if (hour < 18) {
	                return ' எற்பாடு'; // எற்பாடு
	            } else if (hour < 22) {
	                return ' மாலை'; // மாலை
	            } else {
	                return ' யாமம்';
	            }
	        },
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === 'யாமம்') {
	                return hour < 2 ? hour : hour + 12;
	            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
	                return hour;
	            } else if (meridiem === 'நண்பகல்') {
	                return hour >= 10 ? hour : hour + 12;
	            } else {
	                return hour + 12;
	            }
	        },
	        week : {
	            dow : 0, // Sunday is the first day of the week.
	            doy : 6  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return ta;

	}));

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : thai (th)
	//! author : Kridsada Thanabulpong : https://github.com/sirn

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var th = moment.defineLocale('th', {
	        months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
	        monthsShort : 'มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา'.split('_'),
	        weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
	        weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
	        weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
	        longDateFormat : {
	            LT : 'H นาฬิกา m นาที',
	            LTS : 'H นาฬิกา m นาที s วินาที',
	            L : 'YYYY/MM/DD',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY เวลา H นาฬิกา m นาที',
	            LLLL : 'วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที'
	        },
	        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
	        isPM: function (input) {
	            return input === 'หลังเที่ยง';
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 12) {
	                return 'ก่อนเที่ยง';
	            } else {
	                return 'หลังเที่ยง';
	            }
	        },
	        calendar : {
	            sameDay : '[วันนี้ เวลา] LT',
	            nextDay : '[พรุ่งนี้ เวลา] LT',
	            nextWeek : 'dddd[หน้า เวลา] LT',
	            lastDay : '[เมื่อวานนี้ เวลา] LT',
	            lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'อีก %s',
	            past : '%sที่แล้ว',
	            s : 'ไม่กี่วินาที',
	            m : '1 นาที',
	            mm : '%d นาที',
	            h : '1 ชั่วโมง',
	            hh : '%d ชั่วโมง',
	            d : '1 วัน',
	            dd : '%d วัน',
	            M : '1 เดือน',
	            MM : '%d เดือน',
	            y : '1 ปี',
	            yy : '%d ปี'
	        }
	    });

	    return th;

	}));

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Tagalog/Filipino (tl-ph)
	//! author : Dan Hagman

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tl_ph = moment.defineLocale('tl-ph', {
	        months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
	        monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
	        weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
	        weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
	        weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'MM/D/YYYY',
	            LL : 'MMMM D, YYYY',
	            LLL : 'MMMM D, YYYY HH:mm',
	            LLLL : 'dddd, MMMM DD, YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Ngayon sa] LT',
	            nextDay: '[Bukas sa] LT',
	            nextWeek: 'dddd [sa] LT',
	            lastDay: '[Kahapon sa] LT',
	            lastWeek: 'dddd [huling linggo] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'sa loob ng %s',
	            past : '%s ang nakalipas',
	            s : 'ilang segundo',
	            m : 'isang minuto',
	            mm : '%d minuto',
	            h : 'isang oras',
	            hh : '%d oras',
	            d : 'isang araw',
	            dd : '%d araw',
	            M : 'isang buwan',
	            MM : '%d buwan',
	            y : 'isang taon',
	            yy : '%d taon'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return tl_ph;

	}));

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : turkish (tr)
	//! authors : Erhan Gundogan : https://github.com/erhangundogan,
	//!           Burak Yiğit Kaya: https://github.com/BYK

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var suffixes = {
	        1: '\'inci',
	        5: '\'inci',
	        8: '\'inci',
	        70: '\'inci',
	        80: '\'inci',
	        2: '\'nci',
	        7: '\'nci',
	        20: '\'nci',
	        50: '\'nci',
	        3: '\'üncü',
	        4: '\'üncü',
	        100: '\'üncü',
	        6: '\'ncı',
	        9: '\'uncu',
	        10: '\'uncu',
	        30: '\'uncu',
	        60: '\'ıncı',
	        90: '\'ıncı'
	    };

	    var tr = moment.defineLocale('tr', {
	        months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
	        monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
	        weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
	        weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
	        weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd, D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay : '[bugün saat] LT',
	            nextDay : '[yarın saat] LT',
	            nextWeek : '[haftaya] dddd [saat] LT',
	            lastDay : '[dün] LT',
	            lastWeek : '[geçen hafta] dddd [saat] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : '%s sonra',
	            past : '%s önce',
	            s : 'birkaç saniye',
	            m : 'bir dakika',
	            mm : '%d dakika',
	            h : 'bir saat',
	            hh : '%d saat',
	            d : 'bir gün',
	            dd : '%d gün',
	            M : 'bir ay',
	            MM : '%d ay',
	            y : 'bir yıl',
	            yy : '%d yıl'
	        },
	        ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
	        ordinal : function (number) {
	            if (number === 0) {  // special case for zero
	                return number + '\'ıncı';
	            }
	            var a = number % 10,
	                b = number % 100 - a,
	                c = number >= 100 ? 100 : null;
	            return number + (suffixes[a] || suffixes[b] || suffixes[c]);
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tr;

	}));

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : talossan (tzl)
	//! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';



	    var tzl = moment.defineLocale('tzl', {
	        months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
	        monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
	        weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
	        weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
	        weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
	        longDateFormat : {
	            LT : 'HH.mm',
	            LTS : 'LT.ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D. MMMM [dallas] YYYY',
	            LLL : 'D. MMMM [dallas] YYYY LT',
	            LLLL : 'dddd, [li] D. MMMM [dallas] YYYY LT'
	        },
	        meridiem : function (hours, minutes, isLower) {
	            if (hours > 11) {
	                return isLower ? 'd\'o' : 'D\'O';
	            } else {
	                return isLower ? 'd\'a' : 'D\'A';
	            }
	        },
	        calendar : {
	            sameDay : '[oxhi à] LT',
	            nextDay : '[demà à] LT',
	            nextWeek : 'dddd [à] LT',
	            lastDay : '[ieiri à] LT',
	            lastWeek : '[sür el] dddd [lasteu à] LT',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'osprei %s',
	            past : 'ja%s',
	            s : processRelativeTime,
	            m : processRelativeTime,
	            mm : processRelativeTime,
	            h : processRelativeTime,
	            hh : processRelativeTime,
	            d : processRelativeTime,
	            dd : processRelativeTime,
	            M : processRelativeTime,
	            MM : processRelativeTime,
	            y : processRelativeTime,
	            yy : processRelativeTime
	        },
	        ordinalParse: /\d{1,2}\./,
	        ordinal : '%d.',
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    function processRelativeTime(number, withoutSuffix, key, isFuture) {
	        var format = {
	            's': ['viensas secunds', '\'iensas secunds'],
	            'm': ['\'n míut', '\'iens míut'],
	            'mm': [number + ' míuts', ' ' + number + ' míuts'],
	            'h': ['\'n þora', '\'iensa þora'],
	            'hh': [number + ' þoras', ' ' + number + ' þoras'],
	            'd': ['\'n ziua', '\'iensa ziua'],
	            'dd': [number + ' ziuas', ' ' + number + ' ziuas'],
	            'M': ['\'n mes', '\'iens mes'],
	            'MM': [number + ' mesen', ' ' + number + ' mesen'],
	            'y': ['\'n ar', '\'iens ar'],
	            'yy': [number + ' ars', ' ' + number + ' ars']
	        };
	        return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1].trim());
	    }

	    return tzl;

	}));

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt (tzm)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm = moment.defineLocale('tzm', {
	        months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
	        weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS: 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
	            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
	            nextWeek: 'dddd [ⴴ] LT',
	            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
	            lastWeek: 'dddd [ⴴ] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
	            past : 'ⵢⴰⵏ %s',
	            s : 'ⵉⵎⵉⴽ',
	            m : 'ⵎⵉⵏⵓⴺ',
	            mm : '%d ⵎⵉⵏⵓⴺ',
	            h : 'ⵙⴰⵄⴰ',
	            hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
	            d : 'ⴰⵙⵙ',
	            dd : '%d oⵙⵙⴰⵏ',
	            M : 'ⴰⵢoⵓⵔ',
	            MM : '%d ⵉⵢⵢⵉⵔⵏ',
	            y : 'ⴰⵙⴳⴰⵙ',
	            yy : '%d ⵉⵙⴳⴰⵙⵏ'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm;

	}));

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
	//! author : Abdel Said : https://github.com/abdelsaid

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var tzm_latn = moment.defineLocale('tzm-latn', {
	        months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
	        weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'dddd D MMMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[asdkh g] LT',
	            nextDay: '[aska g] LT',
	            nextWeek: 'dddd [g] LT',
	            lastDay: '[assant g] LT',
	            lastWeek: 'dddd [g] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'dadkh s yan %s',
	            past : 'yan %s',
	            s : 'imik',
	            m : 'minuḍ',
	            mm : '%d minuḍ',
	            h : 'saɛa',
	            hh : '%d tassaɛin',
	            d : 'ass',
	            dd : '%d ossan',
	            M : 'ayowr',
	            MM : '%d iyyirn',
	            y : 'asgas',
	            yy : '%d isgasn'
	        },
	        week : {
	            dow : 6, // Saturday is the first day of the week.
	            doy : 12  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return tzm_latn;

	}));

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : ukrainian (uk)
	//! author : zemlanin : https://github.com/zemlanin
	//! Author : Menelion Elensúle : https://github.com/Oire

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    function plural(word, num) {
	        var forms = word.split('_');
	        return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
	    }
	    function relativeTimeWithPlural(number, withoutSuffix, key) {
	        var format = {
	            'mm': 'хвилина_хвилини_хвилин',
	            'hh': 'година_години_годин',
	            'dd': 'день_дні_днів',
	            'MM': 'місяць_місяці_місяців',
	            'yy': 'рік_роки_років'
	        };
	        if (key === 'm') {
	            return withoutSuffix ? 'хвилина' : 'хвилину';
	        }
	        else if (key === 'h') {
	            return withoutSuffix ? 'година' : 'годину';
	        }
	        else {
	            return number + ' ' + plural(format[key], +number);
	        }
	    }
	    function monthsCaseReplace(m, format) {
	        var months = {
	            'nominative': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_'),
	            'accusative': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_')
	        },
	        nounCase = (/D[oD]? *MMMM?/).test(format) ?
	            'accusative' :
	            'nominative';
	        return months[nounCase][m.month()];
	    }
	    function weekdaysCaseReplace(m, format) {
	        var weekdays = {
	            'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
	            'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
	            'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
	        },
	        nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
	            'accusative' :
	            ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
	                'genitive' :
	                'nominative');
	        return weekdays[nounCase][m.day()];
	    }
	    function processHoursFunction(str) {
	        return function () {
	            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
	        };
	    }

	    var uk = moment.defineLocale('uk', {
	        months : monthsCaseReplace,
	        monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
	        weekdays : weekdaysCaseReplace,
	        weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD.MM.YYYY',
	            LL : 'D MMMM YYYY р.',
	            LLL : 'D MMMM YYYY р., HH:mm',
	            LLLL : 'dddd, D MMMM YYYY р., HH:mm'
	        },
	        calendar : {
	            sameDay: processHoursFunction('[Сьогодні '),
	            nextDay: processHoursFunction('[Завтра '),
	            lastDay: processHoursFunction('[Вчора '),
	            nextWeek: processHoursFunction('[У] dddd ['),
	            lastWeek: function () {
	                switch (this.day()) {
	                case 0:
	                case 3:
	                case 5:
	                case 6:
	                    return processHoursFunction('[Минулої] dddd [').call(this);
	                case 1:
	                case 2:
	                case 4:
	                    return processHoursFunction('[Минулого] dddd [').call(this);
	                }
	            },
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : 'за %s',
	            past : '%s тому',
	            s : 'декілька секунд',
	            m : relativeTimeWithPlural,
	            mm : relativeTimeWithPlural,
	            h : 'годину',
	            hh : relativeTimeWithPlural,
	            d : 'день',
	            dd : relativeTimeWithPlural,
	            M : 'місяць',
	            MM : relativeTimeWithPlural,
	            y : 'рік',
	            yy : relativeTimeWithPlural
	        },
	        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
	        meridiemParse: /ночі|ранку|дня|вечора/,
	        isPM: function (input) {
	            return /^(дня|вечора)$/.test(input);
	        },
	        meridiem : function (hour, minute, isLower) {
	            if (hour < 4) {
	                return 'ночі';
	            } else if (hour < 12) {
	                return 'ранку';
	            } else if (hour < 17) {
	                return 'дня';
	            } else {
	                return 'вечора';
	            }
	        },
	        ordinalParse: /\d{1,2}-(й|го)/,
	        ordinal: function (number, period) {
	            switch (period) {
	            case 'M':
	            case 'd':
	            case 'DDD':
	            case 'w':
	            case 'W':
	                return number + '-й';
	            case 'D':
	                return number + '-го';
	            default:
	                return number;
	            }
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 1st is the first week of the year.
	        }
	    });

	    return uk;

	}));

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : uzbek (uz)
	//! author : Sardor Muminov : https://github.com/muminoff

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var uz = moment.defineLocale('uz', {
	        months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
	        monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
	        weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
	        weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
	        weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM YYYY',
	            LLL : 'D MMMM YYYY HH:mm',
	            LLLL : 'D MMMM YYYY, dddd HH:mm'
	        },
	        calendar : {
	            sameDay : '[Бугун соат] LT [да]',
	            nextDay : '[Эртага] LT [да]',
	            nextWeek : 'dddd [куни соат] LT [да]',
	            lastDay : '[Кеча соат] LT [да]',
	            lastWeek : '[Утган] dddd [куни соат] LT [да]',
	            sameElse : 'L'
	        },
	        relativeTime : {
	            future : 'Якин %s ичида',
	            past : 'Бир неча %s олдин',
	            s : 'фурсат',
	            m : 'бир дакика',
	            mm : '%d дакика',
	            h : 'бир соат',
	            hh : '%d соат',
	            d : 'бир кун',
	            dd : '%d кун',
	            M : 'бир ой',
	            MM : '%d ой',
	            y : 'бир йил',
	            yy : '%d йил'
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 7  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return uz;

	}));

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : vietnamese (vi)
	//! author : Bang Nguyen : https://github.com/bangnk

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var vi = moment.defineLocale('vi', {
	        months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
	        monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
	        weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
	        weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
	        longDateFormat : {
	            LT : 'HH:mm',
	            LTS : 'HH:mm:ss',
	            L : 'DD/MM/YYYY',
	            LL : 'D MMMM [năm] YYYY',
	            LLL : 'D MMMM [năm] YYYY HH:mm',
	            LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
	            l : 'DD/M/YYYY',
	            ll : 'D MMM YYYY',
	            lll : 'D MMM YYYY HH:mm',
	            llll : 'ddd, D MMM YYYY HH:mm'
	        },
	        calendar : {
	            sameDay: '[Hôm nay lúc] LT',
	            nextDay: '[Ngày mai lúc] LT',
	            nextWeek: 'dddd [tuần tới lúc] LT',
	            lastDay: '[Hôm qua lúc] LT',
	            lastWeek: 'dddd [tuần rồi lúc] LT',
	            sameElse: 'L'
	        },
	        relativeTime : {
	            future : '%s tới',
	            past : '%s trước',
	            s : 'vài giây',
	            m : 'một phút',
	            mm : '%d phút',
	            h : 'một giờ',
	            hh : '%d giờ',
	            d : 'một ngày',
	            dd : '%d ngày',
	            M : 'một tháng',
	            MM : '%d tháng',
	            y : 'một năm',
	            yy : '%d năm'
	        },
	        ordinalParse: /\d{1,2}/,
	        ordinal : function (number) {
	            return number;
	        },
	        week : {
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return vi;

	}));

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : chinese (zh-cn)
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_cn = moment.defineLocale('zh-cn', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah点mm分',
	            LTS : 'Ah点m分s秒',
	            L : 'YYYY-MM-DD',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah点mm分',
	            LLLL : 'YYYY年MMMD日ddddAh点mm分',
	            l : 'YYYY-MM-DD',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah点mm分',
	            llll : 'YYYY年MMMD日ddddAh点mm分'
	        },
	        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	        meridiemHour: function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '凌晨' || meridiem === '早上' ||
	                    meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            } else {
	                // '中午'
	                return hour >= 11 ? hour : hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 600) {
	                return '凌晨';
	            } else if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : function () {
	                return this.minutes() === 0 ? '[今天]Ah[点整]' : '[今天]LT';
	            },
	            nextDay : function () {
	                return this.minutes() === 0 ? '[明天]Ah[点整]' : '[明天]LT';
	            },
	            lastDay : function () {
	                return this.minutes() === 0 ? '[昨天]Ah[点整]' : '[昨天]LT';
	            },
	            nextWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() - startOfWeek.unix() >= 7 * 24 * 3600 ? '[下]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            lastWeek : function () {
	                var startOfWeek, prefix;
	                startOfWeek = moment().startOf('week');
	                prefix = this.unix() < startOfWeek.unix()  ? '[上]' : '[本]';
	                return this.minutes() === 0 ? prefix + 'dddAh点整' : prefix + 'dddAh点mm';
	            },
	            sameElse : 'LL'
	        },
	        ordinalParse: /\d{1,2}(日|月|周)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s内',
	            past : '%s前',
	            s : '几秒',
	            m : '1 分钟',
	            mm : '%d 分钟',
	            h : '1 小时',
	            hh : '%d 小时',
	            d : '1 天',
	            dd : '%d 天',
	            M : '1 个月',
	            MM : '%d 个月',
	            y : '1 年',
	            yy : '%d 年'
	        },
	        week : {
	            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	            dow : 1, // Monday is the first day of the week.
	            doy : 4  // The week that contains Jan 4th is the first week of the year.
	        }
	    });

	    return zh_cn;

	}));

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : traditional chinese (zh-tw)
	//! author : Ben : https://github.com/ben-lin

	(function (global, factory) {
	    true ? factory(__webpack_require__(179)) :
	   typeof define === 'function' && define.amd ? define(['moment'], factory) :
	   factory(global.moment)
	}(this, function (moment) { 'use strict';


	    var zh_tw = moment.defineLocale('zh-tw', {
	        months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	        monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	        weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	        weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
	        weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	        longDateFormat : {
	            LT : 'Ah點mm分',
	            LTS : 'Ah點m分s秒',
	            L : 'YYYY年MMMD日',
	            LL : 'YYYY年MMMD日',
	            LLL : 'YYYY年MMMD日Ah點mm分',
	            LLLL : 'YYYY年MMMD日ddddAh點mm分',
	            l : 'YYYY年MMMD日',
	            ll : 'YYYY年MMMD日',
	            lll : 'YYYY年MMMD日Ah點mm分',
	            llll : 'YYYY年MMMD日ddddAh點mm分'
	        },
	        meridiemParse: /早上|上午|中午|下午|晚上/,
	        meridiemHour : function (hour, meridiem) {
	            if (hour === 12) {
	                hour = 0;
	            }
	            if (meridiem === '早上' || meridiem === '上午') {
	                return hour;
	            } else if (meridiem === '中午') {
	                return hour >= 11 ? hour : hour + 12;
	            } else if (meridiem === '下午' || meridiem === '晚上') {
	                return hour + 12;
	            }
	        },
	        meridiem : function (hour, minute, isLower) {
	            var hm = hour * 100 + minute;
	            if (hm < 900) {
	                return '早上';
	            } else if (hm < 1130) {
	                return '上午';
	            } else if (hm < 1230) {
	                return '中午';
	            } else if (hm < 1800) {
	                return '下午';
	            } else {
	                return '晚上';
	            }
	        },
	        calendar : {
	            sameDay : '[今天]LT',
	            nextDay : '[明天]LT',
	            nextWeek : '[下]ddddLT',
	            lastDay : '[昨天]LT',
	            lastWeek : '[上]ddddLT',
	            sameElse : 'L'
	        },
	        ordinalParse: /\d{1,2}(日|月|週)/,
	        ordinal : function (number, period) {
	            switch (period) {
	            case 'd' :
	            case 'D' :
	            case 'DDD' :
	                return number + '日';
	            case 'M' :
	                return number + '月';
	            case 'w' :
	            case 'W' :
	                return number + '週';
	            default :
	                return number;
	            }
	        },
	        relativeTime : {
	            future : '%s內',
	            past : '%s前',
	            s : '幾秒',
	            m : '一分鐘',
	            mm : '%d分鐘',
	            h : '一小時',
	            hh : '%d小時',
	            d : '一天',
	            dd : '%d天',
	            M : '一個月',
	            MM : '%d個月',
	            y : '一年',
	            yy : '%d年'
	        }
	    });

	    return zh_tw;

	}));

/***/ },
/* 267 */
/***/ function(module, exports) {

	module.exports = {
		"login": "yrezgui",
		"id": 1113976,
		"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
		"gravatar_id": "",
		"url": "https://api.github.com/users/yrezgui",
		"html_url": "https://github.com/yrezgui",
		"followers_url": "https://api.github.com/users/yrezgui/followers",
		"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
		"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
		"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
		"organizations_url": "https://api.github.com/users/yrezgui/orgs",
		"repos_url": "https://api.github.com/users/yrezgui/repos",
		"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
		"received_events_url": "https://api.github.com/users/yrezgui/received_events",
		"type": "User",
		"site_admin": false,
		"name": "Yacine Rezgui",
		"company": "Import.io",
		"blog": "http://www.yrezgui.com",
		"location": "London, UK",
		"email": "",
		"hireable": true,
		"bio": null,
		"public_repos": 119,
		"public_gists": 32,
		"followers": 63,
		"following": 53,
		"created_at": "2011-10-09T12:05:06Z",
		"updated_at": "2015-07-04T08:03:42Z"
	}

/***/ },
/* 268 */
/***/ function(module, exports) {

	module.exports = [
		{
			"id": 11279757,
			"name": "8fact-api-mania",
			"full_name": "yrezgui/8fact-api-mania",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/8fact-api-mania",
			"description": "Api server app to see the last facts from 8fact Facebook page",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/8fact-api-mania",
			"forks_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/8fact-api-mania/releases{/id}",
			"created_at": "2013-07-09T10:32:49Z",
			"updated_at": "2014-04-27T09:01:35Z",
			"pushed_at": "2013-07-12T14:47:02Z",
			"git_url": "git://github.com/yrezgui/8fact-api-mania.git",
			"ssh_url": "git@github.com:yrezgui/8fact-api-mania.git",
			"clone_url": "https://github.com/yrezgui/8fact-api-mania.git",
			"svn_url": "https://github.com/yrezgui/8fact-api-mania",
			"homepage": null,
			"size": 144,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11265009,
			"name": "8fact-web-mania",
			"full_name": "yrezgui/8fact-web-mania",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/8fact-web-mania",
			"description": "Web app to see the last facts from 8fact Facebook page",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/8fact-web-mania",
			"forks_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/8fact-web-mania/releases{/id}",
			"created_at": "2013-07-08T20:46:10Z",
			"updated_at": "2013-10-01T16:40:18Z",
			"pushed_at": "2013-07-18T05:42:08Z",
			"git_url": "git://github.com/yrezgui/8fact-web-mania.git",
			"ssh_url": "git@github.com:yrezgui/8fact-web-mania.git",
			"clone_url": "https://github.com/yrezgui/8fact-web-mania.git",
			"svn_url": "https://github.com/yrezgui/8fact-web-mania",
			"homepage": null,
			"size": 224,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 40054170,
			"name": "advent-calendar-ios",
			"full_name": "yrezgui/advent-calendar-ios",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/advent-calendar-ios",
			"description": "Advent calendar to make everyday a gift",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/advent-calendar-ios",
			"forks_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/advent-calendar-ios/releases{/id}",
			"created_at": "2015-08-01T17:15:37Z",
			"updated_at": "2015-08-01T18:27:03Z",
			"pushed_at": "2015-08-04T05:41:50Z",
			"git_url": "git://github.com/yrezgui/advent-calendar-ios.git",
			"ssh_url": "git@github.com:yrezgui/advent-calendar-ios.git",
			"clone_url": "https://github.com/yrezgui/advent-calendar-ios.git",
			"svn_url": "https://github.com/yrezgui/advent-calendar-ios",
			"homepage": null,
			"size": 0,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Objective-C",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11307888,
			"name": "alternative-internet",
			"full_name": "yrezgui/alternative-internet",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/alternative-internet",
			"description": "A collection of interesting new networks and tech aiming at decentralisation (in some form).",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/alternative-internet",
			"forks_url": "https://api.github.com/repos/yrezgui/alternative-internet/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/alternative-internet/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/alternative-internet/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/alternative-internet/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/alternative-internet/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/alternative-internet/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/alternative-internet/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/alternative-internet/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/alternative-internet/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/alternative-internet/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/alternative-internet/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/alternative-internet/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/alternative-internet/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/alternative-internet/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/alternative-internet/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/alternative-internet/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/alternative-internet/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/alternative-internet/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/alternative-internet/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/alternative-internet/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/alternative-internet/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/alternative-internet/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/alternative-internet/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/alternative-internet/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/alternative-internet/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/alternative-internet/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/alternative-internet/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/alternative-internet/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/alternative-internet/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/alternative-internet/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/alternative-internet/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/alternative-internet/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/alternative-internet/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/alternative-internet/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/alternative-internet/releases{/id}",
			"created_at": "2013-07-10T09:32:34Z",
			"updated_at": "2013-07-10T09:32:34Z",
			"pushed_at": "2013-07-09T20:10:22Z",
			"git_url": "git://github.com/yrezgui/alternative-internet.git",
			"ssh_url": "git@github.com:yrezgui/alternative-internet.git",
			"clone_url": "https://github.com/yrezgui/alternative-internet.git",
			"svn_url": "https://github.com/yrezgui/alternative-internet",
			"homepage": null,
			"size": 79,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10582942,
			"name": "android-nfc-rfid",
			"full_name": "yrezgui/android-nfc-rfid",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/android-nfc-rfid",
			"description": "Example of communication between a RFID card and an Android device by the NFC",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/android-nfc-rfid",
			"forks_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/android-nfc-rfid/releases{/id}",
			"created_at": "2013-06-09T12:37:16Z",
			"updated_at": "2015-05-31T08:02:28Z",
			"pushed_at": "2013-06-09T14:16:03Z",
			"git_url": "git://github.com/yrezgui/android-nfc-rfid.git",
			"ssh_url": "git@github.com:yrezgui/android-nfc-rfid.git",
			"clone_url": "https://github.com/yrezgui/android-nfc-rfid.git",
			"svn_url": "https://github.com/yrezgui/android-nfc-rfid",
			"homepage": null,
			"size": 560,
			"stargazers_count": 6,
			"watchers_count": 6,
			"language": "Java",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 2,
			"mirror_url": null,
			"open_issues_count": 1,
			"forks": 2,
			"open_issues": 1,
			"watchers": 6,
			"default_branch": "master"
		},
		{
			"id": 10544336,
			"name": "angular-app",
			"full_name": "yrezgui/angular-app",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/angular-app",
			"description": "Reference application for AngularJS",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/angular-app",
			"forks_url": "https://api.github.com/repos/yrezgui/angular-app/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/angular-app/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/angular-app/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/angular-app/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/angular-app/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/angular-app/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/angular-app/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/angular-app/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/angular-app/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/angular-app/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/angular-app/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/angular-app/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/angular-app/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/angular-app/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/angular-app/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/angular-app/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/angular-app/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/angular-app/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/angular-app/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/angular-app/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/angular-app/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/angular-app/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/angular-app/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/angular-app/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/angular-app/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/angular-app/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/angular-app/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/angular-app/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/angular-app/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/angular-app/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/angular-app/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/angular-app/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/angular-app/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/angular-app/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/angular-app/releases{/id}",
			"created_at": "2013-06-07T07:06:19Z",
			"updated_at": "2013-06-07T09:20:45Z",
			"pushed_at": "2013-05-14T06:55:46Z",
			"git_url": "git://github.com/yrezgui/angular-app.git",
			"ssh_url": "git@github.com:yrezgui/angular-app.git",
			"clone_url": "https://github.com/yrezgui/angular-app.git",
			"svn_url": "https://github.com/yrezgui/angular-app",
			"homepage": null,
			"size": 962,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 9606649,
			"name": "angular-carousel",
			"full_name": "yrezgui/angular-carousel",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/angular-carousel",
			"description": "Mobile friendly AngularJS carousel",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/angular-carousel",
			"forks_url": "https://api.github.com/repos/yrezgui/angular-carousel/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/angular-carousel/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/angular-carousel/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/angular-carousel/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/angular-carousel/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/angular-carousel/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/angular-carousel/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/angular-carousel/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/angular-carousel/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/angular-carousel/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/angular-carousel/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/angular-carousel/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/angular-carousel/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/angular-carousel/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/angular-carousel/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/angular-carousel/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/angular-carousel/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/angular-carousel/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/angular-carousel/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/angular-carousel/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/angular-carousel/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/angular-carousel/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/angular-carousel/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/angular-carousel/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/angular-carousel/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/angular-carousel/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/angular-carousel/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/angular-carousel/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/angular-carousel/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/angular-carousel/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/angular-carousel/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/angular-carousel/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/angular-carousel/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/angular-carousel/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/angular-carousel/releases{/id}",
			"created_at": "2013-04-22T19:09:06Z",
			"updated_at": "2013-04-22T19:09:06Z",
			"pushed_at": "2013-04-22T17:24:25Z",
			"git_url": "git://github.com/yrezgui/angular-carousel.git",
			"ssh_url": "git@github.com:yrezgui/angular-carousel.git",
			"clone_url": "https://github.com/yrezgui/angular-carousel.git",
			"svn_url": "https://github.com/yrezgui/angular-carousel",
			"homepage": "http://revolunet.github.io/angular-carousel",
			"size": 62,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11316927,
			"name": "angular-emoji-filter",
			"full_name": "yrezgui/angular-emoji-filter",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/angular-emoji-filter",
			"description": "Angular filter for parsing emoji codes.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/angular-emoji-filter",
			"forks_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/angular-emoji-filter/releases{/id}",
			"created_at": "2013-07-10T16:11:58Z",
			"updated_at": "2013-11-26T21:59:17Z",
			"pushed_at": "2013-07-10T11:39:45Z",
			"git_url": "git://github.com/yrezgui/angular-emoji-filter.git",
			"ssh_url": "git@github.com:yrezgui/angular-emoji-filter.git",
			"clone_url": "https://github.com/yrezgui/angular-emoji-filter.git",
			"svn_url": "https://github.com/yrezgui/angular-emoji-filter",
			"homepage": null,
			"size": 5835,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 27823115,
			"name": "angularjs-google-api-js-test",
			"full_name": "yrezgui/angularjs-google-api-js-test",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/angularjs-google-api-js-test",
			"description": "",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test",
			"forks_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/angularjs-google-api-js-test/releases{/id}",
			"created_at": "2014-12-10T14:21:08Z",
			"updated_at": "2014-12-10T15:32:21Z",
			"pushed_at": "2014-12-10T15:41:36Z",
			"git_url": "git://github.com/yrezgui/angularjs-google-api-js-test.git",
			"ssh_url": "git@github.com:yrezgui/angularjs-google-api-js-test.git",
			"clone_url": "https://github.com/yrezgui/angularjs-google-api-js-test.git",
			"svn_url": "https://github.com/yrezgui/angularjs-google-api-js-test",
			"homepage": null,
			"size": 113,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 1,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 1,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10597323,
			"name": "AngularJS-Learning",
			"full_name": "yrezgui/AngularJS-Learning",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/AngularJS-Learning",
			"description": "A bunch of links to blog posts, articles, videos, etc for learning AngularJS",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/AngularJS-Learning",
			"forks_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/AngularJS-Learning/releases{/id}",
			"created_at": "2013-06-10T09:41:41Z",
			"updated_at": "2015-04-23T10:16:45Z",
			"pushed_at": "2013-06-11T14:29:32Z",
			"git_url": "git://github.com/yrezgui/AngularJS-Learning.git",
			"ssh_url": "git@github.com:yrezgui/AngularJS-Learning.git",
			"clone_url": "https://github.com/yrezgui/AngularJS-Learning.git",
			"svn_url": "https://github.com/yrezgui/AngularJS-Learning",
			"homepage": null,
			"size": 124,
			"stargazers_count": 9,
			"watchers_count": 9,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 1,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 1,
			"open_issues": 0,
			"watchers": 9,
			"default_branch": "master"
		},
		{
			"id": 13189810,
			"name": "api",
			"full_name": "yrezgui/api",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/api",
			"description": "",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/api",
			"forks_url": "https://api.github.com/repos/yrezgui/api/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/api/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/api/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/api/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/api/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/api/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/api/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/api/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/api/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/api/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/api/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/api/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/api/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/api/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/api/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/api/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/api/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/api/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/api/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/api/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/api/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/api/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/api/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/api/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/api/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/api/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/api/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/api/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/api/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/api/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/api/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/api/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/api/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/api/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/api/releases{/id}",
			"created_at": "2013-09-29T09:13:42Z",
			"updated_at": "2013-09-29T09:13:42Z",
			"pushed_at": "2013-09-29T09:11:46Z",
			"git_url": "git://github.com/yrezgui/api.git",
			"ssh_url": "git@github.com:yrezgui/api.git",
			"clone_url": "https://github.com/yrezgui/api.git",
			"svn_url": "https://github.com/yrezgui/api",
			"homepage": null,
			"size": 184,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11997414,
			"name": "Audio-Trackr",
			"full_name": "yrezgui/Audio-Trackr",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Audio-Trackr",
			"description": "Audio Trackr",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Audio-Trackr",
			"forks_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Audio-Trackr/releases{/id}",
			"created_at": "2013-08-09T09:19:15Z",
			"updated_at": "2013-08-09T09:19:16Z",
			"pushed_at": "2013-08-09T04:41:17Z",
			"git_url": "git://github.com/yrezgui/Audio-Trackr.git",
			"ssh_url": "git@github.com:yrezgui/Audio-Trackr.git",
			"clone_url": "https://github.com/yrezgui/Audio-Trackr.git",
			"svn_url": "https://github.com/yrezgui/Audio-Trackr",
			"homepage": "",
			"size": 128,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 17806995,
			"name": "awsbox-node-example",
			"full_name": "yrezgui/awsbox-node-example",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/awsbox-node-example",
			"description": "Example of NodeJS project used to show the use of awsbox",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/awsbox-node-example",
			"forks_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/awsbox-node-example/releases{/id}",
			"created_at": "2014-03-16T19:17:15Z",
			"updated_at": "2014-03-16T19:47:18Z",
			"pushed_at": "2014-03-16T19:47:18Z",
			"git_url": "git://github.com/yrezgui/awsbox-node-example.git",
			"ssh_url": "git@github.com:yrezgui/awsbox-node-example.git",
			"clone_url": "https://github.com/yrezgui/awsbox-node-example.git",
			"svn_url": "https://github.com/yrezgui/awsbox-node-example",
			"homepage": null,
			"size": 132,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11179421,
			"name": "bindonce",
			"full_name": "yrezgui/bindonce",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/bindonce",
			"description": "Zero watches binding for AngularJs",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/bindonce",
			"forks_url": "https://api.github.com/repos/yrezgui/bindonce/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/bindonce/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/bindonce/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/bindonce/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/bindonce/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/bindonce/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/bindonce/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/bindonce/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/bindonce/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/bindonce/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/bindonce/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/bindonce/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/bindonce/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/bindonce/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/bindonce/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/bindonce/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/bindonce/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/bindonce/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/bindonce/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/bindonce/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/bindonce/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/bindonce/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/bindonce/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/bindonce/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/bindonce/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/bindonce/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/bindonce/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/bindonce/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/bindonce/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/bindonce/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/bindonce/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/bindonce/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/bindonce/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/bindonce/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/bindonce/releases{/id}",
			"created_at": "2013-07-04T14:36:36Z",
			"updated_at": "2013-07-04T14:36:36Z",
			"pushed_at": "2013-06-21T14:35:08Z",
			"git_url": "git://github.com/yrezgui/bindonce.git",
			"ssh_url": "git@github.com:yrezgui/bindonce.git",
			"clone_url": "https://github.com/yrezgui/bindonce.git",
			"svn_url": "https://github.com/yrezgui/bindonce",
			"homepage": "",
			"size": 124,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 25879232,
			"name": "Blob.js",
			"full_name": "yrezgui/Blob.js",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Blob.js",
			"description": "An HTML5 Blob implementation",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Blob.js",
			"forks_url": "https://api.github.com/repos/yrezgui/Blob.js/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Blob.js/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Blob.js/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Blob.js/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Blob.js/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Blob.js/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Blob.js/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Blob.js/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Blob.js/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Blob.js/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Blob.js/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Blob.js/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Blob.js/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Blob.js/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Blob.js/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Blob.js/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Blob.js/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Blob.js/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Blob.js/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Blob.js/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Blob.js/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Blob.js/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Blob.js/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Blob.js/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Blob.js/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Blob.js/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Blob.js/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Blob.js/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Blob.js/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Blob.js/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Blob.js/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Blob.js/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Blob.js/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Blob.js/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Blob.js/releases{/id}",
			"created_at": "2014-10-28T16:36:38Z",
			"updated_at": "2014-10-28T16:44:01Z",
			"pushed_at": "2014-10-28T16:44:01Z",
			"git_url": "git://github.com/yrezgui/Blob.js.git",
			"ssh_url": "git@github.com:yrezgui/Blob.js.git",
			"clone_url": "https://github.com/yrezgui/Blob.js.git",
			"svn_url": "https://github.com/yrezgui/Blob.js",
			"homepage": "",
			"size": 104,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 23036336,
			"name": "bokkusu",
			"full_name": "yrezgui/bokkusu",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/bokkusu",
			"description": "Simple database manager using PouchDB",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/bokkusu",
			"forks_url": "https://api.github.com/repos/yrezgui/bokkusu/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/bokkusu/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/bokkusu/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/bokkusu/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/bokkusu/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/bokkusu/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/bokkusu/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/bokkusu/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/bokkusu/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/bokkusu/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/bokkusu/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/bokkusu/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/bokkusu/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/bokkusu/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/bokkusu/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/bokkusu/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/bokkusu/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/bokkusu/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/bokkusu/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/bokkusu/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/bokkusu/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/bokkusu/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/bokkusu/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/bokkusu/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/bokkusu/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/bokkusu/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/bokkusu/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/bokkusu/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/bokkusu/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/bokkusu/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/bokkusu/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/bokkusu/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/bokkusu/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/bokkusu/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/bokkusu/releases{/id}",
			"created_at": "2014-08-17T08:23:32Z",
			"updated_at": "2014-08-17T08:30:59Z",
			"pushed_at": "2014-08-17T08:23:32Z",
			"git_url": "git://github.com/yrezgui/bokkusu.git",
			"ssh_url": "git@github.com:yrezgui/bokkusu.git",
			"clone_url": "https://github.com/yrezgui/bokkusu.git",
			"svn_url": "https://github.com/yrezgui/bokkusu",
			"homepage": "",
			"size": 0,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 9872742,
			"name": "browser-diet",
			"full_name": "yrezgui/browser-diet",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/browser-diet",
			"description": "The definitive front-end performance guide",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/browser-diet",
			"forks_url": "https://api.github.com/repos/yrezgui/browser-diet/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/browser-diet/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/browser-diet/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/browser-diet/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/browser-diet/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/browser-diet/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/browser-diet/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/browser-diet/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/browser-diet/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/browser-diet/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/browser-diet/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/browser-diet/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/browser-diet/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/browser-diet/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/browser-diet/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/browser-diet/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/browser-diet/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/browser-diet/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/browser-diet/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/browser-diet/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/browser-diet/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/browser-diet/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/browser-diet/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/browser-diet/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/browser-diet/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/browser-diet/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/browser-diet/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/browser-diet/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/browser-diet/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/browser-diet/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/browser-diet/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/browser-diet/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/browser-diet/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/browser-diet/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/browser-diet/releases{/id}",
			"created_at": "2013-05-05T18:37:08Z",
			"updated_at": "2013-06-03T02:39:43Z",
			"pushed_at": "2013-05-31T20:03:52Z",
			"git_url": "git://github.com/yrezgui/browser-diet.git",
			"ssh_url": "git@github.com:yrezgui/browser-diet.git",
			"clone_url": "https://github.com/yrezgui/browser-diet.git",
			"svn_url": "https://github.com/yrezgui/browser-diet",
			"homepage": "http://browserdiet.com",
			"size": 21855,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "CoffeeScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 2,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 2,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 21578099,
			"name": "buffer-firefoxos",
			"full_name": "yrezgui/buffer-firefoxos",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/buffer-firefoxos",
			"description": "Buffer client for FirefoxOS",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/buffer-firefoxos",
			"forks_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/buffer-firefoxos/releases{/id}",
			"created_at": "2014-07-07T16:35:13Z",
			"updated_at": "2014-08-09T10:55:12Z",
			"pushed_at": "2014-07-29T19:12:36Z",
			"git_url": "git://github.com/yrezgui/buffer-firefoxos.git",
			"ssh_url": "git@github.com:yrezgui/buffer-firefoxos.git",
			"clone_url": "https://github.com/yrezgui/buffer-firefoxos.git",
			"svn_url": "https://github.com/yrezgui/buffer-firefoxos",
			"homepage": null,
			"size": 652,
			"stargazers_count": 4,
			"watchers_count": 4,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 4,
			"default_branch": "master"
		},
		{
			"id": 21704530,
			"name": "buffer-login-backend",
			"full_name": "yrezgui/buffer-login-backend",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/buffer-login-backend",
			"description": "A simple HTTP Server which change a Buffer OAuth API code to an access token",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/buffer-login-backend",
			"forks_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/buffer-login-backend/releases{/id}",
			"created_at": "2014-07-10T17:58:59Z",
			"updated_at": "2014-07-24T21:18:11Z",
			"pushed_at": "2014-07-25T17:06:59Z",
			"git_url": "git://github.com/yrezgui/buffer-login-backend.git",
			"ssh_url": "git@github.com:yrezgui/buffer-login-backend.git",
			"clone_url": "https://github.com/yrezgui/buffer-login-backend.git",
			"svn_url": "https://github.com/yrezgui/buffer-login-backend",
			"homepage": null,
			"size": 192,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 28593339,
			"name": "build-that-gap",
			"full_name": "yrezgui/build-that-gap",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/build-that-gap",
			"description": "Desktop client for Phonegap Build",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/build-that-gap",
			"forks_url": "https://api.github.com/repos/yrezgui/build-that-gap/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/build-that-gap/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/build-that-gap/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/build-that-gap/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/build-that-gap/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/build-that-gap/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/build-that-gap/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/build-that-gap/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/build-that-gap/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/build-that-gap/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/build-that-gap/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/build-that-gap/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/build-that-gap/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/build-that-gap/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/build-that-gap/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/build-that-gap/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/build-that-gap/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/build-that-gap/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/build-that-gap/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/build-that-gap/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/build-that-gap/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/build-that-gap/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/build-that-gap/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/build-that-gap/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/build-that-gap/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/build-that-gap/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/build-that-gap/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/build-that-gap/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/build-that-gap/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/build-that-gap/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/build-that-gap/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/build-that-gap/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/build-that-gap/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/build-that-gap/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/build-that-gap/releases{/id}",
			"created_at": "2014-12-29T13:36:24Z",
			"updated_at": "2014-12-29T13:36:24Z",
			"pushed_at": "2014-12-30T11:40:02Z",
			"git_url": "git://github.com/yrezgui/build-that-gap.git",
			"ssh_url": "git@github.com:yrezgui/build-that-gap.git",
			"clone_url": "https://github.com/yrezgui/build-that-gap.git",
			"svn_url": "https://github.com/yrezgui/build-that-gap",
			"homepage": null,
			"size": 136,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 6102884,
			"name": "builtwith.angularjs.org",
			"full_name": "yrezgui/builtwith.angularjs.org",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/builtwith.angularjs.org",
			"description": "builtwith.angularjs.org",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org",
			"forks_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/builtwith.angularjs.org/releases{/id}",
			"created_at": "2012-10-06T13:14:29Z",
			"updated_at": "2014-02-24T20:01:38Z",
			"pushed_at": "2013-06-21T05:21:57Z",
			"git_url": "git://github.com/yrezgui/builtwith.angularjs.org.git",
			"ssh_url": "git@github.com:yrezgui/builtwith.angularjs.org.git",
			"clone_url": "https://github.com/yrezgui/builtwith.angularjs.org.git",
			"svn_url": "https://github.com/yrezgui/builtwith.angularjs.org",
			"homepage": null,
			"size": 5148,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 18295179,
			"name": "CalendarPlugin",
			"full_name": "yrezgui/CalendarPlugin",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/CalendarPlugin",
			"description": "Sample PhoneGap plugin to access and add entries to the native calendar on Android. ",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/CalendarPlugin",
			"forks_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/CalendarPlugin/releases{/id}",
			"created_at": "2014-03-31T14:05:06Z",
			"updated_at": "2014-03-31T14:05:06Z",
			"pushed_at": "2013-09-18T18:44:59Z",
			"git_url": "git://github.com/yrezgui/CalendarPlugin.git",
			"ssh_url": "git@github.com:yrezgui/CalendarPlugin.git",
			"clone_url": "https://github.com/yrezgui/CalendarPlugin.git",
			"svn_url": "https://github.com/yrezgui/CalendarPlugin",
			"homepage": null,
			"size": 90,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Java",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 18295183,
			"name": "CalendarPluginSample30",
			"full_name": "yrezgui/CalendarPluginSample30",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/CalendarPluginSample30",
			"description": "",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30",
			"forks_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/CalendarPluginSample30/releases{/id}",
			"created_at": "2014-03-31T14:05:09Z",
			"updated_at": "2014-03-31T14:05:32Z",
			"pushed_at": "2014-03-31T14:05:32Z",
			"git_url": "git://github.com/yrezgui/CalendarPluginSample30.git",
			"ssh_url": "git@github.com:yrezgui/CalendarPluginSample30.git",
			"clone_url": "https://github.com/yrezgui/CalendarPluginSample30.git",
			"svn_url": "https://github.com/yrezgui/CalendarPluginSample30",
			"homepage": null,
			"size": 1236,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11655395,
			"name": "chancejs",
			"full_name": "yrezgui/chancejs",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/chancejs",
			"description": "Chance - Random generator helper for JavaScript",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/chancejs",
			"forks_url": "https://api.github.com/repos/yrezgui/chancejs/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/chancejs/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/chancejs/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/chancejs/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/chancejs/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/chancejs/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/chancejs/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/chancejs/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/chancejs/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/chancejs/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/chancejs/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/chancejs/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/chancejs/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/chancejs/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/chancejs/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/chancejs/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/chancejs/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/chancejs/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/chancejs/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/chancejs/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/chancejs/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/chancejs/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/chancejs/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/chancejs/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/chancejs/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/chancejs/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/chancejs/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/chancejs/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/chancejs/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/chancejs/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/chancejs/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/chancejs/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/chancejs/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/chancejs/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/chancejs/releases{/id}",
			"created_at": "2013-07-25T08:13:09Z",
			"updated_at": "2013-07-25T08:13:10Z",
			"pushed_at": "2013-07-21T16:47:33Z",
			"git_url": "git://github.com/yrezgui/chancejs.git",
			"ssh_url": "git@github.com:yrezgui/chancejs.git",
			"clone_url": "https://github.com/yrezgui/chancejs.git",
			"svn_url": "https://github.com/yrezgui/chancejs",
			"homepage": "http://chancejs.com",
			"size": 906,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "develop"
		},
		{
			"id": 6621245,
			"name": "chrome-app-samples",
			"full_name": "yrezgui/chrome-app-samples",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/chrome-app-samples",
			"description": "Chrome Apps",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/chrome-app-samples",
			"forks_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/chrome-app-samples/releases{/id}",
			"created_at": "2012-11-09T22:09:35Z",
			"updated_at": "2013-01-13T02:04:07Z",
			"pushed_at": "2012-11-09T08:20:19Z",
			"git_url": "git://github.com/yrezgui/chrome-app-samples.git",
			"ssh_url": "git@github.com:yrezgui/chrome-app-samples.git",
			"clone_url": "https://github.com/yrezgui/chrome-app-samples.git",
			"svn_url": "https://github.com/yrezgui/chrome-app-samples",
			"homepage": null,
			"size": 13116,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 19642580,
			"name": "chushaku",
			"full_name": "yrezgui/chushaku",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/chushaku",
			"description": "Small project of notes web app mixing different technologies and APIs",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/chushaku",
			"forks_url": "https://api.github.com/repos/yrezgui/chushaku/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/chushaku/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/chushaku/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/chushaku/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/chushaku/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/chushaku/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/chushaku/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/chushaku/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/chushaku/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/chushaku/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/chushaku/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/chushaku/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/chushaku/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/chushaku/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/chushaku/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/chushaku/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/chushaku/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/chushaku/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/chushaku/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/chushaku/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/chushaku/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/chushaku/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/chushaku/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/chushaku/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/chushaku/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/chushaku/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/chushaku/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/chushaku/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/chushaku/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/chushaku/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/chushaku/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/chushaku/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/chushaku/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/chushaku/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/chushaku/releases{/id}",
			"created_at": "2014-05-10T13:53:42Z",
			"updated_at": "2014-10-27T14:07:05Z",
			"pushed_at": "2014-05-20T23:00:12Z",
			"git_url": "git://github.com/yrezgui/chushaku.git",
			"ssh_url": "git@github.com:yrezgui/chushaku.git",
			"clone_url": "https://github.com/yrezgui/chushaku.git",
			"svn_url": "https://github.com/yrezgui/chushaku",
			"homepage": null,
			"size": 448,
			"stargazers_count": 2,
			"watchers_count": 2,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 2,
			"default_branch": "master"
		},
		{
			"id": 20154353,
			"name": "cloudaku",
			"full_name": "yrezgui/cloudaku",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/cloudaku",
			"description": "Choose your could stack easily",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/cloudaku",
			"forks_url": "https://api.github.com/repos/yrezgui/cloudaku/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/cloudaku/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/cloudaku/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/cloudaku/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/cloudaku/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/cloudaku/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/cloudaku/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/cloudaku/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/cloudaku/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/cloudaku/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/cloudaku/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/cloudaku/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/cloudaku/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/cloudaku/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/cloudaku/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/cloudaku/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/cloudaku/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/cloudaku/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/cloudaku/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/cloudaku/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/cloudaku/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/cloudaku/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/cloudaku/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/cloudaku/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/cloudaku/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/cloudaku/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/cloudaku/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/cloudaku/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/cloudaku/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/cloudaku/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/cloudaku/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/cloudaku/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/cloudaku/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/cloudaku/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/cloudaku/releases{/id}",
			"created_at": "2014-05-25T12:49:25Z",
			"updated_at": "2014-05-25T13:38:55Z",
			"pushed_at": "2014-05-25T13:38:53Z",
			"git_url": "git://github.com/yrezgui/cloudaku.git",
			"ssh_url": "git@github.com:yrezgui/cloudaku.git",
			"clone_url": "https://github.com/yrezgui/cloudaku.git",
			"svn_url": "https://github.com/yrezgui/cloudaku",
			"homepage": null,
			"size": 144,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11506146,
			"name": "colour-schemes",
			"full_name": "yrezgui/colour-schemes",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/colour-schemes",
			"description": "Sublime Text 2 Themes (textmate) created by Dayle Rees.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/colour-schemes",
			"forks_url": "https://api.github.com/repos/yrezgui/colour-schemes/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/colour-schemes/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/colour-schemes/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/colour-schemes/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/colour-schemes/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/colour-schemes/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/colour-schemes/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/colour-schemes/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/colour-schemes/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/colour-schemes/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/colour-schemes/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/colour-schemes/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/colour-schemes/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/colour-schemes/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/colour-schemes/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/colour-schemes/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/colour-schemes/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/colour-schemes/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/colour-schemes/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/colour-schemes/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/colour-schemes/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/colour-schemes/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/colour-schemes/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/colour-schemes/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/colour-schemes/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/colour-schemes/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/colour-schemes/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/colour-schemes/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/colour-schemes/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/colour-schemes/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/colour-schemes/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/colour-schemes/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/colour-schemes/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/colour-schemes/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/colour-schemes/releases{/id}",
			"created_at": "2013-07-18T15:17:36Z",
			"updated_at": "2013-07-18T15:17:36Z",
			"pushed_at": "2013-07-01T20:44:15Z",
			"git_url": "git://github.com/yrezgui/colour-schemes.git",
			"ssh_url": "git@github.com:yrezgui/colour-schemes.git",
			"clone_url": "https://github.com/yrezgui/colour-schemes.git",
			"svn_url": "https://github.com/yrezgui/colour-schemes",
			"homepage": "",
			"size": 3179,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "VimL",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10903126,
			"name": "config-env.js",
			"full_name": "yrezgui/config-env.js",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/config-env.js",
			"description": "config-env is for switching various configurations by environment variable.  ",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/config-env.js",
			"forks_url": "https://api.github.com/repos/yrezgui/config-env.js/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/config-env.js/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/config-env.js/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/config-env.js/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/config-env.js/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/config-env.js/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/config-env.js/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/config-env.js/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/config-env.js/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/config-env.js/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/config-env.js/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/config-env.js/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/config-env.js/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/config-env.js/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/config-env.js/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/config-env.js/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/config-env.js/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/config-env.js/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/config-env.js/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/config-env.js/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/config-env.js/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/config-env.js/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/config-env.js/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/config-env.js/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/config-env.js/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/config-env.js/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/config-env.js/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/config-env.js/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/config-env.js/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/config-env.js/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/config-env.js/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/config-env.js/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/config-env.js/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/config-env.js/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/config-env.js/releases{/id}",
			"created_at": "2013-06-24T08:44:30Z",
			"updated_at": "2013-06-24T08:44:30Z",
			"pushed_at": "2012-08-15T23:25:20Z",
			"git_url": "git://github.com/yrezgui/config-env.js.git",
			"ssh_url": "git@github.com:yrezgui/config-env.js.git",
			"clone_url": "https://github.com/yrezgui/config-env.js.git",
			"svn_url": "https://github.com/yrezgui/config-env.js",
			"homepage": "",
			"size": 67,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 13398548,
			"name": "continuous-deployment-modulus",
			"full_name": "yrezgui/continuous-deployment-modulus",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/continuous-deployment-modulus",
			"description": "Express middleware for enabling continuous deployment from github on modulus.io",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus",
			"forks_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/continuous-deployment-modulus/releases{/id}",
			"created_at": "2013-10-07T23:29:20Z",
			"updated_at": "2013-10-07T23:29:20Z",
			"pushed_at": "2013-09-30T03:14:56Z",
			"git_url": "git://github.com/yrezgui/continuous-deployment-modulus.git",
			"ssh_url": "git@github.com:yrezgui/continuous-deployment-modulus.git",
			"clone_url": "https://github.com/yrezgui/continuous-deployment-modulus.git",
			"svn_url": "https://github.com/yrezgui/continuous-deployment-modulus",
			"homepage": null,
			"size": 134,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 20222689,
			"name": "cordova-plugin-splashscreen",
			"full_name": "yrezgui/cordova-plugin-splashscreen",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/cordova-plugin-splashscreen",
			"description": "Mirror of Apache Cordova Plugin splashscreen",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen",
			"forks_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/cordova-plugin-splashscreen/releases{/id}",
			"created_at": "2014-05-27T14:23:01Z",
			"updated_at": "2014-05-27T14:41:35Z",
			"pushed_at": "2014-05-27T14:41:35Z",
			"git_url": "git://github.com/yrezgui/cordova-plugin-splashscreen.git",
			"ssh_url": "git@github.com:yrezgui/cordova-plugin-splashscreen.git",
			"clone_url": "https://github.com/yrezgui/cordova-plugin-splashscreen.git",
			"svn_url": "https://github.com/yrezgui/cordova-plugin-splashscreen",
			"homepage": null,
			"size": 174,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Objective-C",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 1,
			"forks": 0,
			"open_issues": 1,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 35825730,
			"name": "couchtix",
			"full_name": "yrezgui/couchtix",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/couchtix",
			"description": "",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/couchtix",
			"forks_url": "https://api.github.com/repos/yrezgui/couchtix/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/couchtix/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/couchtix/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/couchtix/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/couchtix/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/couchtix/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/couchtix/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/couchtix/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/couchtix/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/couchtix/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/couchtix/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/couchtix/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/couchtix/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/couchtix/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/couchtix/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/couchtix/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/couchtix/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/couchtix/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/couchtix/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/couchtix/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/couchtix/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/couchtix/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/couchtix/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/couchtix/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/couchtix/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/couchtix/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/couchtix/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/couchtix/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/couchtix/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/couchtix/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/couchtix/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/couchtix/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/couchtix/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/couchtix/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/couchtix/releases{/id}",
			"created_at": "2015-05-18T15:23:56Z",
			"updated_at": "2015-05-18T15:23:57Z",
			"pushed_at": "2015-05-18T15:24:27Z",
			"git_url": "git://github.com/yrezgui/couchtix.git",
			"ssh_url": "git@github.com:yrezgui/couchtix.git",
			"clone_url": "https://github.com/yrezgui/couchtix.git",
			"svn_url": "https://github.com/yrezgui/couchtix",
			"homepage": null,
			"size": 95,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 35864493,
			"name": "crawlme",
			"full_name": "yrezgui/crawlme",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/crawlme",
			"description": "Simple website to crawl",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/crawlme",
			"forks_url": "https://api.github.com/repos/yrezgui/crawlme/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/crawlme/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/crawlme/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/crawlme/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/crawlme/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/crawlme/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/crawlme/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/crawlme/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/crawlme/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/crawlme/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/crawlme/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/crawlme/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/crawlme/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/crawlme/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/crawlme/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/crawlme/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/crawlme/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/crawlme/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/crawlme/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/crawlme/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/crawlme/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/crawlme/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/crawlme/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/crawlme/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/crawlme/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/crawlme/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/crawlme/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/crawlme/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/crawlme/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/crawlme/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/crawlme/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/crawlme/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/crawlme/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/crawlme/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/crawlme/releases{/id}",
			"created_at": "2015-05-19T06:52:05Z",
			"updated_at": "2015-05-19T06:52:05Z",
			"pushed_at": "2015-05-19T06:58:49Z",
			"git_url": "git://github.com/yrezgui/crawlme.git",
			"ssh_url": "git@github.com:yrezgui/crawlme.git",
			"clone_url": "https://github.com/yrezgui/crawlme.git",
			"svn_url": "https://github.com/yrezgui/crawlme",
			"homepage": null,
			"size": 136,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "gh-pages"
		},
		{
			"id": 13378353,
			"name": "crx",
			"full_name": "yrezgui/crx",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/crx",
			"description": "A node.js command line app for packing Google Chrome extensions.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/crx",
			"forks_url": "https://api.github.com/repos/yrezgui/crx/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/crx/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/crx/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/crx/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/crx/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/crx/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/crx/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/crx/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/crx/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/crx/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/crx/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/crx/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/crx/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/crx/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/crx/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/crx/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/crx/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/crx/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/crx/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/crx/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/crx/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/crx/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/crx/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/crx/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/crx/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/crx/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/crx/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/crx/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/crx/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/crx/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/crx/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/crx/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/crx/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/crx/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/crx/releases{/id}",
			"created_at": "2013-10-07T08:13:12Z",
			"updated_at": "2014-10-29T12:07:58Z",
			"pushed_at": "2013-07-25T03:53:26Z",
			"git_url": "git://github.com/yrezgui/crx.git",
			"ssh_url": "git@github.com:yrezgui/crx.git",
			"clone_url": "https://github.com/yrezgui/crx.git",
			"svn_url": "https://github.com/yrezgui/crx",
			"homepage": null,
			"size": 89,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 38573225,
			"name": "cuisine-micheline-ios",
			"full_name": "yrezgui/cuisine-micheline-ios",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/cuisine-micheline-ios",
			"description": "iOS app of http://cuisinemicheline.com/",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios",
			"forks_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/cuisine-micheline-ios/releases{/id}",
			"created_at": "2015-07-05T15:09:53Z",
			"updated_at": "2015-07-05T15:09:53Z",
			"pushed_at": "2015-07-05T15:09:53Z",
			"git_url": "git://github.com/yrezgui/cuisine-micheline-ios.git",
			"ssh_url": "git@github.com:yrezgui/cuisine-micheline-ios.git",
			"clone_url": "https://github.com/yrezgui/cuisine-micheline-ios.git",
			"svn_url": "https://github.com/yrezgui/cuisine-micheline-ios",
			"homepage": null,
			"size": 0,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11444511,
			"name": "daux.io",
			"full_name": "yrezgui/daux.io",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/daux.io",
			"description": "Daux.io is an documentation generator that uses a simple folder structure and Markdown files to create custom documentation on the fly. It helps you create great looking documentation in a developer friendly way.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/daux.io",
			"forks_url": "https://api.github.com/repos/yrezgui/daux.io/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/daux.io/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/daux.io/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/daux.io/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/daux.io/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/daux.io/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/daux.io/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/daux.io/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/daux.io/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/daux.io/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/daux.io/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/daux.io/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/daux.io/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/daux.io/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/daux.io/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/daux.io/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/daux.io/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/daux.io/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/daux.io/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/daux.io/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/daux.io/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/daux.io/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/daux.io/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/daux.io/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/daux.io/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/daux.io/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/daux.io/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/daux.io/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/daux.io/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/daux.io/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/daux.io/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/daux.io/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/daux.io/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/daux.io/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/daux.io/releases{/id}",
			"created_at": "2013-07-16T08:31:12Z",
			"updated_at": "2013-07-16T08:31:12Z",
			"pushed_at": "2013-07-15T21:14:15Z",
			"git_url": "git://github.com/yrezgui/daux.io.git",
			"ssh_url": "git@github.com:yrezgui/daux.io.git",
			"clone_url": "https://github.com/yrezgui/daux.io.git",
			"svn_url": "https://github.com/yrezgui/daux.io",
			"homepage": "daux.io",
			"size": 911,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "PHP",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 18218865,
			"name": "DocumentHandler",
			"full_name": "yrezgui/DocumentHandler",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/DocumentHandler",
			"description": "A phonegap plugin to handle documents (f.e. PDFs) loaded from a URL. ",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/DocumentHandler",
			"forks_url": "https://api.github.com/repos/yrezgui/DocumentHandler/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/DocumentHandler/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/DocumentHandler/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/DocumentHandler/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/DocumentHandler/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/DocumentHandler/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/DocumentHandler/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/DocumentHandler/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/DocumentHandler/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/DocumentHandler/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/DocumentHandler/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/DocumentHandler/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/DocumentHandler/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/DocumentHandler/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/DocumentHandler/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/DocumentHandler/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/DocumentHandler/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/DocumentHandler/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/DocumentHandler/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/DocumentHandler/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/DocumentHandler/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/DocumentHandler/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/DocumentHandler/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/DocumentHandler/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/DocumentHandler/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/DocumentHandler/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/DocumentHandler/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/DocumentHandler/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/DocumentHandler/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/DocumentHandler/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/DocumentHandler/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/DocumentHandler/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/DocumentHandler/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/DocumentHandler/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/DocumentHandler/releases{/id}",
			"created_at": "2014-03-28T16:31:55Z",
			"updated_at": "2014-03-28T16:31:56Z",
			"pushed_at": "2014-02-07T12:19:05Z",
			"git_url": "git://github.com/yrezgui/DocumentHandler.git",
			"ssh_url": "git@github.com:yrezgui/DocumentHandler.git",
			"clone_url": "https://github.com/yrezgui/DocumentHandler.git",
			"svn_url": "https://github.com/yrezgui/DocumentHandler",
			"homepage": null,
			"size": 179,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Java",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 25472085,
			"name": "dokomygp",
			"full_name": "yrezgui/dokomygp",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/dokomygp",
			"description": "Mobile app to search a general practitioner in England",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/dokomygp",
			"forks_url": "https://api.github.com/repos/yrezgui/dokomygp/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/dokomygp/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/dokomygp/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/dokomygp/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/dokomygp/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/dokomygp/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/dokomygp/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/dokomygp/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/dokomygp/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/dokomygp/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/dokomygp/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/dokomygp/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/dokomygp/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/dokomygp/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/dokomygp/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/dokomygp/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/dokomygp/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/dokomygp/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/dokomygp/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/dokomygp/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/dokomygp/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/dokomygp/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/dokomygp/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/dokomygp/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/dokomygp/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/dokomygp/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/dokomygp/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/dokomygp/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/dokomygp/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/dokomygp/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/dokomygp/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/dokomygp/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/dokomygp/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/dokomygp/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/dokomygp/releases{/id}",
			"created_at": "2014-10-20T15:11:53Z",
			"updated_at": "2014-11-03T14:34:35Z",
			"pushed_at": "2014-11-14T12:09:08Z",
			"git_url": "git://github.com/yrezgui/dokomygp.git",
			"ssh_url": "git@github.com:yrezgui/dokomygp.git",
			"clone_url": "https://github.com/yrezgui/dokomygp.git",
			"svn_url": "https://github.com/yrezgui/dokomygp",
			"homepage": null,
			"size": 5400,
			"stargazers_count": 2,
			"watchers_count": 2,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 2,
			"default_branch": "master"
		},
		{
			"id": 22697668,
			"name": "dropbox-polymer-demo",
			"full_name": "yrezgui/dropbox-polymer-demo",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/dropbox-polymer-demo",
			"description": "",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo",
			"forks_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/dropbox-polymer-demo/releases{/id}",
			"created_at": "2014-08-06T20:49:47Z",
			"updated_at": "2015-07-31T19:02:57Z",
			"pushed_at": "2014-08-06T20:59:11Z",
			"git_url": "git://github.com/yrezgui/dropbox-polymer-demo.git",
			"ssh_url": "git@github.com:yrezgui/dropbox-polymer-demo.git",
			"clone_url": "https://github.com/yrezgui/dropbox-polymer-demo.git",
			"svn_url": "https://github.com/yrezgui/dropbox-polymer-demo",
			"homepage": null,
			"size": 236,
			"stargazers_count": 2,
			"watchers_count": 2,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 2,
			"default_branch": "master"
		},
		{
			"id": 11248857,
			"name": "ElementTransitions.js",
			"full_name": "yrezgui/ElementTransitions.js",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/ElementTransitions.js",
			"description": "Simple transitions for web pages",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/ElementTransitions.js",
			"forks_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/ElementTransitions.js/releases{/id}",
			"created_at": "2013-07-08T07:57:22Z",
			"updated_at": "2013-07-08T07:57:22Z",
			"pushed_at": "2013-07-07T19:46:54Z",
			"git_url": "git://github.com/yrezgui/ElementTransitions.js.git",
			"ssh_url": "git@github.com:yrezgui/ElementTransitions.js.git",
			"clone_url": "https://github.com/yrezgui/ElementTransitions.js.git",
			"svn_url": "https://github.com/yrezgui/ElementTransitions.js",
			"homepage": "http://dan-silver.github.io/ElementTransitions.js/",
			"size": 113,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 34908295,
			"name": "etcar",
			"full_name": "yrezgui/etcar",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/etcar",
			"description": "React useful pieces of code",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/etcar",
			"forks_url": "https://api.github.com/repos/yrezgui/etcar/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/etcar/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/etcar/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/etcar/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/etcar/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/etcar/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/etcar/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/etcar/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/etcar/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/etcar/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/etcar/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/etcar/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/etcar/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/etcar/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/etcar/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/etcar/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/etcar/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/etcar/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/etcar/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/etcar/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/etcar/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/etcar/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/etcar/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/etcar/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/etcar/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/etcar/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/etcar/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/etcar/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/etcar/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/etcar/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/etcar/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/etcar/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/etcar/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/etcar/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/etcar/releases{/id}",
			"created_at": "2015-05-01T15:07:10Z",
			"updated_at": "2015-05-01T15:17:42Z",
			"pushed_at": "2015-05-01T15:17:42Z",
			"git_url": "git://github.com/yrezgui/etcar.git",
			"ssh_url": "git@github.com:yrezgui/etcar.git",
			"clone_url": "https://github.com/yrezgui/etcar.git",
			"svn_url": "https://github.com/yrezgui/etcar",
			"homepage": null,
			"size": 132,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 33835103,
			"name": "etcar-dispatcher",
			"full_name": "yrezgui/etcar-dispatcher",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/etcar-dispatcher",
			"description": "Flux dispatcher ready to use (based on the ReactJS one)",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/etcar-dispatcher",
			"forks_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/etcar-dispatcher/releases{/id}",
			"created_at": "2015-04-12T21:44:25Z",
			"updated_at": "2015-04-12T22:50:45Z",
			"pushed_at": "2015-04-12T22:51:30Z",
			"git_url": "git://github.com/yrezgui/etcar-dispatcher.git",
			"ssh_url": "git@github.com:yrezgui/etcar-dispatcher.git",
			"clone_url": "https://github.com/yrezgui/etcar-dispatcher.git",
			"svn_url": "https://github.com/yrezgui/etcar-dispatcher",
			"homepage": "",
			"size": 136,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 25879115,
			"name": "FileSaver.js",
			"full_name": "yrezgui/FileSaver.js",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/FileSaver.js",
			"description": "An HTML5 saveAs() FileSaver implementation",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/FileSaver.js",
			"forks_url": "https://api.github.com/repos/yrezgui/FileSaver.js/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/FileSaver.js/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/FileSaver.js/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/FileSaver.js/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/FileSaver.js/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/FileSaver.js/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/FileSaver.js/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/FileSaver.js/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/FileSaver.js/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/FileSaver.js/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/FileSaver.js/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/FileSaver.js/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/FileSaver.js/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/FileSaver.js/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/FileSaver.js/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/FileSaver.js/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/FileSaver.js/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/FileSaver.js/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/FileSaver.js/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/FileSaver.js/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/FileSaver.js/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/FileSaver.js/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/FileSaver.js/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/FileSaver.js/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/FileSaver.js/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/FileSaver.js/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/FileSaver.js/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/FileSaver.js/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/FileSaver.js/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/FileSaver.js/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/FileSaver.js/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/FileSaver.js/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/FileSaver.js/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/FileSaver.js/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/FileSaver.js/releases{/id}",
			"created_at": "2014-10-28T16:34:12Z",
			"updated_at": "2014-10-28T16:44:39Z",
			"pushed_at": "2014-10-28T16:44:39Z",
			"git_url": "git://github.com/yrezgui/FileSaver.js.git",
			"ssh_url": "git@github.com:yrezgui/FileSaver.js.git",
			"clone_url": "https://github.com/yrezgui/FileSaver.js.git",
			"svn_url": "https://github.com/yrezgui/FileSaver.js",
			"homepage": "http://eligrey.com/blog/post/saving-generated-files-on-the-client-side",
			"size": 174,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 26399838,
			"name": "Flatby",
			"full_name": "yrezgui/Flatby",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Flatby",
			"description": "Flatby - Flat UI Kit",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Flatby",
			"forks_url": "https://api.github.com/repos/yrezgui/Flatby/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Flatby/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Flatby/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Flatby/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Flatby/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Flatby/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Flatby/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Flatby/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Flatby/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Flatby/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Flatby/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Flatby/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Flatby/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Flatby/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Flatby/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Flatby/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Flatby/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Flatby/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Flatby/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Flatby/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Flatby/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Flatby/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Flatby/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Flatby/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Flatby/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Flatby/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Flatby/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Flatby/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Flatby/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Flatby/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Flatby/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Flatby/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Flatby/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Flatby/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Flatby/releases{/id}",
			"created_at": "2014-11-09T15:27:31Z",
			"updated_at": "2014-11-09T15:27:29Z",
			"pushed_at": "2014-01-14T15:09:37Z",
			"git_url": "git://github.com/yrezgui/Flatby.git",
			"ssh_url": "git@github.com:yrezgui/Flatby.git",
			"clone_url": "https://github.com/yrezgui/Flatby.git",
			"svn_url": "https://github.com/yrezgui/Flatby",
			"homepage": "",
			"size": 2641,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 26399834,
			"name": "Flatby-2",
			"full_name": "yrezgui/Flatby-2",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Flatby-2",
			"description": "",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Flatby-2",
			"forks_url": "https://api.github.com/repos/yrezgui/Flatby-2/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Flatby-2/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Flatby-2/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Flatby-2/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Flatby-2/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Flatby-2/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Flatby-2/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Flatby-2/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Flatby-2/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Flatby-2/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Flatby-2/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Flatby-2/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Flatby-2/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Flatby-2/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Flatby-2/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Flatby-2/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Flatby-2/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Flatby-2/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Flatby-2/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Flatby-2/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Flatby-2/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Flatby-2/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Flatby-2/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Flatby-2/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Flatby-2/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Flatby-2/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Flatby-2/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Flatby-2/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Flatby-2/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Flatby-2/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Flatby-2/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Flatby-2/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Flatby-2/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Flatby-2/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Flatby-2/releases{/id}",
			"created_at": "2014-11-09T15:27:24Z",
			"updated_at": "2014-11-09T15:27:21Z",
			"pushed_at": "2014-04-28T19:04:31Z",
			"git_url": "git://github.com/yrezgui/Flatby-2.git",
			"ssh_url": "git@github.com:yrezgui/Flatby-2.git",
			"clone_url": "https://github.com/yrezgui/Flatby-2.git",
			"svn_url": "https://github.com/yrezgui/Flatby-2",
			"homepage": null,
			"size": 1508,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10458063,
			"name": "flouss",
			"full_name": "yrezgui/flouss",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/flouss",
			"description": "Paid content management system. Powered by Stripe,Amazon APIs and NodeJS & AngularJS libraries",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/flouss",
			"forks_url": "https://api.github.com/repos/yrezgui/flouss/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/flouss/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/flouss/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/flouss/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/flouss/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/flouss/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/flouss/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/flouss/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/flouss/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/flouss/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/flouss/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/flouss/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/flouss/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/flouss/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/flouss/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/flouss/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/flouss/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/flouss/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/flouss/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/flouss/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/flouss/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/flouss/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/flouss/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/flouss/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/flouss/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/flouss/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/flouss/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/flouss/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/flouss/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/flouss/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/flouss/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/flouss/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/flouss/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/flouss/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/flouss/releases{/id}",
			"created_at": "2013-06-03T15:44:06Z",
			"updated_at": "2015-01-09T19:46:08Z",
			"pushed_at": "2014-02-13T23:42:31Z",
			"git_url": "git://github.com/yrezgui/flouss.git",
			"ssh_url": "git@github.com:yrezgui/flouss.git",
			"clone_url": "https://github.com/yrezgui/flouss.git",
			"svn_url": "https://github.com/yrezgui/flouss",
			"homepage": "",
			"size": 1415,
			"stargazers_count": 25,
			"watchers_count": 25,
			"language": "CSS",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 13,
			"mirror_url": null,
			"open_issues_count": 1,
			"forks": 13,
			"open_issues": 1,
			"watchers": 25,
			"default_branch": "master"
		},
		{
			"id": 28688260,
			"name": "font-mfizz",
			"full_name": "yrezgui/font-mfizz",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/font-mfizz",
			"description": "Font Mfizz - Vector Icons for Technology and Software Geeks",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/font-mfizz",
			"forks_url": "https://api.github.com/repos/yrezgui/font-mfizz/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/font-mfizz/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/font-mfizz/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/font-mfizz/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/font-mfizz/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/font-mfizz/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/font-mfizz/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/font-mfizz/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/font-mfizz/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/font-mfizz/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/font-mfizz/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/font-mfizz/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/font-mfizz/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/font-mfizz/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/font-mfizz/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/font-mfizz/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/font-mfizz/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/font-mfizz/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/font-mfizz/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/font-mfizz/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/font-mfizz/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/font-mfizz/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/font-mfizz/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/font-mfizz/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/font-mfizz/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/font-mfizz/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/font-mfizz/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/font-mfizz/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/font-mfizz/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/font-mfizz/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/font-mfizz/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/font-mfizz/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/font-mfizz/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/font-mfizz/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/font-mfizz/releases{/id}",
			"created_at": "2015-01-01T14:40:19Z",
			"updated_at": "2015-01-01T16:21:45Z",
			"pushed_at": "2015-01-01T16:21:45Z",
			"git_url": "git://github.com/yrezgui/font-mfizz.git",
			"ssh_url": "git@github.com:yrezgui/font-mfizz.git",
			"clone_url": "https://github.com/yrezgui/font-mfizz.git",
			"svn_url": "https://github.com/yrezgui/font-mfizz",
			"homepage": null,
			"size": 568,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "CSS",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 14261837,
			"name": "foodme",
			"full_name": "yrezgui/foodme",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/foodme",
			"description": "",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/foodme",
			"forks_url": "https://api.github.com/repos/yrezgui/foodme/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/foodme/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/foodme/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/foodme/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/foodme/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/foodme/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/foodme/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/foodme/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/foodme/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/foodme/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/foodme/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/foodme/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/foodme/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/foodme/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/foodme/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/foodme/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/foodme/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/foodme/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/foodme/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/foodme/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/foodme/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/foodme/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/foodme/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/foodme/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/foodme/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/foodme/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/foodme/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/foodme/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/foodme/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/foodme/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/foodme/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/foodme/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/foodme/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/foodme/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/foodme/releases{/id}",
			"created_at": "2013-11-09T17:47:13Z",
			"updated_at": "2013-11-09T17:47:14Z",
			"pushed_at": "2012-11-27T01:13:27Z",
			"git_url": "git://github.com/yrezgui/foodme.git",
			"ssh_url": "git@github.com:yrezgui/foodme.git",
			"clone_url": "https://github.com/yrezgui/foodme.git",
			"svn_url": "https://github.com/yrezgui/foodme",
			"homepage": null,
			"size": 76,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 23548440,
			"name": "furaito",
			"full_name": "yrezgui/furaito",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/furaito",
			"description": "Track your flights",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/furaito",
			"forks_url": "https://api.github.com/repos/yrezgui/furaito/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/furaito/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/furaito/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/furaito/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/furaito/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/furaito/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/furaito/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/furaito/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/furaito/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/furaito/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/furaito/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/furaito/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/furaito/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/furaito/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/furaito/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/furaito/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/furaito/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/furaito/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/furaito/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/furaito/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/furaito/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/furaito/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/furaito/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/furaito/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/furaito/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/furaito/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/furaito/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/furaito/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/furaito/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/furaito/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/furaito/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/furaito/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/furaito/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/furaito/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/furaito/releases{/id}",
			"created_at": "2014-09-01T16:19:34Z",
			"updated_at": "2014-09-09T14:44:01Z",
			"pushed_at": "2014-09-10T22:49:02Z",
			"git_url": "git://github.com/yrezgui/furaito.git",
			"ssh_url": "git@github.com:yrezgui/furaito.git",
			"clone_url": "https://github.com/yrezgui/furaito.git",
			"svn_url": "https://github.com/yrezgui/furaito",
			"homepage": null,
			"size": 4428,
			"stargazers_count": 4,
			"watchers_count": 4,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 4,
			"default_branch": "master"
		},
		{
			"id": 26048787,
			"name": "gaia",
			"full_name": "yrezgui/gaia",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/gaia",
			"description": "Bug 1087038. Gaia is a HTML5-based Phone UI for the Boot 2 Gecko Project. NOTE: For details of what branches are used for what releases, see",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/gaia",
			"forks_url": "https://api.github.com/repos/yrezgui/gaia/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/gaia/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/gaia/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/gaia/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/gaia/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/gaia/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/gaia/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/gaia/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/gaia/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/gaia/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/gaia/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/gaia/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/gaia/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/gaia/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/gaia/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/gaia/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/gaia/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/gaia/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/gaia/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/gaia/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/gaia/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/gaia/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/gaia/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/gaia/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/gaia/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/gaia/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/gaia/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/gaia/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/gaia/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/gaia/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/gaia/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/gaia/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/gaia/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/gaia/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/gaia/releases{/id}",
			"created_at": "2014-11-01T11:22:20Z",
			"updated_at": "2014-11-01T11:22:18Z",
			"pushed_at": "2014-11-01T04:54:49Z",
			"git_url": "git://github.com/yrezgui/gaia.git",
			"ssh_url": "git@github.com:yrezgui/gaia.git",
			"clone_url": "https://github.com/yrezgui/gaia.git",
			"svn_url": "https://github.com/yrezgui/gaia",
			"homepage": "https://wiki.mozilla.org/B2G",
			"size": 866516,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11038022,
			"name": "geo-points-corrector",
			"full_name": "yrezgui/geo-points-corrector",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/geo-points-corrector",
			"description": null,
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/geo-points-corrector",
			"forks_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/geo-points-corrector/releases{/id}",
			"created_at": "2013-06-28T21:02:57Z",
			"updated_at": "2013-12-11T02:34:44Z",
			"pushed_at": "2013-07-01T05:42:00Z",
			"git_url": "git://github.com/yrezgui/geo-points-corrector.git",
			"ssh_url": "git@github.com:yrezgui/geo-points-corrector.git",
			"clone_url": "https://github.com/yrezgui/geo-points-corrector.git",
			"svn_url": "https://github.com/yrezgui/geo-points-corrector",
			"homepage": null,
			"size": 812,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 19354719,
			"name": "github-cheat-sheet",
			"full_name": "yrezgui/github-cheat-sheet",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/github-cheat-sheet",
			"description": "A list of cool features of Git and GitHub.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/github-cheat-sheet",
			"forks_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/github-cheat-sheet/releases{/id}",
			"created_at": "2014-05-01T19:11:56Z",
			"updated_at": "2014-05-01T20:13:31Z",
			"pushed_at": "2014-11-01T00:20:47Z",
			"git_url": "git://github.com/yrezgui/github-cheat-sheet.git",
			"ssh_url": "git@github.com:yrezgui/github-cheat-sheet.git",
			"clone_url": "https://github.com/yrezgui/github-cheat-sheet.git",
			"svn_url": "https://github.com/yrezgui/github-cheat-sheet",
			"homepage": "",
			"size": 286,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 40290338,
			"name": "github-projects",
			"full_name": "yrezgui/github-projects",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/github-projects",
			"description": "Show the GitHub projects of a user in a nice way",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/github-projects",
			"forks_url": "https://api.github.com/repos/yrezgui/github-projects/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/github-projects/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/github-projects/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/github-projects/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/github-projects/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/github-projects/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/github-projects/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/github-projects/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/github-projects/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/github-projects/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/github-projects/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/github-projects/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/github-projects/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/github-projects/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/github-projects/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/github-projects/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/github-projects/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/github-projects/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/github-projects/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/github-projects/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/github-projects/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/github-projects/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/github-projects/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/github-projects/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/github-projects/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/github-projects/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/github-projects/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/github-projects/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/github-projects/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/github-projects/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/github-projects/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/github-projects/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/github-projects/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/github-projects/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/github-projects/releases{/id}",
			"created_at": "2015-08-06T07:14:07Z",
			"updated_at": "2015-08-07T16:32:36Z",
			"pushed_at": "2015-08-07T17:18:01Z",
			"git_url": "git://github.com/yrezgui/github-projects.git",
			"ssh_url": "git@github.com:yrezgui/github-projects.git",
			"clone_url": "https://github.com/yrezgui/github-projects.git",
			"svn_url": "https://github.com/yrezgui/github-projects",
			"homepage": "",
			"size": 0,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 21521846,
			"name": "googledrive-firefoxos",
			"full_name": "yrezgui/googledrive-firefoxos",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/googledrive-firefoxos",
			"description": "Google Drive client for FirefoxOS",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos",
			"forks_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/googledrive-firefoxos/releases{/id}",
			"created_at": "2014-07-05T14:41:28Z",
			"updated_at": "2014-07-05T14:41:32Z",
			"pushed_at": "2014-07-05T14:41:28Z",
			"git_url": "git://github.com/yrezgui/googledrive-firefoxos.git",
			"ssh_url": "git@github.com:yrezgui/googledrive-firefoxos.git",
			"clone_url": "https://github.com/yrezgui/googledrive-firefoxos.git",
			"svn_url": "https://github.com/yrezgui/googledrive-firefoxos",
			"homepage": "",
			"size": 0,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11248606,
			"name": "grunt-styleguide",
			"full_name": "yrezgui/grunt-styleguide",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/grunt-styleguide",
			"description": "Universal CSS styleguide generator for grunt",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/grunt-styleguide",
			"forks_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/grunt-styleguide/releases{/id}",
			"created_at": "2013-07-08T07:45:29Z",
			"updated_at": "2013-07-08T07:45:29Z",
			"pushed_at": "2013-06-16T02:07:41Z",
			"git_url": "git://github.com/yrezgui/grunt-styleguide.git",
			"ssh_url": "git@github.com:yrezgui/grunt-styleguide.git",
			"clone_url": "https://github.com/yrezgui/grunt-styleguide.git",
			"svn_url": "https://github.com/yrezgui/grunt-styleguide",
			"homepage": null,
			"size": 456,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 21277207,
			"name": "hapi-lxjs",
			"full_name": "yrezgui/hapi-lxjs",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/hapi-lxjs",
			"description": "LXJS Repository for API building",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/hapi-lxjs",
			"forks_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/hapi-lxjs/releases{/id}",
			"created_at": "2014-06-27T13:48:00Z",
			"updated_at": "2014-06-27T10:46:19Z",
			"pushed_at": "2014-06-27T19:24:13Z",
			"git_url": "git://github.com/yrezgui/hapi-lxjs.git",
			"ssh_url": "git@github.com:yrezgui/hapi-lxjs.git",
			"clone_url": "https://github.com/yrezgui/hapi-lxjs.git",
			"svn_url": "https://github.com/yrezgui/hapi-lxjs",
			"homepage": null,
			"size": 199,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 28648874,
			"name": "hashimitsu",
			"full_name": "yrezgui/hashimitsu",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/hashimitsu",
			"description": "Check the last remote jobs",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/hashimitsu",
			"forks_url": "https://api.github.com/repos/yrezgui/hashimitsu/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/hashimitsu/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/hashimitsu/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/hashimitsu/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/hashimitsu/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/hashimitsu/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/hashimitsu/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/hashimitsu/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/hashimitsu/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/hashimitsu/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/hashimitsu/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/hashimitsu/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/hashimitsu/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/hashimitsu/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/hashimitsu/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/hashimitsu/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/hashimitsu/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/hashimitsu/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/hashimitsu/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/hashimitsu/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/hashimitsu/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/hashimitsu/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/hashimitsu/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/hashimitsu/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/hashimitsu/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/hashimitsu/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/hashimitsu/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/hashimitsu/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/hashimitsu/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/hashimitsu/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/hashimitsu/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/hashimitsu/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/hashimitsu/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/hashimitsu/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/hashimitsu/releases{/id}",
			"created_at": "2014-12-30T23:19:48Z",
			"updated_at": "2015-01-05T02:42:39Z",
			"pushed_at": "2015-01-05T02:42:38Z",
			"git_url": "git://github.com/yrezgui/hashimitsu.git",
			"ssh_url": "git@github.com:yrezgui/hashimitsu.git",
			"clone_url": "https://github.com/yrezgui/hashimitsu.git",
			"svn_url": "https://github.com/yrezgui/hashimitsu",
			"homepage": null,
			"size": 184,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 18216785,
			"name": "Hazelnut",
			"full_name": "yrezgui/Hazelnut",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Hazelnut",
			"description": "Phonegap plugin to display files from URL",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/Hazelnut",
			"forks_url": "https://api.github.com/repos/yrezgui/Hazelnut/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Hazelnut/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Hazelnut/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Hazelnut/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Hazelnut/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Hazelnut/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Hazelnut/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Hazelnut/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Hazelnut/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Hazelnut/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Hazelnut/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Hazelnut/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Hazelnut/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Hazelnut/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Hazelnut/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Hazelnut/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Hazelnut/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Hazelnut/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Hazelnut/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Hazelnut/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Hazelnut/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Hazelnut/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Hazelnut/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Hazelnut/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Hazelnut/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Hazelnut/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Hazelnut/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Hazelnut/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Hazelnut/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Hazelnut/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Hazelnut/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Hazelnut/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Hazelnut/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Hazelnut/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Hazelnut/releases{/id}",
			"created_at": "2014-03-28T15:27:57Z",
			"updated_at": "2015-03-03T21:24:52Z",
			"pushed_at": "2014-04-16T14:30:45Z",
			"git_url": "git://github.com/yrezgui/Hazelnut.git",
			"ssh_url": "git@github.com:yrezgui/Hazelnut.git",
			"clone_url": "https://github.com/yrezgui/Hazelnut.git",
			"svn_url": "https://github.com/yrezgui/Hazelnut",
			"homepage": null,
			"size": 196,
			"stargazers_count": 4,
			"watchers_count": 4,
			"language": "Objective-C",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 2,
			"mirror_url": null,
			"open_issues_count": 2,
			"forks": 2,
			"open_issues": 2,
			"watchers": 4,
			"default_branch": "master"
		},
		{
			"id": 21017392,
			"name": "hey-app",
			"full_name": "yrezgui/hey-app",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/hey-app",
			"description": "Clone of Yo app in HTML5",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/hey-app",
			"forks_url": "https://api.github.com/repos/yrezgui/hey-app/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/hey-app/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/hey-app/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/hey-app/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/hey-app/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/hey-app/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/hey-app/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/hey-app/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/hey-app/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/hey-app/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/hey-app/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/hey-app/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/hey-app/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/hey-app/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/hey-app/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/hey-app/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/hey-app/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/hey-app/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/hey-app/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/hey-app/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/hey-app/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/hey-app/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/hey-app/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/hey-app/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/hey-app/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/hey-app/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/hey-app/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/hey-app/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/hey-app/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/hey-app/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/hey-app/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/hey-app/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/hey-app/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/hey-app/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/hey-app/releases{/id}",
			"created_at": "2014-06-19T22:13:14Z",
			"updated_at": "2014-11-30T13:52:23Z",
			"pushed_at": "2014-06-19T22:24:37Z",
			"git_url": "git://github.com/yrezgui/hey-app.git",
			"ssh_url": "git@github.com:yrezgui/hey-app.git",
			"clone_url": "https://github.com/yrezgui/hey-app.git",
			"svn_url": "https://github.com/yrezgui/hey-app",
			"homepage": null,
			"size": 144,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "CSS",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 33821105,
			"name": "http-jump",
			"full_name": "yrezgui/http-jump",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/http-jump",
			"description": "Console to see every HTTP requests made in a page",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/http-jump",
			"forks_url": "https://api.github.com/repos/yrezgui/http-jump/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/http-jump/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/http-jump/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/http-jump/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/http-jump/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/http-jump/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/http-jump/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/http-jump/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/http-jump/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/http-jump/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/http-jump/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/http-jump/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/http-jump/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/http-jump/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/http-jump/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/http-jump/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/http-jump/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/http-jump/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/http-jump/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/http-jump/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/http-jump/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/http-jump/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/http-jump/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/http-jump/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/http-jump/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/http-jump/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/http-jump/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/http-jump/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/http-jump/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/http-jump/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/http-jump/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/http-jump/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/http-jump/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/http-jump/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/http-jump/releases{/id}",
			"created_at": "2015-04-12T14:58:00Z",
			"updated_at": "2015-04-12T14:58:21Z",
			"pushed_at": "2015-04-12T14:58:00Z",
			"git_url": "git://github.com/yrezgui/http-jump.git",
			"ssh_url": "git@github.com:yrezgui/http-jump.git",
			"clone_url": "https://github.com/yrezgui/http-jump.git",
			"svn_url": "https://github.com/yrezgui/http-jump",
			"homepage": "",
			"size": 124,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 34744317,
			"name": "import-integrate",
			"full_name": "yrezgui/import-integrate",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/import-integrate",
			"description": "Integrate easily an import.io API in your website",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/import-integrate",
			"forks_url": "https://api.github.com/repos/yrezgui/import-integrate/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/import-integrate/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/import-integrate/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/import-integrate/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/import-integrate/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/import-integrate/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/import-integrate/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/import-integrate/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/import-integrate/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/import-integrate/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/import-integrate/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/import-integrate/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/import-integrate/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/import-integrate/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/import-integrate/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/import-integrate/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/import-integrate/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/import-integrate/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/import-integrate/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/import-integrate/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/import-integrate/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/import-integrate/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/import-integrate/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/import-integrate/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/import-integrate/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/import-integrate/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/import-integrate/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/import-integrate/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/import-integrate/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/import-integrate/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/import-integrate/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/import-integrate/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/import-integrate/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/import-integrate/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/import-integrate/releases{/id}",
			"created_at": "2015-04-28T17:06:33Z",
			"updated_at": "2015-08-03T15:14:32Z",
			"pushed_at": "2015-08-03T15:14:31Z",
			"git_url": "git://github.com/yrezgui/import-integrate.git",
			"ssh_url": "git@github.com:yrezgui/import-integrate.git",
			"clone_url": "https://github.com/yrezgui/import-integrate.git",
			"svn_url": "https://github.com/yrezgui/import-integrate",
			"homepage": "",
			"size": 140,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 38434590,
			"name": "importio-graphql",
			"full_name": "yrezgui/importio-graphql",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/importio-graphql",
			"description": "Playground of import.io API with GraphQL",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/importio-graphql",
			"forks_url": "https://api.github.com/repos/yrezgui/importio-graphql/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/importio-graphql/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/importio-graphql/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/importio-graphql/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/importio-graphql/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/importio-graphql/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/importio-graphql/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/importio-graphql/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/importio-graphql/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/importio-graphql/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/importio-graphql/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/importio-graphql/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/importio-graphql/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/importio-graphql/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/importio-graphql/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/importio-graphql/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/importio-graphql/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/importio-graphql/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/importio-graphql/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/importio-graphql/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/importio-graphql/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/importio-graphql/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/importio-graphql/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/importio-graphql/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/importio-graphql/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/importio-graphql/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/importio-graphql/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/importio-graphql/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/importio-graphql/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/importio-graphql/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/importio-graphql/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/importio-graphql/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/importio-graphql/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/importio-graphql/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/importio-graphql/releases{/id}",
			"created_at": "2015-07-02T13:33:56Z",
			"updated_at": "2015-07-02T13:33:56Z",
			"pushed_at": "2015-07-02T13:33:56Z",
			"git_url": "git://github.com/yrezgui/importio-graphql.git",
			"ssh_url": "git@github.com:yrezgui/importio-graphql.git",
			"clone_url": "https://github.com/yrezgui/importio-graphql.git",
			"svn_url": "https://github.com/yrezgui/importio-graphql",
			"homepage": null,
			"size": 120,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 26439828,
			"name": "importio-javascript",
			"full_name": "yrezgui/importio-javascript",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/importio-javascript",
			"description": "Import.io JavaScript Style Guide",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/importio-javascript",
			"forks_url": "https://api.github.com/repos/yrezgui/importio-javascript/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/importio-javascript/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/importio-javascript/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/importio-javascript/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/importio-javascript/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/importio-javascript/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/importio-javascript/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/importio-javascript/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/importio-javascript/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/importio-javascript/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/importio-javascript/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/importio-javascript/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/importio-javascript/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/importio-javascript/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/importio-javascript/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/importio-javascript/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/importio-javascript/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/importio-javascript/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/importio-javascript/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/importio-javascript/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/importio-javascript/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/importio-javascript/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/importio-javascript/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/importio-javascript/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/importio-javascript/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/importio-javascript/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/importio-javascript/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/importio-javascript/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/importio-javascript/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/importio-javascript/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/importio-javascript/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/importio-javascript/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/importio-javascript/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/importio-javascript/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/importio-javascript/releases{/id}",
			"created_at": "2014-11-10T14:30:33Z",
			"updated_at": "2014-11-10T14:31:00Z",
			"pushed_at": "2014-11-10T15:24:44Z",
			"git_url": "git://github.com/yrezgui/importio-javascript.git",
			"ssh_url": "git@github.com:yrezgui/importio-javascript.git",
			"clone_url": "https://github.com/yrezgui/importio-javascript.git",
			"svn_url": "https://github.com/yrezgui/importio-javascript",
			"homepage": "",
			"size": 446,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 30539979,
			"name": "iojs-fr",
			"full_name": "yrezgui/iojs-fr",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/iojs-fr",
			"description": "Un fork de node.js pour la communauté, par la communauté.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/iojs-fr",
			"forks_url": "https://api.github.com/repos/yrezgui/iojs-fr/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/iojs-fr/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/iojs-fr/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/iojs-fr/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/iojs-fr/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/iojs-fr/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/iojs-fr/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/iojs-fr/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/iojs-fr/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/iojs-fr/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/iojs-fr/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/iojs-fr/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/iojs-fr/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/iojs-fr/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/iojs-fr/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/iojs-fr/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/iojs-fr/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/iojs-fr/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/iojs-fr/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/iojs-fr/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/iojs-fr/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/iojs-fr/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/iojs-fr/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/iojs-fr/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/iojs-fr/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/iojs-fr/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/iojs-fr/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/iojs-fr/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/iojs-fr/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/iojs-fr/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/iojs-fr/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/iojs-fr/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/iojs-fr/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/iojs-fr/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/iojs-fr/releases{/id}",
			"created_at": "2015-02-09T14:36:04Z",
			"updated_at": "2015-02-09T10:24:02Z",
			"pushed_at": "2015-02-09T13:00:14Z",
			"git_url": "git://github.com/yrezgui/iojs-fr.git",
			"ssh_url": "git@github.com:yrezgui/iojs-fr.git",
			"clone_url": "https://github.com/yrezgui/iojs-fr.git",
			"svn_url": "https://github.com/yrezgui/iojs-fr",
			"homepage": "https://iojs.org/",
			"size": 63,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 15932898,
			"name": "ionic",
			"full_name": "yrezgui/ionic",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/ionic",
			"description": "Advanced HTML5 Mobile App Framework. A beautiful front-end framework for developing hybrid mobile apps in HTML5",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/ionic",
			"forks_url": "https://api.github.com/repos/yrezgui/ionic/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/ionic/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/ionic/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/ionic/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/ionic/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/ionic/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/ionic/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/ionic/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/ionic/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/ionic/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/ionic/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/ionic/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/ionic/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/ionic/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/ionic/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/ionic/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/ionic/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/ionic/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/ionic/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/ionic/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/ionic/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/ionic/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/ionic/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/ionic/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/ionic/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/ionic/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/ionic/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/ionic/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/ionic/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/ionic/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/ionic/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/ionic/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/ionic/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/ionic/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/ionic/releases{/id}",
			"created_at": "2014-01-15T11:10:43Z",
			"updated_at": "2014-01-15T11:10:44Z",
			"pushed_at": "2014-01-15T04:05:19Z",
			"git_url": "git://github.com/yrezgui/ionic.git",
			"ssh_url": "git@github.com:yrezgui/ionic.git",
			"clone_url": "https://github.com/yrezgui/ionic.git",
			"svn_url": "https://github.com/yrezgui/ionic",
			"homepage": "http://ionicframework.com/",
			"size": 16773,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 18454505,
			"name": "ionic-rocket",
			"full_name": "yrezgui/ionic-rocket",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/ionic-rocket",
			"description": "Best base to bootstrap your HTML5 mobile application",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/ionic-rocket",
			"forks_url": "https://api.github.com/repos/yrezgui/ionic-rocket/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/ionic-rocket/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/ionic-rocket/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/ionic-rocket/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/ionic-rocket/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/ionic-rocket/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/ionic-rocket/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/ionic-rocket/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/ionic-rocket/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/ionic-rocket/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/ionic-rocket/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/ionic-rocket/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/ionic-rocket/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/ionic-rocket/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/ionic-rocket/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/ionic-rocket/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/ionic-rocket/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/ionic-rocket/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/ionic-rocket/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/ionic-rocket/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/ionic-rocket/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/ionic-rocket/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/ionic-rocket/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/ionic-rocket/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/ionic-rocket/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/ionic-rocket/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/ionic-rocket/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/ionic-rocket/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/ionic-rocket/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/ionic-rocket/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/ionic-rocket/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/ionic-rocket/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/ionic-rocket/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/ionic-rocket/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/ionic-rocket/releases{/id}",
			"created_at": "2014-04-04T22:28:11Z",
			"updated_at": "2015-04-20T09:16:51Z",
			"pushed_at": "2014-05-12T16:14:59Z",
			"git_url": "git://github.com/yrezgui/ionic-rocket.git",
			"ssh_url": "git@github.com:yrezgui/ionic-rocket.git",
			"clone_url": "https://github.com/yrezgui/ionic-rocket.git",
			"svn_url": "https://github.com/yrezgui/ionic-rocket",
			"homepage": "",
			"size": 386,
			"stargazers_count": 26,
			"watchers_count": 26,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 4,
			"mirror_url": null,
			"open_issues_count": 13,
			"forks": 4,
			"open_issues": 13,
			"watchers": 26,
			"default_branch": "master"
		},
		{
			"id": 38441407,
			"name": "ionic-starter",
			"full_name": "yrezgui/ionic-starter",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/ionic-starter",
			"description": "Sample Ionic project to let you kick start your new project.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/ionic-starter",
			"forks_url": "https://api.github.com/repos/yrezgui/ionic-starter/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/ionic-starter/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/ionic-starter/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/ionic-starter/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/ionic-starter/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/ionic-starter/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/ionic-starter/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/ionic-starter/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/ionic-starter/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/ionic-starter/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/ionic-starter/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/ionic-starter/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/ionic-starter/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/ionic-starter/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/ionic-starter/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/ionic-starter/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/ionic-starter/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/ionic-starter/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/ionic-starter/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/ionic-starter/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/ionic-starter/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/ionic-starter/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/ionic-starter/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/ionic-starter/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/ionic-starter/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/ionic-starter/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/ionic-starter/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/ionic-starter/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/ionic-starter/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/ionic-starter/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/ionic-starter/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/ionic-starter/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/ionic-starter/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/ionic-starter/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/ionic-starter/releases{/id}",
			"created_at": "2015-07-02T15:41:24Z",
			"updated_at": "2015-07-02T15:41:26Z",
			"pushed_at": "2015-07-02T15:44:54Z",
			"git_url": "git://github.com/yrezgui/ionic-starter.git",
			"ssh_url": "git@github.com:yrezgui/ionic-starter.git",
			"clone_url": "https://github.com/yrezgui/ionic-starter.git",
			"svn_url": "https://github.com/yrezgui/ionic-starter",
			"homepage": "",
			"size": 8156,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 16105721,
			"name": "js-the-right-way",
			"full_name": "yrezgui/js-the-right-way",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/js-the-right-way",
			"description": "An easy-to-read, quick reference for JS best practices, accepted coding standards, and links around the Web",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/js-the-right-way",
			"forks_url": "https://api.github.com/repos/yrezgui/js-the-right-way/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/js-the-right-way/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/js-the-right-way/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/js-the-right-way/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/js-the-right-way/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/js-the-right-way/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/js-the-right-way/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/js-the-right-way/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/js-the-right-way/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/js-the-right-way/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/js-the-right-way/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/js-the-right-way/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/js-the-right-way/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/js-the-right-way/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/js-the-right-way/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/js-the-right-way/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/js-the-right-way/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/js-the-right-way/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/js-the-right-way/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/js-the-right-way/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/js-the-right-way/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/js-the-right-way/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/js-the-right-way/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/js-the-right-way/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/js-the-right-way/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/js-the-right-way/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/js-the-right-way/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/js-the-right-way/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/js-the-right-way/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/js-the-right-way/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/js-the-right-way/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/js-the-right-way/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/js-the-right-way/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/js-the-right-way/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/js-the-right-way/releases{/id}",
			"created_at": "2014-01-21T15:00:13Z",
			"updated_at": "2014-01-21T15:00:13Z",
			"pushed_at": "2014-01-21T13:29:14Z",
			"git_url": "git://github.com/yrezgui/js-the-right-way.git",
			"ssh_url": "git@github.com:yrezgui/js-the-right-way.git",
			"clone_url": "https://github.com/yrezgui/js-the-right-way.git",
			"svn_url": "https://github.com/yrezgui/js-the-right-way",
			"homepage": "http://jstherightway.org",
			"size": 423,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "CSS",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 15365358,
			"name": "kaishular",
			"full_name": "yrezgui/kaishular",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/kaishular",
			"description": "Bootstrap your AngularJS project",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/kaishular",
			"forks_url": "https://api.github.com/repos/yrezgui/kaishular/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/kaishular/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/kaishular/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/kaishular/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/kaishular/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/kaishular/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/kaishular/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/kaishular/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/kaishular/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/kaishular/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/kaishular/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/kaishular/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/kaishular/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/kaishular/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/kaishular/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/kaishular/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/kaishular/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/kaishular/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/kaishular/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/kaishular/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/kaishular/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/kaishular/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/kaishular/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/kaishular/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/kaishular/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/kaishular/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/kaishular/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/kaishular/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/kaishular/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/kaishular/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/kaishular/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/kaishular/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/kaishular/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/kaishular/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/kaishular/releases{/id}",
			"created_at": "2013-12-21T20:41:17Z",
			"updated_at": "2014-01-13T11:06:16Z",
			"pushed_at": "2014-01-13T11:06:15Z",
			"git_url": "git://github.com/yrezgui/kaishular.git",
			"ssh_url": "git@github.com:yrezgui/kaishular.git",
			"clone_url": "https://github.com/yrezgui/kaishular.git",
			"svn_url": "https://github.com/yrezgui/kaishular",
			"homepage": null,
			"size": 268,
			"stargazers_count": 2,
			"watchers_count": 2,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 2,
			"default_branch": "master"
		},
		{
			"id": 10869364,
			"name": "kifu",
			"full_name": "yrezgui/kifu",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/kifu",
			"description": "Web application to make easily a fundraising",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/kifu",
			"forks_url": "https://api.github.com/repos/yrezgui/kifu/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/kifu/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/kifu/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/kifu/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/kifu/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/kifu/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/kifu/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/kifu/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/kifu/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/kifu/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/kifu/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/kifu/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/kifu/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/kifu/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/kifu/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/kifu/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/kifu/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/kifu/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/kifu/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/kifu/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/kifu/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/kifu/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/kifu/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/kifu/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/kifu/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/kifu/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/kifu/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/kifu/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/kifu/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/kifu/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/kifu/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/kifu/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/kifu/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/kifu/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/kifu/releases{/id}",
			"created_at": "2013-06-22T17:22:10Z",
			"updated_at": "2014-05-12T11:25:34Z",
			"pushed_at": "2014-05-12T11:25:35Z",
			"git_url": "git://github.com/yrezgui/kifu.git",
			"ssh_url": "git@github.com:yrezgui/kifu.git",
			"clone_url": "https://github.com/yrezgui/kifu.git",
			"svn_url": "https://github.com/yrezgui/kifu",
			"homepage": "",
			"size": 221,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 1,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 1,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 6051429,
			"name": "kodigon",
			"full_name": "yrezgui/kodigon",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/kodigon",
			"description": "Kodigon is a web application which encode and decode (if possible) string in many algorithm formats like Base64, MD5, SHA1, etc. It's an example of AngularJS use.",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/kodigon",
			"forks_url": "https://api.github.com/repos/yrezgui/kodigon/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/kodigon/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/kodigon/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/kodigon/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/kodigon/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/kodigon/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/kodigon/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/kodigon/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/kodigon/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/kodigon/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/kodigon/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/kodigon/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/kodigon/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/kodigon/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/kodigon/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/kodigon/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/kodigon/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/kodigon/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/kodigon/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/kodigon/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/kodigon/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/kodigon/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/kodigon/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/kodigon/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/kodigon/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/kodigon/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/kodigon/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/kodigon/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/kodigon/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/kodigon/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/kodigon/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/kodigon/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/kodigon/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/kodigon/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/kodigon/releases{/id}",
			"created_at": "2012-10-02T20:59:33Z",
			"updated_at": "2015-06-19T13:48:53Z",
			"pushed_at": "2012-10-06T12:54:42Z",
			"git_url": "git://github.com/yrezgui/kodigon.git",
			"ssh_url": "git@github.com:yrezgui/kodigon.git",
			"clone_url": "https://github.com/yrezgui/kodigon.git",
			"svn_url": "https://github.com/yrezgui/kodigon",
			"homepage": "",
			"size": 485,
			"stargazers_count": 28,
			"watchers_count": 28,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 9,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 9,
			"open_issues": 0,
			"watchers": 28,
			"default_branch": "gh-pages"
		},
		{
			"id": 9113669,
			"name": "kotiz.io",
			"full_name": "yrezgui/kotiz.io",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/kotiz.io",
			"description": "",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/kotiz.io",
			"forks_url": "https://api.github.com/repos/yrezgui/kotiz.io/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/kotiz.io/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/kotiz.io/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/kotiz.io/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/kotiz.io/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/kotiz.io/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/kotiz.io/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/kotiz.io/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/kotiz.io/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/kotiz.io/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/kotiz.io/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/kotiz.io/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/kotiz.io/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/kotiz.io/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/kotiz.io/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/kotiz.io/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/kotiz.io/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/kotiz.io/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/kotiz.io/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/kotiz.io/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/kotiz.io/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/kotiz.io/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/kotiz.io/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/kotiz.io/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/kotiz.io/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/kotiz.io/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/kotiz.io/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/kotiz.io/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/kotiz.io/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/kotiz.io/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/kotiz.io/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/kotiz.io/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/kotiz.io/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/kotiz.io/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/kotiz.io/releases{/id}",
			"created_at": "2013-03-30T09:09:16Z",
			"updated_at": "2013-12-07T04:55:13Z",
			"pushed_at": "2013-04-06T20:51:10Z",
			"git_url": "git://github.com/yrezgui/kotiz.io.git",
			"ssh_url": "git@github.com:yrezgui/kotiz.io.git",
			"clone_url": "https://github.com/yrezgui/kotiz.io.git",
			"svn_url": "https://github.com/yrezgui/kotiz.io",
			"homepage": null,
			"size": 6056,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 16106662,
			"name": "Leap-Day",
			"full_name": "yrezgui/Leap-Day",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Leap-Day",
			"description": "GitHub Pages Theme: Leap Day",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Leap-Day",
			"forks_url": "https://api.github.com/repos/yrezgui/Leap-Day/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Leap-Day/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Leap-Day/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Leap-Day/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Leap-Day/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Leap-Day/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Leap-Day/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Leap-Day/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Leap-Day/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Leap-Day/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Leap-Day/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Leap-Day/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Leap-Day/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Leap-Day/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Leap-Day/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Leap-Day/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Leap-Day/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Leap-Day/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Leap-Day/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Leap-Day/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Leap-Day/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Leap-Day/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Leap-Day/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Leap-Day/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Leap-Day/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Leap-Day/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Leap-Day/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Leap-Day/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Leap-Day/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Leap-Day/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Leap-Day/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Leap-Day/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Leap-Day/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Leap-Day/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Leap-Day/releases{/id}",
			"created_at": "2014-01-21T15:30:23Z",
			"updated_at": "2014-08-29T03:30:11Z",
			"pushed_at": "2013-11-23T17:02:05Z",
			"git_url": "git://github.com/yrezgui/Leap-Day.git",
			"ssh_url": "git@github.com:yrezgui/Leap-Day.git",
			"clone_url": "https://github.com/yrezgui/Leap-Day.git",
			"svn_url": "https://github.com/yrezgui/Leap-Day",
			"homepage": "",
			"size": 599,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "CSS",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 18266691,
			"name": "Less-Leap-Day",
			"full_name": "yrezgui/Less-Leap-Day",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Less-Leap-Day",
			"description": "Leap Day GitHub Pages Theme but with LESS",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/Less-Leap-Day",
			"forks_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Less-Leap-Day/releases{/id}",
			"created_at": "2014-03-30T15:17:28Z",
			"updated_at": "2014-03-30T15:53:33Z",
			"pushed_at": "2014-03-30T15:53:31Z",
			"git_url": "git://github.com/yrezgui/Less-Leap-Day.git",
			"ssh_url": "git@github.com:yrezgui/Less-Leap-Day.git",
			"clone_url": "https://github.com/yrezgui/Less-Leap-Day.git",
			"svn_url": "https://github.com/yrezgui/Less-Leap-Day",
			"homepage": null,
			"size": 812,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "CSS",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 18105544,
			"name": "londonphonegap",
			"full_name": "yrezgui/londonphonegap",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/londonphonegap",
			"description": "Website of London Phonegap Meetup",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/londonphonegap",
			"forks_url": "https://api.github.com/repos/yrezgui/londonphonegap/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/londonphonegap/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/londonphonegap/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/londonphonegap/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/londonphonegap/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/londonphonegap/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/londonphonegap/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/londonphonegap/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/londonphonegap/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/londonphonegap/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/londonphonegap/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/londonphonegap/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/londonphonegap/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/londonphonegap/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/londonphonegap/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/londonphonegap/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/londonphonegap/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/londonphonegap/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/londonphonegap/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/londonphonegap/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/londonphonegap/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/londonphonegap/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/londonphonegap/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/londonphonegap/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/londonphonegap/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/londonphonegap/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/londonphonegap/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/londonphonegap/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/londonphonegap/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/londonphonegap/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/londonphonegap/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/londonphonegap/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/londonphonegap/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/londonphonegap/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/londonphonegap/releases{/id}",
			"created_at": "2014-03-25T15:34:40Z",
			"updated_at": "2014-04-26T13:27:54Z",
			"pushed_at": "2014-04-02T01:20:14Z",
			"git_url": "git://github.com/yrezgui/londonphonegap.git",
			"ssh_url": "git@github.com:yrezgui/londonphonegap.git",
			"clone_url": "https://github.com/yrezgui/londonphonegap.git",
			"svn_url": "https://github.com/yrezgui/londonphonegap",
			"homepage": "https://github.com/yrezgui/londonphonegap",
			"size": 840,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "CSS",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 10880500,
			"name": "marked",
			"full_name": "yrezgui/marked",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/marked",
			"description": "A markdown parser and compiler. Built for speed.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/marked",
			"forks_url": "https://api.github.com/repos/yrezgui/marked/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/marked/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/marked/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/marked/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/marked/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/marked/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/marked/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/marked/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/marked/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/marked/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/marked/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/marked/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/marked/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/marked/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/marked/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/marked/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/marked/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/marked/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/marked/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/marked/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/marked/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/marked/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/marked/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/marked/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/marked/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/marked/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/marked/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/marked/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/marked/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/marked/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/marked/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/marked/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/marked/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/marked/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/marked/releases{/id}",
			"created_at": "2013-06-23T08:13:20Z",
			"updated_at": "2013-06-23T08:13:20Z",
			"pushed_at": "2013-06-01T23:53:50Z",
			"git_url": "git://github.com/yrezgui/marked.git",
			"ssh_url": "git@github.com:yrezgui/marked.git",
			"clone_url": "https://github.com/yrezgui/marked.git",
			"svn_url": "https://github.com/yrezgui/marked",
			"homepage": "",
			"size": 376,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 33028195,
			"name": "meolli",
			"full_name": "yrezgui/meolli",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/meolli",
			"description": "",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/meolli",
			"forks_url": "https://api.github.com/repos/yrezgui/meolli/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/meolli/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/meolli/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/meolli/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/meolli/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/meolli/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/meolli/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/meolli/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/meolli/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/meolli/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/meolli/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/meolli/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/meolli/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/meolli/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/meolli/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/meolli/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/meolli/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/meolli/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/meolli/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/meolli/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/meolli/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/meolli/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/meolli/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/meolli/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/meolli/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/meolli/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/meolli/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/meolli/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/meolli/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/meolli/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/meolli/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/meolli/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/meolli/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/meolli/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/meolli/releases{/id}",
			"created_at": "2015-03-28T09:39:10Z",
			"updated_at": "2015-03-29T00:36:27Z",
			"pushed_at": "2015-03-28T09:40:33Z",
			"git_url": "git://github.com/yrezgui/meolli.git",
			"ssh_url": "git@github.com:yrezgui/meolli.git",
			"clone_url": "https://github.com/yrezgui/meolli.git",
			"svn_url": "https://github.com/yrezgui/meolli",
			"homepage": null,
			"size": 120,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 39190619,
			"name": "meowth-ios",
			"full_name": "yrezgui/meowth-ios",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/meowth-ios",
			"description": "iOS app that transcript your voice with IBM Watson Cloud",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/meowth-ios",
			"forks_url": "https://api.github.com/repos/yrezgui/meowth-ios/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/meowth-ios/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/meowth-ios/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/meowth-ios/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/meowth-ios/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/meowth-ios/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/meowth-ios/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/meowth-ios/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/meowth-ios/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/meowth-ios/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/meowth-ios/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/meowth-ios/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/meowth-ios/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/meowth-ios/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/meowth-ios/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/meowth-ios/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/meowth-ios/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/meowth-ios/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/meowth-ios/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/meowth-ios/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/meowth-ios/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/meowth-ios/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/meowth-ios/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/meowth-ios/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/meowth-ios/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/meowth-ios/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/meowth-ios/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/meowth-ios/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/meowth-ios/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/meowth-ios/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/meowth-ios/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/meowth-ios/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/meowth-ios/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/meowth-ios/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/meowth-ios/releases{/id}",
			"created_at": "2015-07-16T10:19:57Z",
			"updated_at": "2015-08-05T00:40:55Z",
			"pushed_at": "2015-07-31T18:26:35Z",
			"git_url": "git://github.com/yrezgui/meowth-ios.git",
			"ssh_url": "git@github.com:yrezgui/meowth-ios.git",
			"clone_url": "https://github.com/yrezgui/meowth-ios.git",
			"svn_url": "https://github.com/yrezgui/meowth-ios",
			"homepage": "",
			"size": 2824,
			"stargazers_count": 5,
			"watchers_count": 5,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 1,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 1,
			"open_issues": 0,
			"watchers": 5,
			"default_branch": "master"
		},
		{
			"id": 39138015,
			"name": "meowth-web",
			"full_name": "yrezgui/meowth-web",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/meowth-web",
			"description": "Webapp speech to text to translate with IBM Watson Cloud",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/meowth-web",
			"forks_url": "https://api.github.com/repos/yrezgui/meowth-web/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/meowth-web/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/meowth-web/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/meowth-web/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/meowth-web/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/meowth-web/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/meowth-web/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/meowth-web/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/meowth-web/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/meowth-web/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/meowth-web/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/meowth-web/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/meowth-web/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/meowth-web/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/meowth-web/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/meowth-web/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/meowth-web/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/meowth-web/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/meowth-web/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/meowth-web/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/meowth-web/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/meowth-web/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/meowth-web/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/meowth-web/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/meowth-web/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/meowth-web/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/meowth-web/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/meowth-web/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/meowth-web/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/meowth-web/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/meowth-web/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/meowth-web/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/meowth-web/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/meowth-web/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/meowth-web/releases{/id}",
			"created_at": "2015-07-15T13:21:40Z",
			"updated_at": "2015-07-16T10:17:15Z",
			"pushed_at": "2015-07-16T10:17:08Z",
			"git_url": "git://github.com/yrezgui/meowth-web.git",
			"ssh_url": "git@github.com:yrezgui/meowth-web.git",
			"clone_url": "https://github.com/yrezgui/meowth-web.git",
			"svn_url": "https://github.com/yrezgui/meowth-web",
			"homepage": "https://www.yrezgui.com/meowth-web",
			"size": 124,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 23159251,
			"name": "mystack",
			"full_name": "yrezgui/mystack",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/mystack",
			"description": "Deploy an app has never been so easy",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/mystack",
			"forks_url": "https://api.github.com/repos/yrezgui/mystack/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/mystack/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/mystack/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/mystack/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/mystack/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/mystack/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/mystack/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/mystack/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/mystack/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/mystack/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/mystack/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/mystack/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/mystack/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/mystack/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/mystack/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/mystack/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/mystack/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/mystack/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/mystack/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/mystack/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/mystack/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/mystack/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/mystack/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/mystack/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/mystack/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/mystack/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/mystack/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/mystack/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/mystack/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/mystack/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/mystack/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/mystack/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/mystack/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/mystack/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/mystack/releases{/id}",
			"created_at": "2014-08-20T18:20:43Z",
			"updated_at": "2014-08-20T18:20:43Z",
			"pushed_at": "2014-09-10T18:24:20Z",
			"git_url": "git://github.com/yrezgui/mystack.git",
			"ssh_url": "git@github.com:yrezgui/mystack.git",
			"clone_url": "https://github.com/yrezgui/mystack.git",
			"svn_url": "https://github.com/yrezgui/mystack",
			"homepage": null,
			"size": 140,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 38768751,
			"name": "napersona",
			"full_name": "yrezgui/napersona",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/napersona",
			"description": "Generate easily your personal website",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/napersona",
			"forks_url": "https://api.github.com/repos/yrezgui/napersona/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/napersona/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/napersona/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/napersona/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/napersona/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/napersona/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/napersona/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/napersona/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/napersona/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/napersona/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/napersona/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/napersona/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/napersona/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/napersona/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/napersona/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/napersona/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/napersona/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/napersona/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/napersona/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/napersona/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/napersona/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/napersona/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/napersona/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/napersona/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/napersona/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/napersona/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/napersona/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/napersona/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/napersona/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/napersona/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/napersona/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/napersona/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/napersona/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/napersona/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/napersona/releases{/id}",
			"created_at": "2015-07-08T17:20:54Z",
			"updated_at": "2015-07-12T15:12:33Z",
			"pushed_at": "2015-08-04T05:40:30Z",
			"git_url": "git://github.com/yrezgui/napersona.git",
			"ssh_url": "git@github.com:yrezgui/napersona.git",
			"clone_url": "https://github.com/yrezgui/napersona.git",
			"svn_url": "https://github.com/yrezgui/napersona",
			"homepage": "",
			"size": 176,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 1,
			"forks": 0,
			"open_issues": 1,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 20482444,
			"name": "ng-cordova",
			"full_name": "yrezgui/ng-cordova",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/ng-cordova",
			"description": "AngularJS Cordova wrappers for common Cordova plugins.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/ng-cordova",
			"forks_url": "https://api.github.com/repos/yrezgui/ng-cordova/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/ng-cordova/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/ng-cordova/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/ng-cordova/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/ng-cordova/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/ng-cordova/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/ng-cordova/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/ng-cordova/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/ng-cordova/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/ng-cordova/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/ng-cordova/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/ng-cordova/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/ng-cordova/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/ng-cordova/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/ng-cordova/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/ng-cordova/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/ng-cordova/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/ng-cordova/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/ng-cordova/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/ng-cordova/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/ng-cordova/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/ng-cordova/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/ng-cordova/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/ng-cordova/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/ng-cordova/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/ng-cordova/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/ng-cordova/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/ng-cordova/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/ng-cordova/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/ng-cordova/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/ng-cordova/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/ng-cordova/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/ng-cordova/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/ng-cordova/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/ng-cordova/releases{/id}",
			"created_at": "2014-06-04T12:23:15Z",
			"updated_at": "2014-06-04T13:08:18Z",
			"pushed_at": "2014-06-04T13:08:18Z",
			"git_url": "git://github.com/yrezgui/ng-cordova.git",
			"ssh_url": "git@github.com:yrezgui/ng-cordova.git",
			"clone_url": "https://github.com/yrezgui/ng-cordova.git",
			"svn_url": "https://github.com/yrezgui/ng-cordova",
			"homepage": "http://ngcordova.com/",
			"size": 3297,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 13398508,
			"name": "node-red",
			"full_name": "yrezgui/node-red",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/node-red",
			"description": "A visual tool for wiring the Internet of Things",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/node-red",
			"forks_url": "https://api.github.com/repos/yrezgui/node-red/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/node-red/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/node-red/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/node-red/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/node-red/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/node-red/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/node-red/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/node-red/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/node-red/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/node-red/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/node-red/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/node-red/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/node-red/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/node-red/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/node-red/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/node-red/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/node-red/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/node-red/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/node-red/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/node-red/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/node-red/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/node-red/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/node-red/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/node-red/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/node-red/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/node-red/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/node-red/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/node-red/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/node-red/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/node-red/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/node-red/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/node-red/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/node-red/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/node-red/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/node-red/releases{/id}",
			"created_at": "2013-10-07T23:26:48Z",
			"updated_at": "2013-10-07T23:26:48Z",
			"pushed_at": "2013-10-07T22:37:53Z",
			"git_url": "git://github.com/yrezgui/node-red.git",
			"ssh_url": "git@github.com:yrezgui/node-red.git",
			"clone_url": "https://github.com/yrezgui/node-red.git",
			"svn_url": "https://github.com/yrezgui/node-red",
			"homepage": "http://nodered.org",
			"size": 2245,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 24322615,
			"name": "oplain",
			"full_name": "yrezgui/oplain",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/oplain",
			"description": "Read website pages offline",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/oplain",
			"forks_url": "https://api.github.com/repos/yrezgui/oplain/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/oplain/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/oplain/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/oplain/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/oplain/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/oplain/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/oplain/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/oplain/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/oplain/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/oplain/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/oplain/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/oplain/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/oplain/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/oplain/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/oplain/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/oplain/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/oplain/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/oplain/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/oplain/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/oplain/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/oplain/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/oplain/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/oplain/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/oplain/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/oplain/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/oplain/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/oplain/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/oplain/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/oplain/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/oplain/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/oplain/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/oplain/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/oplain/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/oplain/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/oplain/releases{/id}",
			"created_at": "2014-09-22T09:34:37Z",
			"updated_at": "2014-11-01T00:17:01Z",
			"pushed_at": "2014-11-01T00:17:01Z",
			"git_url": "git://github.com/yrezgui/oplain.git",
			"ssh_url": "git@github.com:yrezgui/oplain.git",
			"clone_url": "https://github.com/yrezgui/oplain.git",
			"svn_url": "https://github.com/yrezgui/oplain",
			"homepage": null,
			"size": 804,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 10759554,
			"name": "pouchdb",
			"full_name": "yrezgui/pouchdb",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/pouchdb",
			"description": "PouchDB is a pocket-sized database.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/pouchdb",
			"forks_url": "https://api.github.com/repos/yrezgui/pouchdb/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/pouchdb/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/pouchdb/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/pouchdb/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/pouchdb/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/pouchdb/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/pouchdb/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/pouchdb/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/pouchdb/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/pouchdb/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/pouchdb/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/pouchdb/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/pouchdb/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/pouchdb/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/pouchdb/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/pouchdb/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/pouchdb/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/pouchdb/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/pouchdb/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/pouchdb/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/pouchdb/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/pouchdb/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/pouchdb/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/pouchdb/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/pouchdb/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/pouchdb/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/pouchdb/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/pouchdb/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/pouchdb/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/pouchdb/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/pouchdb/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/pouchdb/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/pouchdb/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/pouchdb/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/pouchdb/releases{/id}",
			"created_at": "2013-06-18T09:37:22Z",
			"updated_at": "2014-04-03T02:49:43Z",
			"pushed_at": "2013-06-18T00:43:46Z",
			"git_url": "git://github.com/yrezgui/pouchdb.git",
			"ssh_url": "git@github.com:yrezgui/pouchdb.git",
			"clone_url": "https://github.com/yrezgui/pouchdb.git",
			"svn_url": "https://github.com/yrezgui/pouchdb",
			"homepage": "",
			"size": 32817,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 9544996,
			"name": "project-samples",
			"full_name": "yrezgui/project-samples",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/project-samples",
			"description": "List of examples of little projects in NodeJS, Phonegap, Chrome Apps, etc.. Usefull for not reinventing the wheel",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/project-samples",
			"forks_url": "https://api.github.com/repos/yrezgui/project-samples/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/project-samples/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/project-samples/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/project-samples/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/project-samples/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/project-samples/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/project-samples/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/project-samples/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/project-samples/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/project-samples/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/project-samples/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/project-samples/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/project-samples/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/project-samples/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/project-samples/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/project-samples/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/project-samples/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/project-samples/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/project-samples/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/project-samples/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/project-samples/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/project-samples/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/project-samples/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/project-samples/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/project-samples/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/project-samples/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/project-samples/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/project-samples/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/project-samples/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/project-samples/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/project-samples/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/project-samples/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/project-samples/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/project-samples/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/project-samples/releases{/id}",
			"created_at": "2013-04-19T12:26:23Z",
			"updated_at": "2014-04-06T12:08:42Z",
			"pushed_at": "2013-04-24T12:55:47Z",
			"git_url": "git://github.com/yrezgui/project-samples.git",
			"ssh_url": "git@github.com:yrezgui/project-samples.git",
			"clone_url": "https://github.com/yrezgui/project-samples.git",
			"svn_url": "https://github.com/yrezgui/project-samples",
			"homepage": "",
			"size": 8820,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Objective-C",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10584671,
			"name": "projet-filrouge",
			"full_name": "yrezgui/projet-filrouge",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/projet-filrouge",
			"description": "School project for a medic visit reservation management system. Built with AngularJS, NodeJS and MySQL. Made with three other classmates.",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/projet-filrouge",
			"forks_url": "https://api.github.com/repos/yrezgui/projet-filrouge/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/projet-filrouge/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/projet-filrouge/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/projet-filrouge/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/projet-filrouge/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/projet-filrouge/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/projet-filrouge/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/projet-filrouge/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/projet-filrouge/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/projet-filrouge/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/projet-filrouge/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/projet-filrouge/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/projet-filrouge/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/projet-filrouge/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/projet-filrouge/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/projet-filrouge/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/projet-filrouge/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/projet-filrouge/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/projet-filrouge/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/projet-filrouge/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/projet-filrouge/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/projet-filrouge/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/projet-filrouge/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/projet-filrouge/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/projet-filrouge/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/projet-filrouge/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/projet-filrouge/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/projet-filrouge/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/projet-filrouge/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/projet-filrouge/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/projet-filrouge/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/projet-filrouge/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/projet-filrouge/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/projet-filrouge/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/projet-filrouge/releases{/id}",
			"created_at": "2013-06-09T15:02:05Z",
			"updated_at": "2013-12-02T21:54:50Z",
			"pushed_at": "2013-06-09T15:03:02Z",
			"git_url": "git://github.com/yrezgui/projet-filrouge.git",
			"ssh_url": "git@github.com:yrezgui/projet-filrouge.git",
			"clone_url": "https://github.com/yrezgui/projet-filrouge.git",
			"svn_url": "https://github.com/yrezgui/projet-filrouge",
			"homepage": null,
			"size": 1097,
			"stargazers_count": 1,
			"watchers_count": 1,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 2,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 2,
			"open_issues": 0,
			"watchers": 1,
			"default_branch": "master"
		},
		{
			"id": 10869888,
			"name": "pure",
			"full_name": "yrezgui/pure",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/pure",
			"description": "A set of small, responsive CSS modules that you can use in every web project.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/pure",
			"forks_url": "https://api.github.com/repos/yrezgui/pure/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/pure/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/pure/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/pure/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/pure/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/pure/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/pure/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/pure/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/pure/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/pure/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/pure/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/pure/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/pure/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/pure/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/pure/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/pure/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/pure/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/pure/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/pure/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/pure/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/pure/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/pure/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/pure/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/pure/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/pure/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/pure/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/pure/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/pure/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/pure/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/pure/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/pure/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/pure/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/pure/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/pure/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/pure/releases{/id}",
			"created_at": "2013-06-22T17:54:50Z",
			"updated_at": "2014-08-26T18:06:16Z",
			"pushed_at": "2013-06-20T02:15:56Z",
			"git_url": "git://github.com/yrezgui/pure.git",
			"ssh_url": "git@github.com:yrezgui/pure.git",
			"clone_url": "https://github.com/yrezgui/pure.git",
			"svn_url": "https://github.com/yrezgui/pure",
			"homepage": "http://purecss.io/",
			"size": 211,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10937105,
			"name": "q",
			"full_name": "yrezgui/q",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/q",
			"description": "A tool for making and composing asynchronous promises in JavaScript",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/q",
			"forks_url": "https://api.github.com/repos/yrezgui/q/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/q/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/q/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/q/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/q/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/q/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/q/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/q/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/q/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/q/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/q/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/q/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/q/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/q/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/q/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/q/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/q/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/q/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/q/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/q/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/q/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/q/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/q/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/q/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/q/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/q/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/q/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/q/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/q/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/q/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/q/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/q/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/q/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/q/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/q/releases{/id}",
			"created_at": "2013-06-25T12:03:20Z",
			"updated_at": "2013-06-25T12:03:20Z",
			"pushed_at": "2013-06-21T17:39:12Z",
			"git_url": "git://github.com/yrezgui/q.git",
			"ssh_url": "git@github.com:yrezgui/q.git",
			"clone_url": "https://github.com/yrezgui/q.git",
			"svn_url": "https://github.com/yrezgui/q",
			"homepage": "http://documentup.com/kriskowal/q/",
			"size": 935,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 39195869,
			"name": "react-native-audio-recorder",
			"full_name": "yrezgui/react-native-audio-recorder",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/react-native-audio-recorder",
			"description": "Native audio recorder module in Objective-C for React-Native",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder",
			"forks_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/react-native-audio-recorder/releases{/id}",
			"created_at": "2015-07-16T12:36:15Z",
			"updated_at": "2015-07-16T19:08:37Z",
			"pushed_at": "2015-07-16T19:08:37Z",
			"git_url": "git://github.com/yrezgui/react-native-audio-recorder.git",
			"ssh_url": "git@github.com:yrezgui/react-native-audio-recorder.git",
			"clone_url": "https://github.com/yrezgui/react-native-audio-recorder.git",
			"svn_url": "https://github.com/yrezgui/react-native-audio-recorder",
			"homepage": null,
			"size": 136,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "Objective-C",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11684503,
			"name": "regexin",
			"full_name": "yrezgui/regexin",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/regexin",
			"description": "Simple WebApp to generate easily regex",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/regexin",
			"forks_url": "https://api.github.com/repos/yrezgui/regexin/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/regexin/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/regexin/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/regexin/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/regexin/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/regexin/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/regexin/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/regexin/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/regexin/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/regexin/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/regexin/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/regexin/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/regexin/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/regexin/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/regexin/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/regexin/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/regexin/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/regexin/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/regexin/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/regexin/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/regexin/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/regexin/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/regexin/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/regexin/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/regexin/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/regexin/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/regexin/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/regexin/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/regexin/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/regexin/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/regexin/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/regexin/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/regexin/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/regexin/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/regexin/releases{/id}",
			"created_at": "2013-07-26T11:39:38Z",
			"updated_at": "2013-12-13T07:58:25Z",
			"pushed_at": "2013-07-26T11:39:38Z",
			"git_url": "git://github.com/yrezgui/regexin.git",
			"ssh_url": "git@github.com:yrezgui/regexin.git",
			"clone_url": "https://github.com/yrezgui/regexin.git",
			"svn_url": "https://github.com/yrezgui/regexin",
			"homepage": null,
			"size": 116,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 14718380,
			"name": "reportr",
			"full_name": "yrezgui/reportr",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/reportr",
			"description": "Your life's personal dashboard.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/reportr",
			"forks_url": "https://api.github.com/repos/yrezgui/reportr/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/reportr/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/reportr/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/reportr/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/reportr/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/reportr/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/reportr/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/reportr/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/reportr/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/reportr/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/reportr/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/reportr/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/reportr/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/reportr/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/reportr/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/reportr/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/reportr/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/reportr/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/reportr/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/reportr/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/reportr/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/reportr/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/reportr/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/reportr/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/reportr/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/reportr/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/reportr/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/reportr/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/reportr/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/reportr/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/reportr/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/reportr/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/reportr/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/reportr/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/reportr/releases{/id}",
			"created_at": "2013-11-26T13:59:10Z",
			"updated_at": "2014-06-26T21:14:47Z",
			"pushed_at": "2013-11-26T00:02:01Z",
			"git_url": "git://github.com/yrezgui/reportr.git",
			"ssh_url": "git@github.com:yrezgui/reportr.git",
			"clone_url": "https://github.com/yrezgui/reportr.git",
			"svn_url": "https://github.com/yrezgui/reportr",
			"homepage": "www.reportr.io",
			"size": 2892,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 9538711,
			"name": "restful-model",
			"full_name": "yrezgui/restful-model",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/restful-model",
			"description": "A model generator that brings ActiveModel like functionality to javascript, but Restful by default.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/restful-model",
			"forks_url": "https://api.github.com/repos/yrezgui/restful-model/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/restful-model/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/restful-model/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/restful-model/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/restful-model/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/restful-model/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/restful-model/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/restful-model/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/restful-model/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/restful-model/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/restful-model/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/restful-model/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/restful-model/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/restful-model/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/restful-model/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/restful-model/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/restful-model/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/restful-model/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/restful-model/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/restful-model/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/restful-model/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/restful-model/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/restful-model/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/restful-model/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/restful-model/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/restful-model/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/restful-model/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/restful-model/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/restful-model/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/restful-model/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/restful-model/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/restful-model/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/restful-model/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/restful-model/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/restful-model/releases{/id}",
			"created_at": "2013-04-19T05:42:07Z",
			"updated_at": "2013-04-19T05:42:07Z",
			"pushed_at": "2013-04-18T17:10:09Z",
			"git_url": "git://github.com/yrezgui/restful-model.git",
			"ssh_url": "git@github.com:yrezgui/restful-model.git",
			"clone_url": "https://github.com/yrezgui/restful-model.git",
			"svn_url": "https://github.com/yrezgui/restful-model",
			"homepage": null,
			"size": 72,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 15852039,
			"name": "schema-inspector",
			"full_name": "yrezgui/schema-inspector",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/schema-inspector",
			"description": "Schema-Inspector is a powerful tool to sanitize and validate JS objects.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/schema-inspector",
			"forks_url": "https://api.github.com/repos/yrezgui/schema-inspector/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/schema-inspector/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/schema-inspector/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/schema-inspector/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/schema-inspector/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/schema-inspector/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/schema-inspector/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/schema-inspector/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/schema-inspector/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/schema-inspector/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/schema-inspector/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/schema-inspector/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/schema-inspector/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/schema-inspector/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/schema-inspector/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/schema-inspector/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/schema-inspector/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/schema-inspector/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/schema-inspector/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/schema-inspector/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/schema-inspector/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/schema-inspector/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/schema-inspector/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/schema-inspector/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/schema-inspector/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/schema-inspector/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/schema-inspector/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/schema-inspector/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/schema-inspector/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/schema-inspector/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/schema-inspector/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/schema-inspector/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/schema-inspector/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/schema-inspector/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/schema-inspector/releases{/id}",
			"created_at": "2014-01-12T22:13:16Z",
			"updated_at": "2014-01-12T22:57:43Z",
			"pushed_at": "2014-01-12T22:56:59Z",
			"git_url": "git://github.com/yrezgui/schema-inspector.git",
			"ssh_url": "git@github.com:yrezgui/schema-inspector.git",
			"clone_url": "https://github.com/yrezgui/schema-inspector.git",
			"svn_url": "https://github.com/yrezgui/schema-inspector",
			"homepage": "http://atinux.github.io/schema-inspector",
			"size": 649,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 20405801,
			"name": "shigoto",
			"full_name": "yrezgui/shigoto",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/shigoto",
			"description": "Get insights of jobs in startups (data by Angel.co)",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/shigoto",
			"forks_url": "https://api.github.com/repos/yrezgui/shigoto/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/shigoto/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/shigoto/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/shigoto/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/shigoto/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/shigoto/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/shigoto/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/shigoto/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/shigoto/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/shigoto/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/shigoto/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/shigoto/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/shigoto/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/shigoto/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/shigoto/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/shigoto/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/shigoto/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/shigoto/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/shigoto/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/shigoto/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/shigoto/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/shigoto/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/shigoto/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/shigoto/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/shigoto/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/shigoto/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/shigoto/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/shigoto/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/shigoto/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/shigoto/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/shigoto/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/shigoto/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/shigoto/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/shigoto/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/shigoto/releases{/id}",
			"created_at": "2014-06-02T13:57:52Z",
			"updated_at": "2014-11-01T00:24:36Z",
			"pushed_at": "2014-11-01T00:24:35Z",
			"git_url": "git://github.com/yrezgui/shigoto.git",
			"ssh_url": "git@github.com:yrezgui/shigoto.git",
			"clone_url": "https://github.com/yrezgui/shigoto.git",
			"svn_url": "https://github.com/yrezgui/shigoto",
			"homepage": null,
			"size": 176,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 29737422,
			"name": "Skeleton",
			"full_name": "yrezgui/Skeleton",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Skeleton",
			"description": "Skeleton: A Dead Simple, Responsive Boilerplate for Mobile-Friendly Development",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Skeleton",
			"forks_url": "https://api.github.com/repos/yrezgui/Skeleton/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Skeleton/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Skeleton/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Skeleton/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Skeleton/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Skeleton/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Skeleton/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Skeleton/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Skeleton/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Skeleton/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Skeleton/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Skeleton/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Skeleton/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Skeleton/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Skeleton/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Skeleton/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Skeleton/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Skeleton/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Skeleton/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Skeleton/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Skeleton/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Skeleton/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Skeleton/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Skeleton/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Skeleton/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Skeleton/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Skeleton/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Skeleton/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Skeleton/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Skeleton/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Skeleton/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Skeleton/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Skeleton/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Skeleton/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Skeleton/releases{/id}",
			"created_at": "2015-01-23T14:58:42Z",
			"updated_at": "2015-01-23T15:03:38Z",
			"pushed_at": "2015-01-23T15:03:38Z",
			"git_url": "git://github.com/yrezgui/Skeleton.git",
			"ssh_url": "git@github.com:yrezgui/Skeleton.git",
			"clone_url": "https://github.com/yrezgui/Skeleton.git",
			"svn_url": "https://github.com/yrezgui/Skeleton",
			"homepage": "http://www.getskeleton.com",
			"size": 2423,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "CSS",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 23078270,
			"name": "small-n-flat",
			"full_name": "yrezgui/small-n-flat",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/small-n-flat",
			"description": "svg icons on a 24px grid",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/small-n-flat",
			"forks_url": "https://api.github.com/repos/yrezgui/small-n-flat/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/small-n-flat/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/small-n-flat/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/small-n-flat/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/small-n-flat/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/small-n-flat/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/small-n-flat/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/small-n-flat/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/small-n-flat/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/small-n-flat/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/small-n-flat/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/small-n-flat/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/small-n-flat/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/small-n-flat/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/small-n-flat/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/small-n-flat/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/small-n-flat/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/small-n-flat/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/small-n-flat/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/small-n-flat/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/small-n-flat/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/small-n-flat/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/small-n-flat/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/small-n-flat/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/small-n-flat/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/small-n-flat/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/small-n-flat/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/small-n-flat/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/small-n-flat/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/small-n-flat/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/small-n-flat/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/small-n-flat/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/small-n-flat/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/small-n-flat/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/small-n-flat/releases{/id}",
			"created_at": "2014-08-18T16:25:55Z",
			"updated_at": "2014-08-18T16:25:51Z",
			"pushed_at": "2014-08-19T15:35:29Z",
			"git_url": "git://github.com/yrezgui/small-n-flat.git",
			"ssh_url": "git@github.com:yrezgui/small-n-flat.git",
			"clone_url": "https://github.com/yrezgui/small-n-flat.git",
			"svn_url": "https://github.com/yrezgui/small-n-flat",
			"homepage": null,
			"size": 10264,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 10813911,
			"name": "stitches",
			"full_name": "yrezgui/stitches",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/stitches",
			"description": "HTML5 Sprite Sheet Generator",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/stitches",
			"forks_url": "https://api.github.com/repos/yrezgui/stitches/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/stitches/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/stitches/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/stitches/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/stitches/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/stitches/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/stitches/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/stitches/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/stitches/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/stitches/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/stitches/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/stitches/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/stitches/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/stitches/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/stitches/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/stitches/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/stitches/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/stitches/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/stitches/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/stitches/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/stitches/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/stitches/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/stitches/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/stitches/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/stitches/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/stitches/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/stitches/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/stitches/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/stitches/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/stitches/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/stitches/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/stitches/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/stitches/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/stitches/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/stitches/releases{/id}",
			"created_at": "2013-06-20T06:49:16Z",
			"updated_at": "2013-06-20T06:49:16Z",
			"pushed_at": "2013-05-04T13:48:01Z",
			"git_url": "git://github.com/yrezgui/stitches.git",
			"ssh_url": "git@github.com:yrezgui/stitches.git",
			"clone_url": "https://github.com/yrezgui/stitches.git",
			"svn_url": "https://github.com/yrezgui/stitches",
			"homepage": "draeton.github.io/stitches",
			"size": 8014,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "JavaScript",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": false,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 24141495,
			"name": "store-that-bucket",
			"full_name": "yrezgui/store-that-bucket",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/store-that-bucket",
			"description": "File Manager for Google Cloud Storage",
			"fork": false,
			"url": "https://api.github.com/repos/yrezgui/store-that-bucket",
			"forks_url": "https://api.github.com/repos/yrezgui/store-that-bucket/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/store-that-bucket/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/store-that-bucket/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/store-that-bucket/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/store-that-bucket/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/store-that-bucket/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/store-that-bucket/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/store-that-bucket/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/store-that-bucket/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/store-that-bucket/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/store-that-bucket/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/store-that-bucket/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/store-that-bucket/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/store-that-bucket/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/store-that-bucket/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/store-that-bucket/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/store-that-bucket/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/store-that-bucket/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/store-that-bucket/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/store-that-bucket/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/store-that-bucket/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/store-that-bucket/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/store-that-bucket/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/store-that-bucket/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/store-that-bucket/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/store-that-bucket/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/store-that-bucket/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/store-that-bucket/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/store-that-bucket/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/store-that-bucket/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/store-that-bucket/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/store-that-bucket/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/store-that-bucket/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/store-that-bucket/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/store-that-bucket/releases{/id}",
			"created_at": "2014-09-17T11:14:17Z",
			"updated_at": "2014-09-17T11:14:17Z",
			"pushed_at": "2014-09-17T11:14:17Z",
			"git_url": "git://github.com/yrezgui/store-that-bucket.git",
			"ssh_url": "git@github.com:yrezgui/store-that-bucket.git",
			"clone_url": "https://github.com/yrezgui/store-that-bucket.git",
			"svn_url": "https://github.com/yrezgui/store-that-bucket",
			"homepage": null,
			"size": 0,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": null,
			"has_issues": true,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": false,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		},
		{
			"id": 11194464,
			"name": "Style-Guide-Boilerplate",
			"full_name": "yrezgui/Style-Guide-Boilerplate",
			"owner": {
				"login": "yrezgui",
				"id": 1113976,
				"avatar_url": "https://avatars.githubusercontent.com/u/1113976?v=3",
				"gravatar_id": "",
				"url": "https://api.github.com/users/yrezgui",
				"html_url": "https://github.com/yrezgui",
				"followers_url": "https://api.github.com/users/yrezgui/followers",
				"following_url": "https://api.github.com/users/yrezgui/following{/other_user}",
				"gists_url": "https://api.github.com/users/yrezgui/gists{/gist_id}",
				"starred_url": "https://api.github.com/users/yrezgui/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/yrezgui/subscriptions",
				"organizations_url": "https://api.github.com/users/yrezgui/orgs",
				"repos_url": "https://api.github.com/users/yrezgui/repos",
				"events_url": "https://api.github.com/users/yrezgui/events{/privacy}",
				"received_events_url": "https://api.github.com/users/yrezgui/received_events",
				"type": "User",
				"site_admin": false
			},
			"private": false,
			"html_url": "https://github.com/yrezgui/Style-Guide-Boilerplate",
			"description": "A starting point for crafting web style guides.",
			"fork": true,
			"url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate",
			"forks_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/forks",
			"keys_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/keys{/key_id}",
			"collaborators_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/collaborators{/collaborator}",
			"teams_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/teams",
			"hooks_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/hooks",
			"issue_events_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/issues/events{/number}",
			"events_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/events",
			"assignees_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/assignees{/user}",
			"branches_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/branches{/branch}",
			"tags_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/tags",
			"blobs_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/git/blobs{/sha}",
			"git_tags_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/git/tags{/sha}",
			"git_refs_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/git/refs{/sha}",
			"trees_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/git/trees{/sha}",
			"statuses_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/statuses/{sha}",
			"languages_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/languages",
			"stargazers_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/stargazers",
			"contributors_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/contributors",
			"subscribers_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/subscribers",
			"subscription_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/subscription",
			"commits_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/commits{/sha}",
			"git_commits_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/git/commits{/sha}",
			"comments_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/comments{/number}",
			"issue_comment_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/issues/comments{/number}",
			"contents_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/contents/{+path}",
			"compare_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/compare/{base}...{head}",
			"merges_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/merges",
			"archive_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/{archive_format}{/ref}",
			"downloads_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/downloads",
			"issues_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/issues{/number}",
			"pulls_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/pulls{/number}",
			"milestones_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/milestones{/number}",
			"notifications_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/notifications{?since,all,participating}",
			"labels_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/labels{/name}",
			"releases_url": "https://api.github.com/repos/yrezgui/Style-Guide-Boilerplate/releases{/id}",
			"created_at": "2013-07-05T07:54:56Z",
			"updated_at": "2013-07-05T07:54:56Z",
			"pushed_at": "2013-06-18T19:15:43Z",
			"git_url": "git://github.com/yrezgui/Style-Guide-Boilerplate.git",
			"ssh_url": "git@github.com:yrezgui/Style-Guide-Boilerplate.git",
			"clone_url": "https://github.com/yrezgui/Style-Guide-Boilerplate.git",
			"svn_url": "https://github.com/yrezgui/Style-Guide-Boilerplate",
			"homepage": "http://bjankord.github.io/Style-Guide-Boilerplate/",
			"size": 175,
			"stargazers_count": 0,
			"watchers_count": 0,
			"language": "PHP",
			"has_issues": false,
			"has_downloads": true,
			"has_wiki": true,
			"has_pages": true,
			"forks_count": 0,
			"mirror_url": null,
			"open_issues_count": 0,
			"forks": 0,
			"open_issues": 0,
			"watchers": 0,
			"default_branch": "master"
		}
	]

/***/ }
/******/ ]);